apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/2997
    gateway.networking.k8s.io/bundle-version: v1.1.0
    gateway.networking.k8s.io/channel: standard
  creationTimestamp: null
  name: gatewayclasses.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: GatewayClass
    listKind: GatewayClassList
    plural: gatewayclasses
    shortNames:
    - gc
    singular: gatewayclass
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.controllerName
      name: Controller
      type: string
    - jsonPath: .status.conditions[?(@.type=="Accepted")].status
      name: Accepted
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.description
      name: Description
      priority: 1
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          GatewayClass describes a class of Gateways available to the user for creating
          Gateway resources.


          It is recommended that this resource be used as a template for Gateways. This
          means that a Gateway is based on the state of the GatewayClass at the time it
          was created and changes to the GatewayClass or associated parameters are not
          propagated down to existing Gateways. This recommendation is intended to
          limit the blast radius of changes to GatewayClass or associated parameters.
          If implementations choose to propagate GatewayClass changes to existing
          Gateways, that MUST be clearly documented by the implementation.


          Whenever one or more Gateways are using a GatewayClass, implementations SHOULD
          add the `gateway-exists-finalizer.gateway.networking.k8s.io` finalizer on the
          associated GatewayClass. This ensures that a GatewayClass associated with a
          Gateway is not deleted while in use.


          GatewayClass is a Cluster level resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of GatewayClass.
            properties:
              controllerName:
                description: |-
                  ControllerName is the name of the controller that is managing Gateways of
                  this class. The value of this field MUST be a domain prefixed path.


                  Example: "example.net/gateway-controller".


                  This field is not mutable and cannot be empty.


                  Support: Core
                maxLength: 253
                minLength: 1
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              description:
                description: Description helps describe a GatewayClass with more details.
                maxLength: 64
                type: string
              parametersRef:
                description: |-
                  ParametersRef is a reference to a resource that contains the configuration
                  parameters corresponding to the GatewayClass. This is optional if the
                  controller does not require any additional configuration.


                  ParametersRef can reference a standard Kubernetes resource, i.e. ConfigMap,
                  or an implementation-specific custom resource. The resource can be
                  cluster-scoped or namespace-scoped.


                  If the referent cannot be found, the GatewayClass's "InvalidParameters"
                  status condition will be true.


                  A Gateway for this GatewayClass may provide its own `parametersRef`. When both are specified,
                  the merging behavior is implementation specific.
                  It is generally recommended that GatewayClass provides defaults that can be overridden by a Gateway.


                  Support: Implementation-specific
                properties:
                  group:
                    description: Group is the group of the referent.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: Kind is kind of the referent.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: Name is the name of the referent.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: |-
                      Namespace is the namespace of the referent.
                      This field is required when referring to a Namespace-scoped resource and
                      MUST be unset when referring to a Cluster-scoped resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - group
                - kind
                - name
                type: object
            required:
            - controllerName
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Waiting
                status: Unknown
                type: Accepted
            description: |-
              Status defines the current state of GatewayClass.


              Implementations MUST populate status on all GatewayClass resources which
              specify their controller name.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Accepted
                description: |-
                  Conditions is the current status from the controller for
                  this GatewayClass.


                  Controllers should prefer to publish conditions using values
                  of GatewayClassConditionType for the type of each Condition.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.controllerName
      name: Controller
      type: string
    - jsonPath: .status.conditions[?(@.type=="Accepted")].status
      name: Accepted
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.description
      name: Description
      priority: 1
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          GatewayClass describes a class of Gateways available to the user for creating
          Gateway resources.


          It is recommended that this resource be used as a template for Gateways. This
          means that a Gateway is based on the state of the GatewayClass at the time it
          was created and changes to the GatewayClass or associated parameters are not
          propagated down to existing Gateways. This recommendation is intended to
          limit the blast radius of changes to GatewayClass or associated parameters.
          If implementations choose to propagate GatewayClass changes to existing
          Gateways, that MUST be clearly documented by the implementation.


          Whenever one or more Gateways are using a GatewayClass, implementations SHOULD
          add the `gateway-exists-finalizer.gateway.networking.k8s.io` finalizer on the
          associated GatewayClass. This ensures that a GatewayClass associated with a
          Gateway is not deleted while in use.


          GatewayClass is a Cluster level resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of GatewayClass.
            properties:
              controllerName:
                description: |-
                  ControllerName is the name of the controller that is managing Gateways of
                  this class. The value of this field MUST be a domain prefixed path.


                  Example: "example.net/gateway-controller".


                  This field is not mutable and cannot be empty.


                  Support: Core
                maxLength: 253
                minLength: 1
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              description:
                description: Description helps describe a GatewayClass with more details.
                maxLength: 64
                type: string
              parametersRef:
                description: |-
                  ParametersRef is a reference to a resource that contains the configuration
                  parameters corresponding to the GatewayClass. This is optional if the
                  controller does not require any additional configuration.


                  ParametersRef can reference a standard Kubernetes resource, i.e. ConfigMap,
                  or an implementation-specific custom resource. The resource can be
                  cluster-scoped or namespace-scoped.


                  If the referent cannot be found, the GatewayClass's "InvalidParameters"
                  status condition will be true.


                  A Gateway for this GatewayClass may provide its own `parametersRef`. When both are specified,
                  the merging behavior is implementation specific.
                  It is generally recommended that GatewayClass provides defaults that can be overridden by a Gateway.


                  Support: Implementation-specific
                properties:
                  group:
                    description: Group is the group of the referent.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: Kind is kind of the referent.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: Name is the name of the referent.
                    maxLength: 253
                    minLength: 1
                    type: string
                  namespace:
                    description: |-
                      Namespace is the namespace of the referent.
                      This field is required when referring to a Namespace-scoped resource and
                      MUST be unset when referring to a Cluster-scoped resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                required:
                - group
                - kind
                - name
                type: object
            required:
            - controllerName
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Waiting
                status: Unknown
                type: Accepted
            description: |-
              Status defines the current state of GatewayClass.


              Implementations MUST populate status on all GatewayClass resources which
              specify their controller name.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Accepted
                description: |-
                  Conditions is the current status from the controller for
                  this GatewayClass.


                  Controllers should prefer to publish conditions using values
                  of GatewayClassConditionType for the type of each Condition.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/2997
    gateway.networking.k8s.io/bundle-version: v1.1.0
    gateway.networking.k8s.io/channel: standard
  creationTimestamp: null
  name: gateways.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: Gateway
    listKind: GatewayList
    plural: gateways
    shortNames:
    - gtw
    singular: gateway
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.gatewayClassName
      name: Class
      type: string
    - jsonPath: .status.addresses[*].value
      name: Address
      type: string
    - jsonPath: .status.conditions[?(@.type=="Programmed")].status
      name: Programmed
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          Gateway represents an instance of a service-traffic handling infrastructure
          by binding Listeners to a set of IP addresses.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Gateway.
            properties:
              addresses:
                description: |+
                  Addresses requested for this Gateway. This is optional and behavior can
                  depend on the implementation. If a value is set in the spec and the
                  requested address is invalid or unavailable, the implementation MUST
                  indicate this in the associated entry in GatewayStatus.Addresses.


                  The Addresses field represents a request for the address(es) on the
                  "outside of the Gateway", that traffic bound for this Gateway will use.
                  This could be the IP address or hostname of an external load balancer or
                  other networking infrastructure, or some other address that traffic will
                  be sent to.


                  If no Addresses are specified, the implementation MAY schedule the
                  Gateway in an implementation-specific manner, assigning an appropriate
                  set of Addresses.


                  The implementation MUST bind all Listeners to every GatewayAddress that
                  it assigns to the Gateway and add a corresponding entry in
                  GatewayStatus.Addresses.


                  Support: Extended


                items:
                  description: GatewayAddress describes an address that can be bound
                    to a Gateway.
                  oneOf:
                  - properties:
                      type:
                        enum:
                        - IPAddress
                      value:
                        anyOf:
                        - format: ipv4
                        - format: ipv6
                  - properties:
                      type:
                        not:
                          enum:
                          - IPAddress
                  properties:
                    type:
                      default: IPAddress
                      description: Type of the address.
                      maxLength: 253
                      minLength: 1
                      pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    value:
                      description: |-
                        Value of the address. The validity of the values will depend
                        on the type and support by the controller.


                        Examples: `1.2.3.4`, `128::1`, `my-ip-address`.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - value
                  type: object
                  x-kubernetes-validations:
                  - message: Hostname value must only contain valid characters (matching
                      ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$)
                    rule: 'self.type == ''Hostname'' ? self.value.matches(r"""^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"""):
                      true'
                maxItems: 16
                type: array
                x-kubernetes-validations:
                - message: IPAddress values must be unique
                  rule: 'self.all(a1, a1.type == ''IPAddress'' ? self.exists_one(a2,
                    a2.type == a1.type && a2.value == a1.value) : true )'
                - message: Hostname values must be unique
                  rule: 'self.all(a1, a1.type == ''Hostname'' ? self.exists_one(a2,
                    a2.type == a1.type && a2.value == a1.value) : true )'
              gatewayClassName:
                description: |-
                  GatewayClassName used for this Gateway. This is the name of a
                  GatewayClass resource.
                maxLength: 253
                minLength: 1
                type: string
              listeners:
                description: |-
                  Listeners associated with this Gateway. Listeners define
                  logical endpoints that are bound on this Gateway's addresses.
                  At least one Listener MUST be specified.


                  Each Listener in a set of Listeners (for example, in a single Gateway)
                  MUST be _distinct_, in that a traffic flow MUST be able to be assigned to
                  exactly one listener. (This section uses "set of Listeners" rather than
                  "Listeners in a single Gateway" because implementations MAY merge configuration
                  from multiple Gateways onto a single data plane, and these rules _also_
                  apply in that case).


                  Practically, this means that each listener in a set MUST have a unique
                  combination of Port, Protocol, and, if supported by the protocol, Hostname.


                  Some combinations of port, protocol, and TLS settings are considered
                  Core support and MUST be supported by implementations based on their
                  targeted conformance profile:


                  HTTP Profile


                  1. HTTPRoute, Port: 80, Protocol: HTTP
                  2. HTTPRoute, Port: 443, Protocol: HTTPS, TLS Mode: Terminate, TLS keypair provided


                  TLS Profile


                  1. TLSRoute, Port: 443, Protocol: TLS, TLS Mode: Passthrough


                  "Distinct" Listeners have the following property:


                  The implementation can match inbound requests to a single distinct
                  Listener. When multiple Listeners share values for fields (for
                  example, two Listeners with the same Port value), the implementation
                  can match requests to only one of the Listeners using other
                  Listener fields.


                  For example, the following Listener scenarios are distinct:


                  1. Multiple Listeners with the same Port that all use the "HTTP"
                     Protocol that all have unique Hostname values.
                  2. Multiple Listeners with the same Port that use either the "HTTPS" or
                     "TLS" Protocol that all have unique Hostname values.
                  3. A mixture of "TCP" and "UDP" Protocol Listeners, where no Listener
                     with the same Protocol has the same Port value.


                  Some fields in the Listener struct have possible values that affect
                  whether the Listener is distinct. Hostname is particularly relevant
                  for HTTP or HTTPS protocols.


                  When using the Hostname value to select between same-Port, same-Protocol
                  Listeners, the Hostname value must be different on each Listener for the
                  Listener to be distinct.


                  When the Listeners are distinct based on Hostname, inbound request
                  hostnames MUST match from the most specific to least specific Hostname
                  values to choose the correct Listener and its associated set of Routes.


                  Exact matches must be processed before wildcard matches, and wildcard
                  matches must be processed before fallback (empty Hostname value)
                  matches. For example, `"foo.example.com"` takes precedence over
                  `"*.example.com"`, and `"*.example.com"` takes precedence over `""`.


                  Additionally, if there are multiple wildcard entries, more specific
                  wildcard entries must be processed before less specific wildcard entries.
                  For example, `"*.foo.example.com"` takes precedence over `"*.example.com"`.
                  The precise definition here is that the higher the number of dots in the
                  hostname to the right of the wildcard character, the higher the precedence.


                  The wildcard character will match any number of characters _and dots_ to
                  the left, however, so `"*.example.com"` will match both
                  `"foo.bar.example.com"` _and_ `"bar.example.com"`.


                  If a set of Listeners contains Listeners that are not distinct, then those
                  Listeners are Conflicted, and the implementation MUST set the "Conflicted"
                  condition in the Listener Status to "True".


                  Implementations MAY choose to accept a Gateway with some Conflicted
                  Listeners only if they only accept the partial Listener set that contains
                  no Conflicted Listeners. To put this another way, implementations may
                  accept a partial Listener set only if they throw out *all* the conflicting
                  Listeners. No picking one of the conflicting listeners as the winner.
                  This also means that the Gateway must have at least one non-conflicting
                  Listener in this case, otherwise it violates the requirement that at
                  least one Listener must be present.


                  The implementation MUST set a "ListenersNotValid" condition on the
                  Gateway Status when the Gateway contains Conflicted Listeners whether or
                  not they accept the Gateway. That Condition SHOULD clearly
                  indicate in the Message which Listeners are conflicted, and which are
                  Accepted. Additionally, the Listener status for those listeners SHOULD
                  indicate which Listeners are conflicted and not Accepted.


                  A Gateway's Listeners are considered "compatible" if:


                  1. They are distinct.
                  2. The implementation can serve them in compliance with the Addresses
                     requirement that all Listeners are available on all assigned
                     addresses.


                  Compatible combinations in Extended support are expected to vary across
                  implementations. A combination that is compatible for one implementation
                  may not be compatible for another.


                  For example, an implementation that cannot serve both TCP and UDP listeners
                  on the same address, or cannot mix HTTPS and generic TLS listens on the same port
                  would not consider those cases compatible, even though they are distinct.


                  Note that requests SHOULD match at most one Listener. For example, if
                  Listeners are defined for "foo.example.com" and "*.example.com", a
                  request to "foo.example.com" SHOULD only be routed using routes attached
                  to the "foo.example.com" Listener (and not the "*.example.com" Listener).
                  This concept is known as "Listener Isolation". Implementations that do
                  not support Listener Isolation MUST clearly document this.


                  Implementations MAY merge separate Gateways onto a single set of
                  Addresses if all Listeners across all Gateways are compatible.


                  Support: Core
                items:
                  description: |-
                    Listener embodies the concept of a logical endpoint where a Gateway accepts
                    network connections.
                  properties:
                    allowedRoutes:
                      default:
                        namespaces:
                          from: Same
                      description: |-
                        AllowedRoutes defines the types of routes that MAY be attached to a
                        Listener and the trusted namespaces where those Route resources MAY be
                        present.


                        Although a client request may match multiple route rules, only one rule
                        may ultimately receive the request. Matching precedence MUST be
                        determined in order of the following criteria:


                        * The most specific match as defined by the Route type.
                        * The oldest Route based on creation timestamp. For example, a Route with
                          a creation timestamp of "2020-09-08 01:02:03" is given precedence over
                          a Route with a creation timestamp of "2020-09-08 01:02:04".
                        * If everything else is equivalent, the Route appearing first in
                          alphabetical order (namespace/name) should be given precedence. For
                          example, foo/bar is given precedence over foo/baz.


                        All valid rules within a Route attached to this Listener should be
                        implemented. Invalid Route rules can be ignored (sometimes that will mean
                        the full Route). If a Route rule transitions from valid to invalid,
                        support for that Route rule should be dropped to ensure consistency. For
                        example, even if a filter specified by a Route rule is invalid, the rest
                        of the rules within that Route should still be supported.


                        Support: Core
                      properties:
                        kinds:
                          description: |-
                            Kinds specifies the groups and kinds of Routes that are allowed to bind
                            to this Gateway Listener. When unspecified or empty, the kinds of Routes
                            selected are determined using the Listener protocol.


                            A RouteGroupKind MUST correspond to kinds of Routes that are compatible
                            with the application protocol specified in the Listener's Protocol field.
                            If an implementation does not support or recognize this resource type, it
                            MUST set the "ResolvedRefs" condition to False for this Listener with the
                            "InvalidRouteKinds" reason.


                            Support: Core
                          items:
                            description: RouteGroupKind indicates the group and kind
                              of a Route resource.
                            properties:
                              group:
                                default: gateway.networking.k8s.io
                                description: Group is the group of the Route.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is the kind of the Route.
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                            required:
                            - kind
                            type: object
                          maxItems: 8
                          type: array
                        namespaces:
                          default:
                            from: Same
                          description: |-
                            Namespaces indicates namespaces from which Routes may be attached to this
                            Listener. This is restricted to the namespace of this Gateway by default.


                            Support: Core
                          properties:
                            from:
                              default: Same
                              description: |-
                                From indicates where Routes will be selected for this Gateway. Possible
                                values are:


                                * All: Routes in all namespaces may be used by this Gateway.
                                * Selector: Routes in namespaces selected by the selector may be used by
                                  this Gateway.
                                * Same: Only Routes in the same namespace may be used by this Gateway.


                                Support: Core
                              enum:
                              - All
                              - Selector
                              - Same
                              type: string
                            selector:
                              description: |-
                                Selector must be specified when From is set to "Selector". In that case,
                                only Routes in Namespaces matching this Selector will be selected by this
                                Gateway. This field is ignored for other values of "From".


                                Support: Core
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      type: object
                    hostname:
                      description: |-
                        Hostname specifies the virtual hostname to match for protocol types that
                        define this concept. When unspecified, all hostnames are matched. This
                        field is ignored for protocols that don't require hostname based
                        matching.


                        Implementations MUST apply Hostname matching appropriately for each of
                        the following protocols:


                        * TLS: The Listener Hostname MUST match the SNI.
                        * HTTP: The Listener Hostname MUST match the Host header of the request.
                        * HTTPS: The Listener Hostname SHOULD match at both the TLS and HTTP
                          protocol layers as described above. If an implementation does not
                          ensure that both the SNI and Host header match the Listener hostname,
                          it MUST clearly document that.


                        For HTTPRoute and TLSRoute resources, there is an interaction with the
                        `spec.hostnames` array. When both listener and route specify hostnames,
                        there MUST be an intersection between the values for a Route to be
                        accepted. For more information, refer to the Route specific Hostnames
                        documentation.


                        Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                        as a suffix match. That means that a match for `*.example.com` would match
                        both `test.example.com`, and `foo.test.example.com`, but not `example.com`.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    name:
                      description: |-
                        Name is the name of the Listener. This name MUST be unique within a
                        Gateway.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    port:
                      description: |-
                        Port is the network port. Multiple listeners may use the
                        same port, subject to the Listener compatibility rules.


                        Support: Core
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    protocol:
                      description: |-
                        Protocol specifies the network protocol this listener expects to receive.


                        Support: Core
                      maxLength: 255
                      minLength: 1
                      pattern: ^[a-zA-Z0-9]([-a-zSA-Z0-9]*[a-zA-Z0-9])?$|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9]+$
                      type: string
                    tls:
                      description: |-
                        TLS is the TLS configuration for the Listener. This field is required if
                        the Protocol field is "HTTPS" or "TLS". It is invalid to set this field
                        if the Protocol field is "HTTP", "TCP", or "UDP".


                        The association of SNIs to Certificate defined in GatewayTLSConfig is
                        defined based on the Hostname field for this listener.


                        The GatewayClass MUST use the longest matching SNI out of all
                        available certificates for any TLS handshake.


                        Support: Core
                      properties:
                        certificateRefs:
                          description: |-
                            CertificateRefs contains a series of references to Kubernetes objects that
                            contains TLS certificates and private keys. These certificates are used to
                            establish a TLS handshake for requests that match the hostname of the
                            associated listener.


                            A single CertificateRef to a Kubernetes Secret has "Core" support.
                            Implementations MAY choose to support attaching multiple certificates to
                            a Listener, but this behavior is implementation-specific.


                            References to a resource in different namespace are invalid UNLESS there
                            is a ReferenceGrant in the target namespace that allows the certificate
                            to be attached. If a ReferenceGrant does not allow this reference, the
                            "ResolvedRefs" condition MUST be set to False for this listener with the
                            "RefNotPermitted" reason.


                            This field is required to have at least one element when the mode is set
                            to "Terminate" (default) and is optional otherwise.


                            CertificateRefs can reference to standard Kubernetes resources, i.e.
                            Secret, or implementation-specific custom resources.


                            Support: Core - A single reference to a Kubernetes Secret of type kubernetes.io/tls


                            Support: Implementation-specific (More than one reference or other resource types)
                          items:
                            description: |-
                              SecretObjectReference identifies an API object including its namespace,
                              defaulting to Secret.


                              The API object must be valid in the cluster; the Group and Kind must
                              be registered in the cluster for this reference to be valid.


                              References to objects with invalid Group and Kind are not valid, and must
                              be rejected by the implementation, with appropriate Conditions set
                              on the containing object.
                            properties:
                              group:
                                default: ""
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                default: Secret
                                description: Kind is kind of the referent. For example
                                  "Secret".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                              namespace:
                                description: |-
                                  Namespace is the namespace of the referenced object. When unspecified, the local
                                  namespace is inferred.


                                  Note that when a namespace different than the local namespace is specified,
                                  a ReferenceGrant object is required in the referent namespace to allow that
                                  namespace's owner to accept the reference. See the ReferenceGrant
                                  documentation for details.


                                  Support: Core
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                            required:
                            - name
                            type: object
                          maxItems: 64
                          type: array
                        mode:
                          default: Terminate
                          description: |-
                            Mode defines the TLS behavior for the TLS session initiated by the client.
                            There are two possible modes:


                            - Terminate: The TLS session between the downstream client and the
                              Gateway is terminated at the Gateway. This mode requires certificates
                              to be specified in some way, such as populating the certificateRefs
                              field.
                            - Passthrough: The TLS session is NOT terminated by the Gateway. This
                              implies that the Gateway can't decipher the TLS stream except for
                              the ClientHello message of the TLS protocol. The certificateRefs field
                              is ignored in this mode.


                            Support: Core
                          enum:
                          - Terminate
                          - Passthrough
                          type: string
                        options:
                          additionalProperties:
                            description: |-
                              AnnotationValue is the value of an annotation in Gateway API. This is used
                              for validation of maps such as TLS options. This roughly matches Kubernetes
                              annotation validation, although the length validation in that case is based
                              on the entire size of the annotations struct.
                            maxLength: 4096
                            minLength: 0
                            type: string
                          description: |-
                            Options are a list of key/value pairs to enable extended TLS
                            configuration for each implementation. For example, configuring the
                            minimum TLS version or supported cipher suites.


                            A set of common keys MAY be defined by the API in the future. To avoid
                            any ambiguity, implementation-specific definitions MUST use
                            domain-prefixed names, such as `example.com/my-custom-option`.
                            Un-prefixed names are reserved for key names defined by Gateway API.


                            Support: Implementation-specific
                          maxProperties: 16
                          type: object
                      type: object
                      x-kubernetes-validations:
                      - message: certificateRefs or options must be specified when
                          mode is Terminate
                        rule: 'self.mode == ''Terminate'' ? size(self.certificateRefs)
                          > 0 || size(self.options) > 0 : true'
                  required:
                  - name
                  - port
                  - protocol
                  type: object
                maxItems: 64
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
                x-kubernetes-validations:
                - message: tls must not be specified for protocols ['HTTP', 'TCP',
                    'UDP']
                  rule: 'self.all(l, l.protocol in [''HTTP'', ''TCP'', ''UDP''] ?
                    !has(l.tls) : true)'
                - message: tls mode must be Terminate for protocol HTTPS
                  rule: 'self.all(l, (l.protocol == ''HTTPS'' && has(l.tls)) ? (l.tls.mode
                    == '''' || l.tls.mode == ''Terminate'') : true)'
                - message: hostname must not be specified for protocols ['TCP', 'UDP']
                  rule: 'self.all(l, l.protocol in [''TCP'', ''UDP'']  ? (!has(l.hostname)
                    || l.hostname == '''') : true)'
                - message: Listener name must be unique within the Gateway
                  rule: self.all(l1, self.exists_one(l2, l1.name == l2.name))
                - message: Combination of port, protocol and hostname must be unique
                    for each listener
                  rule: 'self.all(l1, self.exists_one(l2, l1.port == l2.port && l1.protocol
                    == l2.protocol && (has(l1.hostname) && has(l2.hostname) ? l1.hostname
                    == l2.hostname : !has(l1.hostname) && !has(l2.hostname))))'
            required:
            - gatewayClassName
            - listeners
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Accepted
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: Status defines the current state of Gateway.
            properties:
              addresses:
                description: |+
                  Addresses lists the network addresses that have been bound to the
                  Gateway.


                  This list may differ from the addresses provided in the spec under some
                  conditions:


                    * no addresses are specified, all addresses are dynamically assigned
                    * a combination of specified and dynamic addresses are assigned
                    * a specified address was unusable (e.g. already in use)


                items:
                  description: GatewayStatusAddress describes a network address that
                    is bound to a Gateway.
                  oneOf:
                  - properties:
                      type:
                        enum:
                        - IPAddress
                      value:
                        anyOf:
                        - format: ipv4
                        - format: ipv6
                  - properties:
                      type:
                        not:
                          enum:
                          - IPAddress
                  properties:
                    type:
                      default: IPAddress
                      description: Type of the address.
                      maxLength: 253
                      minLength: 1
                      pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    value:
                      description: |-
                        Value of the address. The validity of the values will depend
                        on the type and support by the controller.


                        Examples: `1.2.3.4`, `128::1`, `my-ip-address`.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - value
                  type: object
                  x-kubernetes-validations:
                  - message: Hostname value must only contain valid characters (matching
                      ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$)
                    rule: 'self.type == ''Hostname'' ? self.value.matches(r"""^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"""):
                      true'
                maxItems: 16
                type: array
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Accepted
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: |-
                  Conditions describe the current conditions of the Gateway.


                  Implementations should prefer to express Gateway conditions
                  using the `GatewayConditionType` and `GatewayConditionReason`
                  constants so that operators and tools can converge on a common
                  vocabulary to describe Gateway state.


                  Known condition types are:


                  * "Accepted"
                  * "Programmed"
                  * "Ready"
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              listeners:
                description: Listeners provide status for each unique listener port
                  defined in the Spec.
                items:
                  description: ListenerStatus is the status associated with a Listener.
                  properties:
                    attachedRoutes:
                      description: |-
                        AttachedRoutes represents the total number of Routes that have been
                        successfully attached to this Listener.


                        Successful attachment of a Route to a Listener is based solely on the
                        combination of the AllowedRoutes field on the corresponding Listener
                        and the Route's ParentRefs field. A Route is successfully attached to
                        a Listener when it is selected by the Listener's AllowedRoutes field
                        AND the Route has a valid ParentRef selecting the whole Gateway
                        resource or a specific Listener as a parent resource (more detail on
                        attachment semantics can be found in the documentation on the various
                        Route kinds ParentRefs fields). Listener or Route status does not impact
                        successful attachment, i.e. the AttachedRoutes field count MUST be set
                        for Listeners with condition Accepted: false and MUST count successfully
                        attached Routes that may themselves have Accepted: false conditions.


                        Uses for this field include troubleshooting Route attachment and
                        measuring blast radius/impact of changes to a Listener.
                      format: int32
                      type: integer
                    conditions:
                      description: Conditions describe the current condition of this
                        listener.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource.\n---\nThis struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example,\n\n\n\ttype FooStatus
                          struct{\n\t    // Represents the observations of a foo's
                          current state.\n\t    // Known .status.conditions.type are:
                          \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                          +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    //
                          +listType=map\n\t    // +listMapKey=type\n\t    Conditions
                          []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                          patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                          \   // other fields\n\t}"
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: |-
                              type of condition in CamelCase or in foo.example.com/CamelCase.
                              ---
                              Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                              useful (see .node.status.conditions), the ability to deconflict is important.
                              The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    name:
                      description: Name is the name of the Listener that this status
                        corresponds to.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    supportedKinds:
                      description: |-
                        SupportedKinds is the list indicating the Kinds supported by this
                        listener. This MUST represent the kinds an implementation supports for
                        that Listener configuration.


                        If kinds are specified in Spec that are not supported, they MUST NOT
                        appear in this list and an implementation MUST set the "ResolvedRefs"
                        condition to "False" with the "InvalidRouteKinds" reason. If both valid
                        and invalid Route kinds are specified, the implementation MUST
                        reference the valid Route kinds that have been specified.
                      items:
                        description: RouteGroupKind indicates the group and kind of
                          a Route resource.
                        properties:
                          group:
                            default: gateway.networking.k8s.io
                            description: Group is the group of the Route.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            description: Kind is the kind of the Route.
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                        required:
                        - kind
                        type: object
                      maxItems: 8
                      type: array
                  required:
                  - attachedRoutes
                  - conditions
                  - name
                  - supportedKinds
                  type: object
                maxItems: 64
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.gatewayClassName
      name: Class
      type: string
    - jsonPath: .status.addresses[*].value
      name: Address
      type: string
    - jsonPath: .status.conditions[?(@.type=="Programmed")].status
      name: Programmed
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          Gateway represents an instance of a service-traffic handling infrastructure
          by binding Listeners to a set of IP addresses.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of Gateway.
            properties:
              addresses:
                description: |+
                  Addresses requested for this Gateway. This is optional and behavior can
                  depend on the implementation. If a value is set in the spec and the
                  requested address is invalid or unavailable, the implementation MUST
                  indicate this in the associated entry in GatewayStatus.Addresses.


                  The Addresses field represents a request for the address(es) on the
                  "outside of the Gateway", that traffic bound for this Gateway will use.
                  This could be the IP address or hostname of an external load balancer or
                  other networking infrastructure, or some other address that traffic will
                  be sent to.


                  If no Addresses are specified, the implementation MAY schedule the
                  Gateway in an implementation-specific manner, assigning an appropriate
                  set of Addresses.


                  The implementation MUST bind all Listeners to every GatewayAddress that
                  it assigns to the Gateway and add a corresponding entry in
                  GatewayStatus.Addresses.


                  Support: Extended


                items:
                  description: GatewayAddress describes an address that can be bound
                    to a Gateway.
                  oneOf:
                  - properties:
                      type:
                        enum:
                        - IPAddress
                      value:
                        anyOf:
                        - format: ipv4
                        - format: ipv6
                  - properties:
                      type:
                        not:
                          enum:
                          - IPAddress
                  properties:
                    type:
                      default: IPAddress
                      description: Type of the address.
                      maxLength: 253
                      minLength: 1
                      pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    value:
                      description: |-
                        Value of the address. The validity of the values will depend
                        on the type and support by the controller.


                        Examples: `1.2.3.4`, `128::1`, `my-ip-address`.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - value
                  type: object
                  x-kubernetes-validations:
                  - message: Hostname value must only contain valid characters (matching
                      ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$)
                    rule: 'self.type == ''Hostname'' ? self.value.matches(r"""^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"""):
                      true'
                maxItems: 16
                type: array
                x-kubernetes-validations:
                - message: IPAddress values must be unique
                  rule: 'self.all(a1, a1.type == ''IPAddress'' ? self.exists_one(a2,
                    a2.type == a1.type && a2.value == a1.value) : true )'
                - message: Hostname values must be unique
                  rule: 'self.all(a1, a1.type == ''Hostname'' ? self.exists_one(a2,
                    a2.type == a1.type && a2.value == a1.value) : true )'
              gatewayClassName:
                description: |-
                  GatewayClassName used for this Gateway. This is the name of a
                  GatewayClass resource.
                maxLength: 253
                minLength: 1
                type: string
              listeners:
                description: |-
                  Listeners associated with this Gateway. Listeners define
                  logical endpoints that are bound on this Gateway's addresses.
                  At least one Listener MUST be specified.


                  Each Listener in a set of Listeners (for example, in a single Gateway)
                  MUST be _distinct_, in that a traffic flow MUST be able to be assigned to
                  exactly one listener. (This section uses "set of Listeners" rather than
                  "Listeners in a single Gateway" because implementations MAY merge configuration
                  from multiple Gateways onto a single data plane, and these rules _also_
                  apply in that case).


                  Practically, this means that each listener in a set MUST have a unique
                  combination of Port, Protocol, and, if supported by the protocol, Hostname.


                  Some combinations of port, protocol, and TLS settings are considered
                  Core support and MUST be supported by implementations based on their
                  targeted conformance profile:


                  HTTP Profile


                  1. HTTPRoute, Port: 80, Protocol: HTTP
                  2. HTTPRoute, Port: 443, Protocol: HTTPS, TLS Mode: Terminate, TLS keypair provided


                  TLS Profile


                  1. TLSRoute, Port: 443, Protocol: TLS, TLS Mode: Passthrough


                  "Distinct" Listeners have the following property:


                  The implementation can match inbound requests to a single distinct
                  Listener. When multiple Listeners share values for fields (for
                  example, two Listeners with the same Port value), the implementation
                  can match requests to only one of the Listeners using other
                  Listener fields.


                  For example, the following Listener scenarios are distinct:


                  1. Multiple Listeners with the same Port that all use the "HTTP"
                     Protocol that all have unique Hostname values.
                  2. Multiple Listeners with the same Port that use either the "HTTPS" or
                     "TLS" Protocol that all have unique Hostname values.
                  3. A mixture of "TCP" and "UDP" Protocol Listeners, where no Listener
                     with the same Protocol has the same Port value.


                  Some fields in the Listener struct have possible values that affect
                  whether the Listener is distinct. Hostname is particularly relevant
                  for HTTP or HTTPS protocols.


                  When using the Hostname value to select between same-Port, same-Protocol
                  Listeners, the Hostname value must be different on each Listener for the
                  Listener to be distinct.


                  When the Listeners are distinct based on Hostname, inbound request
                  hostnames MUST match from the most specific to least specific Hostname
                  values to choose the correct Listener and its associated set of Routes.


                  Exact matches must be processed before wildcard matches, and wildcard
                  matches must be processed before fallback (empty Hostname value)
                  matches. For example, `"foo.example.com"` takes precedence over
                  `"*.example.com"`, and `"*.example.com"` takes precedence over `""`.


                  Additionally, if there are multiple wildcard entries, more specific
                  wildcard entries must be processed before less specific wildcard entries.
                  For example, `"*.foo.example.com"` takes precedence over `"*.example.com"`.
                  The precise definition here is that the higher the number of dots in the
                  hostname to the right of the wildcard character, the higher the precedence.


                  The wildcard character will match any number of characters _and dots_ to
                  the left, however, so `"*.example.com"` will match both
                  `"foo.bar.example.com"` _and_ `"bar.example.com"`.


                  If a set of Listeners contains Listeners that are not distinct, then those
                  Listeners are Conflicted, and the implementation MUST set the "Conflicted"
                  condition in the Listener Status to "True".


                  Implementations MAY choose to accept a Gateway with some Conflicted
                  Listeners only if they only accept the partial Listener set that contains
                  no Conflicted Listeners. To put this another way, implementations may
                  accept a partial Listener set only if they throw out *all* the conflicting
                  Listeners. No picking one of the conflicting listeners as the winner.
                  This also means that the Gateway must have at least one non-conflicting
                  Listener in this case, otherwise it violates the requirement that at
                  least one Listener must be present.


                  The implementation MUST set a "ListenersNotValid" condition on the
                  Gateway Status when the Gateway contains Conflicted Listeners whether or
                  not they accept the Gateway. That Condition SHOULD clearly
                  indicate in the Message which Listeners are conflicted, and which are
                  Accepted. Additionally, the Listener status for those listeners SHOULD
                  indicate which Listeners are conflicted and not Accepted.


                  A Gateway's Listeners are considered "compatible" if:


                  1. They are distinct.
                  2. The implementation can serve them in compliance with the Addresses
                     requirement that all Listeners are available on all assigned
                     addresses.


                  Compatible combinations in Extended support are expected to vary across
                  implementations. A combination that is compatible for one implementation
                  may not be compatible for another.


                  For example, an implementation that cannot serve both TCP and UDP listeners
                  on the same address, or cannot mix HTTPS and generic TLS listens on the same port
                  would not consider those cases compatible, even though they are distinct.


                  Note that requests SHOULD match at most one Listener. For example, if
                  Listeners are defined for "foo.example.com" and "*.example.com", a
                  request to "foo.example.com" SHOULD only be routed using routes attached
                  to the "foo.example.com" Listener (and not the "*.example.com" Listener).
                  This concept is known as "Listener Isolation". Implementations that do
                  not support Listener Isolation MUST clearly document this.


                  Implementations MAY merge separate Gateways onto a single set of
                  Addresses if all Listeners across all Gateways are compatible.


                  Support: Core
                items:
                  description: |-
                    Listener embodies the concept of a logical endpoint where a Gateway accepts
                    network connections.
                  properties:
                    allowedRoutes:
                      default:
                        namespaces:
                          from: Same
                      description: |-
                        AllowedRoutes defines the types of routes that MAY be attached to a
                        Listener and the trusted namespaces where those Route resources MAY be
                        present.


                        Although a client request may match multiple route rules, only one rule
                        may ultimately receive the request. Matching precedence MUST be
                        determined in order of the following criteria:


                        * The most specific match as defined by the Route type.
                        * The oldest Route based on creation timestamp. For example, a Route with
                          a creation timestamp of "2020-09-08 01:02:03" is given precedence over
                          a Route with a creation timestamp of "2020-09-08 01:02:04".
                        * If everything else is equivalent, the Route appearing first in
                          alphabetical order (namespace/name) should be given precedence. For
                          example, foo/bar is given precedence over foo/baz.


                        All valid rules within a Route attached to this Listener should be
                        implemented. Invalid Route rules can be ignored (sometimes that will mean
                        the full Route). If a Route rule transitions from valid to invalid,
                        support for that Route rule should be dropped to ensure consistency. For
                        example, even if a filter specified by a Route rule is invalid, the rest
                        of the rules within that Route should still be supported.


                        Support: Core
                      properties:
                        kinds:
                          description: |-
                            Kinds specifies the groups and kinds of Routes that are allowed to bind
                            to this Gateway Listener. When unspecified or empty, the kinds of Routes
                            selected are determined using the Listener protocol.


                            A RouteGroupKind MUST correspond to kinds of Routes that are compatible
                            with the application protocol specified in the Listener's Protocol field.
                            If an implementation does not support or recognize this resource type, it
                            MUST set the "ResolvedRefs" condition to False for this Listener with the
                            "InvalidRouteKinds" reason.


                            Support: Core
                          items:
                            description: RouteGroupKind indicates the group and kind
                              of a Route resource.
                            properties:
                              group:
                                default: gateway.networking.k8s.io
                                description: Group is the group of the Route.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is the kind of the Route.
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                            required:
                            - kind
                            type: object
                          maxItems: 8
                          type: array
                        namespaces:
                          default:
                            from: Same
                          description: |-
                            Namespaces indicates namespaces from which Routes may be attached to this
                            Listener. This is restricted to the namespace of this Gateway by default.


                            Support: Core
                          properties:
                            from:
                              default: Same
                              description: |-
                                From indicates where Routes will be selected for this Gateway. Possible
                                values are:


                                * All: Routes in all namespaces may be used by this Gateway.
                                * Selector: Routes in namespaces selected by the selector may be used by
                                  this Gateway.
                                * Same: Only Routes in the same namespace may be used by this Gateway.


                                Support: Core
                              enum:
                              - All
                              - Selector
                              - Same
                              type: string
                            selector:
                              description: |-
                                Selector must be specified when From is set to "Selector". In that case,
                                only Routes in Namespaces matching this Selector will be selected by this
                                Gateway. This field is ignored for other values of "From".


                                Support: Core
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label
                                    selector requirements. The requirements are ANDed.
                                  items:
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the
                                          selector applies to.
                                        type: string
                                      operator:
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    required:
                                    - key
                                    - operator
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                      type: object
                    hostname:
                      description: |-
                        Hostname specifies the virtual hostname to match for protocol types that
                        define this concept. When unspecified, all hostnames are matched. This
                        field is ignored for protocols that don't require hostname based
                        matching.


                        Implementations MUST apply Hostname matching appropriately for each of
                        the following protocols:


                        * TLS: The Listener Hostname MUST match the SNI.
                        * HTTP: The Listener Hostname MUST match the Host header of the request.
                        * HTTPS: The Listener Hostname SHOULD match at both the TLS and HTTP
                          protocol layers as described above. If an implementation does not
                          ensure that both the SNI and Host header match the Listener hostname,
                          it MUST clearly document that.


                        For HTTPRoute and TLSRoute resources, there is an interaction with the
                        `spec.hostnames` array. When both listener and route specify hostnames,
                        there MUST be an intersection between the values for a Route to be
                        accepted. For more information, refer to the Route specific Hostnames
                        documentation.


                        Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                        as a suffix match. That means that a match for `*.example.com` would match
                        both `test.example.com`, and `foo.test.example.com`, but not `example.com`.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    name:
                      description: |-
                        Name is the name of the Listener. This name MUST be unique within a
                        Gateway.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    port:
                      description: |-
                        Port is the network port. Multiple listeners may use the
                        same port, subject to the Listener compatibility rules.


                        Support: Core
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    protocol:
                      description: |-
                        Protocol specifies the network protocol this listener expects to receive.


                        Support: Core
                      maxLength: 255
                      minLength: 1
                      pattern: ^[a-zA-Z0-9]([-a-zSA-Z0-9]*[a-zA-Z0-9])?$|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9]+$
                      type: string
                    tls:
                      description: |-
                        TLS is the TLS configuration for the Listener. This field is required if
                        the Protocol field is "HTTPS" or "TLS". It is invalid to set this field
                        if the Protocol field is "HTTP", "TCP", or "UDP".


                        The association of SNIs to Certificate defined in GatewayTLSConfig is
                        defined based on the Hostname field for this listener.


                        The GatewayClass MUST use the longest matching SNI out of all
                        available certificates for any TLS handshake.


                        Support: Core
                      properties:
                        certificateRefs:
                          description: |-
                            CertificateRefs contains a series of references to Kubernetes objects that
                            contains TLS certificates and private keys. These certificates are used to
                            establish a TLS handshake for requests that match the hostname of the
                            associated listener.


                            A single CertificateRef to a Kubernetes Secret has "Core" support.
                            Implementations MAY choose to support attaching multiple certificates to
                            a Listener, but this behavior is implementation-specific.


                            References to a resource in different namespace are invalid UNLESS there
                            is a ReferenceGrant in the target namespace that allows the certificate
                            to be attached. If a ReferenceGrant does not allow this reference, the
                            "ResolvedRefs" condition MUST be set to False for this listener with the
                            "RefNotPermitted" reason.


                            This field is required to have at least one element when the mode is set
                            to "Terminate" (default) and is optional otherwise.


                            CertificateRefs can reference to standard Kubernetes resources, i.e.
                            Secret, or implementation-specific custom resources.


                            Support: Core - A single reference to a Kubernetes Secret of type kubernetes.io/tls


                            Support: Implementation-specific (More than one reference or other resource types)
                          items:
                            description: |-
                              SecretObjectReference identifies an API object including its namespace,
                              defaulting to Secret.


                              The API object must be valid in the cluster; the Group and Kind must
                              be registered in the cluster for this reference to be valid.


                              References to objects with invalid Group and Kind are not valid, and must
                              be rejected by the implementation, with appropriate Conditions set
                              on the containing object.
                            properties:
                              group:
                                default: ""
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                default: Secret
                                description: Kind is kind of the referent. For example
                                  "Secret".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                              namespace:
                                description: |-
                                  Namespace is the namespace of the referenced object. When unspecified, the local
                                  namespace is inferred.


                                  Note that when a namespace different than the local namespace is specified,
                                  a ReferenceGrant object is required in the referent namespace to allow that
                                  namespace's owner to accept the reference. See the ReferenceGrant
                                  documentation for details.


                                  Support: Core
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                            required:
                            - name
                            type: object
                          maxItems: 64
                          type: array
                        mode:
                          default: Terminate
                          description: |-
                            Mode defines the TLS behavior for the TLS session initiated by the client.
                            There are two possible modes:


                            - Terminate: The TLS session between the downstream client and the
                              Gateway is terminated at the Gateway. This mode requires certificates
                              to be specified in some way, such as populating the certificateRefs
                              field.
                            - Passthrough: The TLS session is NOT terminated by the Gateway. This
                              implies that the Gateway can't decipher the TLS stream except for
                              the ClientHello message of the TLS protocol. The certificateRefs field
                              is ignored in this mode.


                            Support: Core
                          enum:
                          - Terminate
                          - Passthrough
                          type: string
                        options:
                          additionalProperties:
                            description: |-
                              AnnotationValue is the value of an annotation in Gateway API. This is used
                              for validation of maps such as TLS options. This roughly matches Kubernetes
                              annotation validation, although the length validation in that case is based
                              on the entire size of the annotations struct.
                            maxLength: 4096
                            minLength: 0
                            type: string
                          description: |-
                            Options are a list of key/value pairs to enable extended TLS
                            configuration for each implementation. For example, configuring the
                            minimum TLS version or supported cipher suites.


                            A set of common keys MAY be defined by the API in the future. To avoid
                            any ambiguity, implementation-specific definitions MUST use
                            domain-prefixed names, such as `example.com/my-custom-option`.
                            Un-prefixed names are reserved for key names defined by Gateway API.


                            Support: Implementation-specific
                          maxProperties: 16
                          type: object
                      type: object
                      x-kubernetes-validations:
                      - message: certificateRefs or options must be specified when
                          mode is Terminate
                        rule: 'self.mode == ''Terminate'' ? size(self.certificateRefs)
                          > 0 || size(self.options) > 0 : true'
                  required:
                  - name
                  - port
                  - protocol
                  type: object
                maxItems: 64
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
                x-kubernetes-validations:
                - message: tls must not be specified for protocols ['HTTP', 'TCP',
                    'UDP']
                  rule: 'self.all(l, l.protocol in [''HTTP'', ''TCP'', ''UDP''] ?
                    !has(l.tls) : true)'
                - message: tls mode must be Terminate for protocol HTTPS
                  rule: 'self.all(l, (l.protocol == ''HTTPS'' && has(l.tls)) ? (l.tls.mode
                    == '''' || l.tls.mode == ''Terminate'') : true)'
                - message: hostname must not be specified for protocols ['TCP', 'UDP']
                  rule: 'self.all(l, l.protocol in [''TCP'', ''UDP'']  ? (!has(l.hostname)
                    || l.hostname == '''') : true)'
                - message: Listener name must be unique within the Gateway
                  rule: self.all(l1, self.exists_one(l2, l1.name == l2.name))
                - message: Combination of port, protocol and hostname must be unique
                    for each listener
                  rule: 'self.all(l1, self.exists_one(l2, l1.port == l2.port && l1.protocol
                    == l2.protocol && (has(l1.hostname) && has(l2.hostname) ? l1.hostname
                    == l2.hostname : !has(l1.hostname) && !has(l2.hostname))))'
            required:
            - gatewayClassName
            - listeners
            type: object
          status:
            default:
              conditions:
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Accepted
              - lastTransitionTime: "1970-01-01T00:00:00Z"
                message: Waiting for controller
                reason: Pending
                status: Unknown
                type: Programmed
            description: Status defines the current state of Gateway.
            properties:
              addresses:
                description: |+
                  Addresses lists the network addresses that have been bound to the
                  Gateway.


                  This list may differ from the addresses provided in the spec under some
                  conditions:


                    * no addresses are specified, all addresses are dynamically assigned
                    * a combination of specified and dynamic addresses are assigned
                    * a specified address was unusable (e.g. already in use)


                items:
                  description: GatewayStatusAddress describes a network address that
                    is bound to a Gateway.
                  oneOf:
                  - properties:
                      type:
                        enum:
                        - IPAddress
                      value:
                        anyOf:
                        - format: ipv4
                        - format: ipv6
                  - properties:
                      type:
                        not:
                          enum:
                          - IPAddress
                  properties:
                    type:
                      default: IPAddress
                      description: Type of the address.
                      maxLength: 253
                      minLength: 1
                      pattern: ^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    value:
                      description: |-
                        Value of the address. The validity of the values will depend
                        on the type and support by the controller.


                        Examples: `1.2.3.4`, `128::1`, `my-ip-address`.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - value
                  type: object
                  x-kubernetes-validations:
                  - message: Hostname value must only contain valid characters (matching
                      ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$)
                    rule: 'self.type == ''Hostname'' ? self.value.matches(r"""^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"""):
                      true'
                maxItems: 16
                type: array
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Accepted
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: |-
                  Conditions describe the current conditions of the Gateway.


                  Implementations should prefer to express Gateway conditions
                  using the `GatewayConditionType` and `GatewayConditionReason`
                  constants so that operators and tools can converge on a common
                  vocabulary to describe Gateway state.


                  Known condition types are:


                  * "Accepted"
                  * "Programmed"
                  * "Ready"
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              listeners:
                description: Listeners provide status for each unique listener port
                  defined in the Spec.
                items:
                  description: ListenerStatus is the status associated with a Listener.
                  properties:
                    attachedRoutes:
                      description: |-
                        AttachedRoutes represents the total number of Routes that have been
                        successfully attached to this Listener.


                        Successful attachment of a Route to a Listener is based solely on the
                        combination of the AllowedRoutes field on the corresponding Listener
                        and the Route's ParentRefs field. A Route is successfully attached to
                        a Listener when it is selected by the Listener's AllowedRoutes field
                        AND the Route has a valid ParentRef selecting the whole Gateway
                        resource or a specific Listener as a parent resource (more detail on
                        attachment semantics can be found in the documentation on the various
                        Route kinds ParentRefs fields). Listener or Route status does not impact
                        successful attachment, i.e. the AttachedRoutes field count MUST be set
                        for Listeners with condition Accepted: false and MUST count successfully
                        attached Routes that may themselves have Accepted: false conditions.


                        Uses for this field include troubleshooting Route attachment and
                        measuring blast radius/impact of changes to a Listener.
                      format: int32
                      type: integer
                    conditions:
                      description: Conditions describe the current condition of this
                        listener.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource.\n---\nThis struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example,\n\n\n\ttype FooStatus
                          struct{\n\t    // Represents the observations of a foo's
                          current state.\n\t    // Known .status.conditions.type are:
                          \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                          +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    //
                          +listType=map\n\t    // +listMapKey=type\n\t    Conditions
                          []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                          patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                          \   // other fields\n\t}"
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: |-
                              type of condition in CamelCase or in foo.example.com/CamelCase.
                              ---
                              Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                              useful (see .node.status.conditions), the ability to deconflict is important.
                              The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    name:
                      description: Name is the name of the Listener that this status
                        corresponds to.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    supportedKinds:
                      description: |-
                        SupportedKinds is the list indicating the Kinds supported by this
                        listener. This MUST represent the kinds an implementation supports for
                        that Listener configuration.


                        If kinds are specified in Spec that are not supported, they MUST NOT
                        appear in this list and an implementation MUST set the "ResolvedRefs"
                        condition to "False" with the "InvalidRouteKinds" reason. If both valid
                        and invalid Route kinds are specified, the implementation MUST
                        reference the valid Route kinds that have been specified.
                      items:
                        description: RouteGroupKind indicates the group and kind of
                          a Route resource.
                        properties:
                          group:
                            default: gateway.networking.k8s.io
                            description: Group is the group of the Route.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            description: Kind is the kind of the Route.
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                        required:
                        - kind
                        type: object
                      maxItems: 8
                      type: array
                  required:
                  - attachedRoutes
                  - conditions
                  - name
                  - supportedKinds
                  type: object
                maxItems: 64
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/2997
    gateway.networking.k8s.io/bundle-version: v1.1.0
    gateway.networking.k8s.io/channel: standard
  creationTimestamp: null
  name: grpcroutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: GRPCRoute
    listKind: GRPCRouteList
    plural: grpcroutes
    singular: grpcroute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          GRPCRoute provides a way to route gRPC requests. This includes the capability
          to match requests by hostname, gRPC service, gRPC method, or HTTP/2 header.
          Filters can be used to specify additional processing steps. Backends specify
          where matching requests will be routed.


          GRPCRoute falls under extended support within the Gateway API. Within the
          following specification, the word "MUST" indicates that an implementation
          supporting GRPCRoute must conform to the indicated requirement, but an
          implementation not supporting this route type need not follow the requirement
          unless explicitly indicated.


          Implementations supporting `GRPCRoute` with the `HTTPS` `ProtocolType` MUST
          accept HTTP/2 connections without an initial upgrade from HTTP/1.1, i.e. via
          ALPN. If the implementation does not support this, then it MUST set the
          "Accepted" condition to "False" for the affected listener with a reason of
          "UnsupportedProtocol".  Implementations MAY also accept HTTP/2 connections
          with an upgrade from HTTP/1.


          Implementations supporting `GRPCRoute` with the `HTTP` `ProtocolType` MUST
          support HTTP/2 over cleartext TCP (h2c,
          https://www.rfc-editor.org/rfc/rfc7540#section-3.1) without an initial
          upgrade from HTTP/1.1, i.e. with prior knowledge
          (https://www.rfc-editor.org/rfc/rfc7540#section-3.4). If the implementation
          does not support this, then it MUST set the "Accepted" condition to "False"
          for the affected listener with a reason of "UnsupportedProtocol".
          Implementations MAY also accept HTTP/2 connections with an upgrade from
          HTTP/1, i.e. without prior knowledge.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of GRPCRoute.
            properties:
              hostnames:
                description: |-
                  Hostnames defines a set of hostnames to match against the GRPC
                  Host header to select a GRPCRoute to process the request. This matches
                  the RFC 1123 definition of a hostname with 2 notable exceptions:


                  1. IPs are not allowed.
                  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                     label MUST appear by itself as the first label.


                  If a hostname is specified by both the Listener and GRPCRoute, there
                  MUST be at least one intersecting hostname for the GRPCRoute to be
                  attached to the Listener. For example:


                  * A Listener with `test.example.com` as the hostname matches GRPCRoutes
                    that have either not specified any hostnames, or have specified at
                    least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches GRPCRoutes
                    that have either not specified any hostnames or have specified at least
                    one hostname that matches the Listener hostname. For example,
                    `test.example.com` and `*.example.com` would both match. On the other
                    hand, `example.com` and `test.example.net` would not match.


                  Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                  as a suffix match. That means that a match for `*.example.com` would match
                  both `test.example.com`, and `foo.test.example.com`, but not `example.com`.


                  If both the Listener and GRPCRoute have specified hostnames, any
                  GRPCRoute hostnames that do not match the Listener hostname MUST be
                  ignored. For example, if a Listener specified `*.example.com`, and the
                  GRPCRoute specified `test.example.com` and `test.example.net`,
                  `test.example.net` MUST NOT be considered for a match.


                  If both the Listener and GRPCRoute have specified hostnames, and none
                  match with the criteria above, then the GRPCRoute MUST NOT be accepted by
                  the implementation. The implementation MUST raise an 'Accepted' Condition
                  with a status of `False` in the corresponding RouteParentStatus.


                  If a Route (A) of type HTTPRoute or GRPCRoute is attached to a
                  Listener and that listener already has another Route (B) of the other
                  type attached and the intersection of the hostnames of A and B is
                  non-empty, then the implementation MUST accept exactly one of these two
                  routes, determined by the following criteria, in order:


                  * The oldest Route based on creation timestamp.
                  * The Route appearing first in alphabetical order by
                    "{namespace}/{name}".


                  The rejected Route MUST raise an 'Accepted' condition with a status of
                  'False' in the corresponding RouteParentStatus.


                  Support: Core
                items:
                  description: |-
                    Hostname is the fully qualified domain name of a network host. This matches
                    the RFC 1123 definition of a hostname with 2 notable exceptions:


                     1. IPs are not allowed.
                     2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                        label must appear by itself as the first label.


                    Hostname can be "precise" which is a domain name without the terminating
                    dot of a network host (e.g. "foo.example.com") or "wildcard", which is a
                    domain name prefixed with a single wildcard label (e.g. `*.example.com`).


                    Note that as per RFC1035 and RFC1123, a *label* must consist of lower case
                    alphanumeric characters or '-', and must start and end with an alphanumeric
                    character. No other punctuation is allowed.
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: |+
                  ParentRefs references the resources (usually Gateways) that a Route wants
                  to be attached to. Note that the referenced parent resource needs to
                  allow this for the attachment to be complete. For Gateways, that means
                  the Gateway needs to allow attachment from Routes of this kind and
                  namespace. For Services, that means the Service must either be in the same
                  namespace for a "producer" route, or the mesh implementation must support
                  and allow "consumer" routes for the referenced Service. ReferenceGrant is
                  not applicable for governing ParentRefs to Services - it is not possible to
                  create a "producer" route for a Service in a different namespace from the
                  Route.


                  There are two kinds of parent resources with "Core" support:


                  * Gateway (Gateway conformance profile)
                  * Service (Mesh conformance profile, ClusterIP Services only)


                  This API may be extended in the future to support additional kinds of parent
                  resources.


                  ParentRefs must be _distinct_. This means either that:


                  * They select different objects.  If this is the case, then parentRef
                    entries are distinct. In terms of fields, this means that the
                    multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                    be unique across all parentRef entries in the Route.
                  * They do not select different objects, but for each optional field used,
                    each ParentRef that selects the same object must set the same set of
                    optional fields to different values. If one ParentRef sets a
                    combination of optional fields, all must set the same combination.


                  Some examples:


                  * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                    same object must also set `sectionName`.
                  * If one ParentRef sets `port`, all ParentRefs referencing the same
                    object must also set `port`.
                  * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                    referencing the same object must also set `sectionName` and `port`.


                  It is possible to separately reference multiple distinct objects that may
                  be collapsed by an implementation. For example, some implementations may
                  choose to merge compatible Gateway Listeners together. If that is the
                  case, the list of routes attached to those resources should also be
                  merged.


                  Note that for ParentRefs that cross namespace boundaries, there are specific
                  rules. Cross-namespace references are only valid if they are explicitly
                  allowed by something in the namespace they are referring to. For example,
                  Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                  generic way to enable other kinds of cross-namespace reference.








                items:
                  description: |-
                    ParentReference identifies an API object (usually a Gateway) that can be considered
                    a parent of this resource (usually a route). There are two kinds of parent resources
                    with "Core" support:


                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)


                    This API may be extended in the future to support additional kinds of parent
                    resources.


                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: |-
                        Group is the group of the referent.
                        When unspecified, "gateway.networking.k8s.io" is inferred.
                        To set the core API group (such as for a "Service" kind referent),
                        Group must be explicitly set to "" (empty string).


                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: |-
                        Kind is kind of the referent.


                        There are two kinds of parent resources with "Core" support:


                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)


                        Support for other resources is Implementation-Specific.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent. When unspecified, this refers
                        to the local namespace of the Route.


                        Note that there are specific rules for ParentRefs which cross namespace
                        boundaries. Cross-namespace references are only valid if they are explicitly
                        allowed by something in the namespace they are referring to. For example:
                        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.





                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: |-
                        Port is the network port this Route targets. It can be interpreted
                        differently based on the type of parent resource.


                        When the parent resource is a Gateway, this targets all listeners
                        listening on the specified port that also support this kind of Route(and
                        select this Route). It's not recommended to set `Port` unless the
                        networking behaviors specified in a Route must apply to a specific port
                        as opposed to a listener(s) whose port(s) may be changed. When both Port
                        and SectionName are specified, the name and port of the selected listener
                        must match both specified values.





                        Implementations MAY choose to support other parent resources.
                        Implementations supporting other types of parent resources MUST clearly
                        document how/if Port is interpreted.


                        For the purpose of status, an attachment is considered successful as
                        long as the parent resource accepts it partially. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway.


                        Support: Extended
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. In the
                        following resources, SectionName is interpreted as the following:


                        * Gateway: Listener name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.
                        * Service: Port name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.


                        Implementations MAY choose to support attaching Routes to other resources.
                        If that is the case, they MUST clearly document how SectionName is
                        interpreted.


                        When unspecified (empty string), this will reference the entire resource.
                        For the purpose of status, an attachment is considered successful if at
                        least one section in the parent resource accepts it. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route, the
                        Route MUST be considered detached from the Gateway.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-validations:
                - message: sectionName must be specified when parentRefs includes
                    2 or more references to the same parent
                  rule: 'self.all(p1, self.all(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '''') && (!has(p2.__namespace__) || p2.__namespace__
                    == '''')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) ? ((!has(p1.sectionName)
                    || p1.sectionName == '''') == (!has(p2.sectionName) || p2.sectionName
                    == '''')) : true))'
                - message: sectionName must be unique when parentRefs includes 2 or
                    more references to the same parent
                  rule: self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__
                    == '')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName)
                    || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName
                    == '')) || (has(p1.sectionName) && has(p2.sectionName) && p1.sectionName
                    == p2.sectionName))))
              rules:
                description: Rules are a list of GRPC matchers, filters and actions.
                items:
                  description: |-
                    GRPCRouteRule defines the semantics for matching a gRPC request based on
                    conditions (matches), processing it (filters), and forwarding the request to
                    an API object (backendRefs).
                  properties:
                    backendRefs:
                      description: |-
                        BackendRefs defines the backend(s) where matching requests should be
                        sent.


                        Failure behavior here depends on how many BackendRefs are specified and
                        how many are invalid.


                        If *all* entries in BackendRefs are invalid, and there are also no filters
                        specified in this route rule, *all* traffic which matches this rule MUST
                        receive an `UNAVAILABLE` status.


                        See the GRPCBackendRef definition for the rules about what makes a single
                        GRPCBackendRef invalid.


                        When a GRPCBackendRef is invalid, `UNAVAILABLE` statuses MUST be returned for
                        requests that would have otherwise been routed to an invalid backend. If
                        multiple backends are specified, and some are invalid, the proportion of
                        requests that would otherwise have been routed to an invalid backend
                        MUST receive an `UNAVAILABLE` status.


                        For example, if two backends are specified with equal weights, and one is
                        invalid, 50 percent of traffic MUST receive an `UNAVAILABLE` status.
                        Implementations may choose how that 50 percent is determined.


                        Support: Core for Kubernetes Service


                        Support: Implementation-specific for any other resource


                        Support for weight: Core
                      items:
                        description: |-
                          GRPCBackendRef defines how a GRPCRoute forwards a gRPC request.


                          Note that when a namespace different than the local namespace is specified, a
                          ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.


                          <gateway:experimental:description>


                          When the BackendRef points to a Kubernetes Service, implementations SHOULD
                          honor the appProtocol field if it is set for the target Service Port.


                          Implementations supporting appProtocol SHOULD recognize the Kubernetes
                          Standard Application Protocols defined in KEP-3726.


                          If a Service appProtocol isn't specified, an implementation MAY infer the
                          backend protocol through its own means. Implementations MAY infer the
                          protocol from the Route type referring to the backend Service.


                          If a Route is not able to send traffic to the backend using the specified
                          protocol then the backend is considered invalid. Implementations MUST set the
                          "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.


                          </gateway:experimental:description>
                        properties:
                          filters:
                            description: |-
                              Filters defined at this level MUST be executed if and only if the
                              request is being forwarded to the backend defined here.


                              Support: Implementation-specific (For broader support of filters, use the
                              Filters field in GRPCRouteRule.)
                            items:
                              description: |-
                                GRPCRouteFilter defines processing steps that must be completed during the
                                request or response lifecycle. GRPCRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway implementations. Some
                                examples include request or response modification, implementing
                                authentication strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type of the filter.
                              properties:
                                extensionRef:
                                  description: |-
                                    ExtensionRef is an optional, implementation-specific extension to the
                                    "filter" behavior.  For example, resource "myroutefilter" in group
                                    "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                    extended filters.


                                    Support: Implementation-specific


                                    This filter can be used multiple times within the same rule.
                                  properties:
                                    group:
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For
                                        example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: |-
                                    RequestHeaderModifier defines a schema for a filter that modifies request
                                    headers.


                                    Support: Core
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: |-
                                    RequestMirror defines a schema for a filter that mirrors requests.
                                    Requests are sent to the specified destination, but responses from
                                    that destination are ignored.


                                    This filter can be used multiple times within the same rule. Note that
                                    not all implementations will be able to support mirroring to multiple
                                    backends.


                                    Support: Extended
                                  properties:
                                    backendRef:
                                      description: |-
                                        BackendRef references a resource where mirrored requests are sent.


                                        Mirrored requests must be sent only to a single destination endpoint
                                        within this BackendRef, irrespective of how many endpoints are present
                                        within this BackendRef.


                                        If the referent cannot be found, this BackendRef is invalid and must be
                                        dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                        condition on the Route status is set to `status: False` and not configure
                                        this backend in the underlying implementation.


                                        If there is a cross-namespace reference to an *existing* object
                                        that is not allowed by a ReferenceGrant, the controller must ensure the
                                        "ResolvedRefs"  condition on the Route is set to `status: False`,
                                        with the "RefNotPermitted" reason and not configure this backend in the
                                        underlying implementation.


                                        In either error case, the Message of the `ResolvedRefs` Condition
                                        should be used to provide more detail about the problem.


                                        Support: Extended for Kubernetes Service


                                        Support: Implementation-specific for any other resource
                                      properties:
                                        group:
                                          default: ""
                                          description: |-
                                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: |-
                                            Kind is the Kubernetes resource kind of the referent. For example
                                            "Service".


                                            Defaults to "Service" when not specified.


                                            ExternalName services can refer to CNAME DNS records that may live
                                            outside of the cluster and as such are difficult to reason about in
                                            terms of conformance. They also may not be safe to forward to (see
                                            CVE-2021-25740 for more information). Implementations SHOULD NOT
                                            support ExternalName Services.


                                            Support: Core (Services with a type other than ExternalName)


                                            Support: Implementation-specific (Services with type ExternalName)
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of the backend. When unspecified, the local
                                            namespace is inferred.


                                            Note that when a namespace different than the local namespace is specified,
                                            a ReferenceGrant object is required in the referent namespace to allow that
                                            namespace's owner to accept the reference. See the ReferenceGrant
                                            documentation for details.


                                            Support: Core
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: |-
                                            Port specifies the destination port number to use for this resource.
                                            Port is required when the referent is a Kubernetes Service. In this
                                            case, the port number is the service port number, not the target port.
                                            For other resources, destination port might be derived from the referent
                                            resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                      x-kubernetes-validations:
                                      - message: Must have port for Service reference
                                        rule: '(size(self.group) == 0 && self.kind
                                          == ''Service'') ? has(self.port) : true'
                                  required:
                                  - backendRef
                                  type: object
                                responseHeaderModifier:
                                  description: |-
                                    ResponseHeaderModifier defines a schema for a filter that modifies response
                                    headers.


                                    Support: Extended
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: |+
                                    Type identifies the type of filter to apply. As with other API fields,
                                    types are classified into three conformance levels:


                                    - Core: Filter types and their corresponding configuration defined by
                                      "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                      implementations supporting GRPCRoute MUST support core filters.


                                    - Extended: Filter types and their corresponding configuration defined by
                                      "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                      are encouraged to support extended filters.


                                    - Implementation-specific: Filters that are defined and supported by specific vendors.
                                      In the future, filters showing convergence in behavior across multiple
                                      implementations will be considered for inclusion in extended or core
                                      conformance levels. Filter-specific configuration for such filters
                                      is specified using the ExtensionRef field. `Type` MUST be set to
                                      "ExtensionRef" for custom filters.


                                    Implementers are encouraged to define custom implementation types to
                                    extend the core API with implementation-specific behavior.


                                    If a reference to a custom filter type cannot be resolved, the filter
                                    MUST NOT be skipped. Instead, requests that would have been processed by
                                    that filter MUST receive a HTTP error response.


                                  enum:
                                  - ResponseHeaderModifier
                                  - RequestHeaderModifier
                                  - RequestMirror
                                  - ExtensionRef
                                  type: string
                              required:
                              - type
                              type: object
                              x-kubernetes-validations:
                              - message: filter.requestHeaderModifier must be nil
                                  if the filter.type is not RequestHeaderModifier
                                rule: '!(has(self.requestHeaderModifier) && self.type
                                  != ''RequestHeaderModifier'')'
                              - message: filter.requestHeaderModifier must be specified
                                  for RequestHeaderModifier filter.type
                                rule: '!(!has(self.requestHeaderModifier) && self.type
                                  == ''RequestHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be nil
                                  if the filter.type is not ResponseHeaderModifier
                                rule: '!(has(self.responseHeaderModifier) && self.type
                                  != ''ResponseHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be specified
                                  for ResponseHeaderModifier filter.type
                                rule: '!(!has(self.responseHeaderModifier) && self.type
                                  == ''ResponseHeaderModifier'')'
                              - message: filter.requestMirror must be nil if the filter.type
                                  is not RequestMirror
                                rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                              - message: filter.requestMirror must be specified for
                                  RequestMirror filter.type
                                rule: '!(!has(self.requestMirror) && self.type ==
                                  ''RequestMirror'')'
                              - message: filter.extensionRef must be nil if the filter.type
                                  is not ExtensionRef
                                rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                              - message: filter.extensionRef must be specified for
                                  ExtensionRef filter.type
                                rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                            maxItems: 16
                            type: array
                            x-kubernetes-validations:
                            - message: RequestHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                                <= 1
                            - message: ResponseHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                                <= 1
                          group:
                            default: ""
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: |-
                              Kind is the Kubernetes resource kind of the referent. For example
                              "Service".


                              Defaults to "Service" when not specified.


                              ExternalName services can refer to CNAME DNS records that may live
                              outside of the cluster and as such are difficult to reason about in
                              terms of conformance. They also may not be safe to forward to (see
                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                              support ExternalName Services.


                              Support: Core (Services with a type other than ExternalName)


                              Support: Implementation-specific (Services with type ExternalName)
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the backend. When unspecified, the local
                              namespace is inferred.


                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.


                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: |-
                              Port specifies the destination port number to use for this resource.
                              Port is required when the referent is a Kubernetes Service. In this
                              case, the port number is the service port number, not the target port.
                              For other resources, destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: |-
                              Weight specifies the proportion of requests forwarded to the referenced
                              backend. This is computed as weight/(sum of all weights in this
                              BackendRefs list). For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision an
                              implementation supports. Weight is not a percentage and the sum of
                              weights does not need to equal 100.


                              If only one backend is specified and it has a weight greater than 0, 100%
                              of the traffic is forwarded to that backend. If weight is set to 0, no
                              traffic should be forwarded for this entry. If unspecified, weight
                              defaults to 1.


                              Support for this field varies based on the context where used.
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: Must have port for Service reference
                          rule: '(size(self.group) == 0 && self.kind == ''Service'')
                            ? has(self.port) : true'
                      maxItems: 16
                      type: array
                    filters:
                      description: |-
                        Filters define the filters that are applied to requests that match
                        this rule.


                        The effects of ordering of multiple behaviors are currently unspecified.
                        This can change in the future based on feedback during the alpha stage.


                        Conformance-levels at this level are defined based on the type of filter:


                        - ALL core filters MUST be supported by all implementations that support
                          GRPCRoute.
                        - Implementers are encouraged to support extended filters.
                        - Implementation-specific custom filters have no API guarantees across
                          implementations.


                        Specifying the same filter multiple times is not supported unless explicitly
                        indicated in the filter.


                        If an implementation can not support a combination of filters, it must clearly
                        document that limitation. In cases where incompatible or unsupported
                        filters are specified and cause the `Accepted` condition to be set to status
                        `False`, implementations may use the `IncompatibleFilters` reason to specify
                        this configuration error.


                        Support: Core
                      items:
                        description: |-
                          GRPCRouteFilter defines processing steps that must be completed during the
                          request or response lifecycle. GRPCRouteFilters are meant as an extension
                          point to express processing that may be done in Gateway implementations. Some
                          examples include request or response modification, implementing
                          authentication strategies, rate-limiting, and traffic shaping. API
                          guarantee/conformance is defined based on the type of the filter.
                        properties:
                          extensionRef:
                            description: |-
                              ExtensionRef is an optional, implementation-specific extension to the
                              "filter" behavior.  For example, resource "myroutefilter" in group
                              "networking.example.net"). ExtensionRef MUST NOT be used for core and
                              extended filters.


                              Support: Implementation-specific


                              This filter can be used multiple times within the same rule.
                            properties:
                              group:
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is kind of the referent. For example
                                  "HTTPRoute" or "Service".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                            required:
                            - group
                            - kind
                            - name
                            type: object
                          requestHeaderModifier:
                            description: |-
                              RequestHeaderModifier defines a schema for a filter that modifies request
                              headers.


                              Support: Core
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz


                                  Config:
                                    remove: ["my-header1", "my-header3"]


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestMirror:
                            description: |-
                              RequestMirror defines a schema for a filter that mirrors requests.
                              Requests are sent to the specified destination, but responses from
                              that destination are ignored.


                              This filter can be used multiple times within the same rule. Note that
                              not all implementations will be able to support mirroring to multiple
                              backends.


                              Support: Extended
                            properties:
                              backendRef:
                                description: |-
                                  BackendRef references a resource where mirrored requests are sent.


                                  Mirrored requests must be sent only to a single destination endpoint
                                  within this BackendRef, irrespective of how many endpoints are present
                                  within this BackendRef.


                                  If the referent cannot be found, this BackendRef is invalid and must be
                                  dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                  condition on the Route status is set to `status: False` and not configure
                                  this backend in the underlying implementation.


                                  If there is a cross-namespace reference to an *existing* object
                                  that is not allowed by a ReferenceGrant, the controller must ensure the
                                  "ResolvedRefs"  condition on the Route is set to `status: False`,
                                  with the "RefNotPermitted" reason and not configure this backend in the
                                  underlying implementation.


                                  In either error case, the Message of the `ResolvedRefs` Condition
                                  should be used to provide more detail about the problem.


                                  Support: Extended for Kubernetes Service


                                  Support: Implementation-specific for any other resource
                                properties:
                                  group:
                                    default: ""
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: |-
                                      Kind is the Kubernetes resource kind of the referent. For example
                                      "Service".


                                      Defaults to "Service" when not specified.


                                      ExternalName services can refer to CNAME DNS records that may live
                                      outside of the cluster and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe to forward to (see
                                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                                      support ExternalName Services.


                                      Support: Core (Services with a type other than ExternalName)


                                      Support: Implementation-specific (Services with type ExternalName)
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the backend. When unspecified, the local
                                      namespace is inferred.


                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.


                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: |-
                                      Port specifies the destination port number to use for this resource.
                                      Port is required when the referent is a Kubernetes Service. In this
                                      case, the port number is the service port number, not the target port.
                                      For other resources, destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                                x-kubernetes-validations:
                                - message: Must have port for Service reference
                                  rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                    ? has(self.port) : true'
                            required:
                            - backendRef
                            type: object
                          responseHeaderModifier:
                            description: |-
                              ResponseHeaderModifier defines a schema for a filter that modifies response
                              headers.


                              Support: Extended
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz


                                  Config:
                                    remove: ["my-header1", "my-header3"]


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          type:
                            description: |+
                              Type identifies the type of filter to apply. As with other API fields,
                              types are classified into three conformance levels:


                              - Core: Filter types and their corresponding configuration defined by
                                "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                implementations supporting GRPCRoute MUST support core filters.


                              - Extended: Filter types and their corresponding configuration defined by
                                "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                are encouraged to support extended filters.


                              - Implementation-specific: Filters that are defined and supported by specific vendors.
                                In the future, filters showing convergence in behavior across multiple
                                implementations will be considered for inclusion in extended or core
                                conformance levels. Filter-specific configuration for such filters
                                is specified using the ExtensionRef field. `Type` MUST be set to
                                "ExtensionRef" for custom filters.


                              Implementers are encouraged to define custom implementation types to
                              extend the core API with implementation-specific behavior.


                              If a reference to a custom filter type cannot be resolved, the filter
                              MUST NOT be skipped. Instead, requests that would have been processed by
                              that filter MUST receive a HTTP error response.


                            enum:
                            - ResponseHeaderModifier
                            - RequestHeaderModifier
                            - RequestMirror
                            - ExtensionRef
                            type: string
                        required:
                        - type
                        type: object
                        x-kubernetes-validations:
                        - message: filter.requestHeaderModifier must be nil if the
                            filter.type is not RequestHeaderModifier
                          rule: '!(has(self.requestHeaderModifier) && self.type !=
                            ''RequestHeaderModifier'')'
                        - message: filter.requestHeaderModifier must be specified
                            for RequestHeaderModifier filter.type
                          rule: '!(!has(self.requestHeaderModifier) && self.type ==
                            ''RequestHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be nil if the
                            filter.type is not ResponseHeaderModifier
                          rule: '!(has(self.responseHeaderModifier) && self.type !=
                            ''ResponseHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be specified
                            for ResponseHeaderModifier filter.type
                          rule: '!(!has(self.responseHeaderModifier) && self.type
                            == ''ResponseHeaderModifier'')'
                        - message: filter.requestMirror must be nil if the filter.type
                            is not RequestMirror
                          rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                        - message: filter.requestMirror must be specified for RequestMirror
                            filter.type
                          rule: '!(!has(self.requestMirror) && self.type == ''RequestMirror'')'
                        - message: filter.extensionRef must be nil if the filter.type
                            is not ExtensionRef
                          rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                        - message: filter.extensionRef must be specified for ExtensionRef
                            filter.type
                          rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                      maxItems: 16
                      type: array
                      x-kubernetes-validations:
                      - message: RequestHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                          <= 1
                      - message: ResponseHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                          <= 1
                    matches:
                      description: |-
                        Matches define conditions used for matching the rule against incoming
                        gRPC requests. Each match is independent, i.e. this rule will be matched
                        if **any** one of the matches is satisfied.


                        For example, take the following matches configuration:


                        ```
                        matches:
                        - method:
                            service: foo.bar
                          headers:
                            values:
                              version: 2
                        - method:
                            service: foo.bar.v2
                        ```


                        For a request to match against this rule, it MUST satisfy
                        EITHER of the two conditions:


                        - service of foo.bar AND contains the header `version: 2`
                        - service of foo.bar.v2


                        See the documentation for GRPCRouteMatch on how to specify multiple
                        match conditions to be ANDed together.


                        If no matches are specified, the implementation MUST match every gRPC request.


                        Proxy or Load Balancer routing configuration generated from GRPCRoutes
                        MUST prioritize rules based on the following criteria, continuing on
                        ties. Merging MUST not be done between GRPCRoutes and HTTPRoutes.
                        Precedence MUST be given to the rule with the largest number of:


                        * Characters in a matching non-wildcard hostname.
                        * Characters in a matching hostname.
                        * Characters in a matching service.
                        * Characters in a matching method.
                        * Header matches.


                        If ties still exist across multiple Routes, matching precedence MUST be
                        determined in order of the following criteria, continuing on ties:


                        * The oldest Route based on creation timestamp.
                        * The Route appearing first in alphabetical order by
                          "{namespace}/{name}".


                        If ties still exist within the Route that has been given precedence,
                        matching precedence MUST be granted to the first matching rule meeting
                        the above criteria.
                      items:
                        description: |-
                          GRPCRouteMatch defines the predicate used to match requests to a given
                          action. Multiple match types are ANDed together, i.e. the match will
                          evaluate to true only if all conditions are satisfied.


                          For example, the match below will match a gRPC request only if its service
                          is `foo` AND it contains the `version: v1` header:


                          ```
                          matches:
                            - method:
                              type: Exact
                              service: "foo"
                              headers:
                            - name: "version"
                              value "v1"


                          ```
                        properties:
                          headers:
                            description: |-
                              Headers specifies gRPC request header matchers. Multiple match values are
                              ANDed together, meaning, a request MUST match all the specified headers
                              to select the route.
                            items:
                              description: |-
                                GRPCHeaderMatch describes how to select a gRPC route by matching gRPC request
                                headers.
                              properties:
                                name:
                                  description: |-
                                    Name is the name of the gRPC Header to be matched.


                                    If multiple entries specify equivalent header names, only the first
                                    entry with an equivalent name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be ignored. Due to the
                                    case-insensitivity of header names, "foo" and "Foo" are considered
                                    equivalent.
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: Type specifies how to match against
                                    the value of the header.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of the gRPC Header
                                    to be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: |-
                              Method specifies a gRPC request service/method matcher. If this field is
                              not specified, all services and methods will match.
                            properties:
                              method:
                                description: |-
                                  Value of the method to match against. If left empty or omitted, will
                                  match all services.


                                  At least one of Service and Method MUST be a non-empty string.
                                maxLength: 1024
                                type: string
                              service:
                                description: |-
                                  Value of the service to match against. If left empty or omitted, will
                                  match any service.


                                  At least one of Service and Method MUST be a non-empty string.
                                maxLength: 1024
                                type: string
                              type:
                                default: Exact
                                description: |-
                                  Type specifies how to match against the service and/or method.
                                  Support: Core (Exact with service and method specified)


                                  Support: Implementation-specific (Exact with method specified but no service specified)


                                  Support: Implementation-specific (RegularExpression)
                                enum:
                                - Exact
                                - RegularExpression
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: One or both of 'service' or 'method' must be
                                specified
                              rule: 'has(self.type) ? has(self.service) || has(self.method)
                                : true'
                            - message: service must only contain valid characters
                                (matching ^(?i)\.?[a-z_][a-z_0-9]*(\.[a-z_][a-z_0-9]*)*$)
                              rule: '(!has(self.type) || self.type == ''Exact'') &&
                                has(self.service) ? self.service.matches(r"""^(?i)\.?[a-z_][a-z_0-9]*(\.[a-z_][a-z_0-9]*)*$"""):
                                true'
                            - message: method must only contain valid characters (matching
                                ^[A-Za-z_][A-Za-z_0-9]*$)
                              rule: '(!has(self.type) || self.type == ''Exact'') &&
                                has(self.method) ? self.method.matches(r"""^[A-Za-z_][A-Za-z_0-9]*$"""):
                                true'
                        type: object
                      maxItems: 8
                      type: array
                  type: object
                maxItems: 16
                type: array
            type: object
          status:
            description: Status defines the current state of GRPCRoute.
            properties:
              parents:
                description: |-
                  Parents is a list of parent resources (usually Gateways) that are
                  associated with the route, and the status of the route with respect to
                  each parent. When this route attaches to a parent, the controller that
                  manages the parent must add an entry to this list when the controller
                  first sees the route and should update the entry as appropriate when the
                  route or gateway is modified.


                  Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this API
                  can only populate Route status for the Gateways/parent resources they are
                  responsible for.


                  A maximum of 32 Gateways will be represented in this list. An empty list
                  means the route has not been attached to any Gateway.
                items:
                  description: |-
                    RouteParentStatus describes the status of a route with respect to an
                    associated Parent.
                  properties:
                    conditions:
                      description: |-
                        Conditions describes the status of the route with respect to the Gateway.
                        Note that the route's availability is also subject to the Gateway's own
                        status conditions and listener status.


                        If the Route's ParentRef specifies an existing Gateway that supports
                        Routes of this kind AND that Gateway's controller has sufficient access,
                        then that Gateway's controller MUST set the "Accepted" condition on the
                        Route, to indicate whether the route has been accepted or rejected by the
                        Gateway, and why.


                        A Route MUST be considered "Accepted" if at least one of the Route's
                        rules is implemented by the Gateway.


                        There are a number of cases where the "Accepted" condition may not be set
                        due to lack of controller visibility, that includes when:


                        * The Route refers to a non-existent parent.
                        * The Route is of a type that the controller does not support.
                        * The Route is in a namespace the controller does not have access to.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource.\n---\nThis struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example,\n\n\n\ttype FooStatus
                          struct{\n\t    // Represents the observations of a foo's
                          current state.\n\t    // Known .status.conditions.type are:
                          \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                          +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    //
                          +listType=map\n\t    // +listMapKey=type\n\t    Conditions
                          []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                          patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                          \   // other fields\n\t}"
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: |-
                              type of condition in CamelCase or in foo.example.com/CamelCase.
                              ---
                              Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                              useful (see .node.status.conditions), the ability to deconflict is important.
                              The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.


                        Example: "example.net/gateway-controller".


                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).


                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: |-
                        ParentRef corresponds with a ParentRef in the spec that this
                        RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).


                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.


                            There are two kinds of parent resources with "Core" support:


                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)


                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.


                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.





                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.


                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.





                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.


                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.


                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:


                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.


                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.


                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - deprecated: true
    deprecationWarning: The v1alpha2 version of GRPCRoute has been deprecated and
      will be removed in a future release of the API. Please upgrade to v1.
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: |-
          GRPCRoute provides a way to route gRPC requests. This includes the capability
          to match requests by hostname, gRPC service, gRPC method, or HTTP/2 header.
          Filters can be used to specify additional processing steps. Backends specify
          where matching requests will be routed.


          GRPCRoute falls under extended support within the Gateway API. Within the
          following specification, the word "MUST" indicates that an implementation
          supporting GRPCRoute must conform to the indicated requirement, but an
          implementation not supporting this route type need not follow the requirement
          unless explicitly indicated.


          Implementations supporting `GRPCRoute` with the `HTTPS` `ProtocolType` MUST
          accept HTTP/2 connections without an initial upgrade from HTTP/1.1, i.e. via
          ALPN. If the implementation does not support this, then it MUST set the
          "Accepted" condition to "False" for the affected listener with a reason of
          "UnsupportedProtocol".  Implementations MAY also accept HTTP/2 connections
          with an upgrade from HTTP/1.


          Implementations supporting `GRPCRoute` with the `HTTP` `ProtocolType` MUST
          support HTTP/2 over cleartext TCP (h2c,
          https://www.rfc-editor.org/rfc/rfc7540#section-3.1) without an initial
          upgrade from HTTP/1.1, i.e. with prior knowledge
          (https://www.rfc-editor.org/rfc/rfc7540#section-3.4). If the implementation
          does not support this, then it MUST set the "Accepted" condition to "False"
          for the affected listener with a reason of "UnsupportedProtocol".
          Implementations MAY also accept HTTP/2 connections with an upgrade from
          HTTP/1, i.e. without prior knowledge.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of GRPCRoute.
            properties:
              hostnames:
                description: |-
                  Hostnames defines a set of hostnames to match against the GRPC
                  Host header to select a GRPCRoute to process the request. This matches
                  the RFC 1123 definition of a hostname with 2 notable exceptions:


                  1. IPs are not allowed.
                  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                     label MUST appear by itself as the first label.


                  If a hostname is specified by both the Listener and GRPCRoute, there
                  MUST be at least one intersecting hostname for the GRPCRoute to be
                  attached to the Listener. For example:


                  * A Listener with `test.example.com` as the hostname matches GRPCRoutes
                    that have either not specified any hostnames, or have specified at
                    least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches GRPCRoutes
                    that have either not specified any hostnames or have specified at least
                    one hostname that matches the Listener hostname. For example,
                    `test.example.com` and `*.example.com` would both match. On the other
                    hand, `example.com` and `test.example.net` would not match.


                  Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                  as a suffix match. That means that a match for `*.example.com` would match
                  both `test.example.com`, and `foo.test.example.com`, but not `example.com`.


                  If both the Listener and GRPCRoute have specified hostnames, any
                  GRPCRoute hostnames that do not match the Listener hostname MUST be
                  ignored. For example, if a Listener specified `*.example.com`, and the
                  GRPCRoute specified `test.example.com` and `test.example.net`,
                  `test.example.net` MUST NOT be considered for a match.


                  If both the Listener and GRPCRoute have specified hostnames, and none
                  match with the criteria above, then the GRPCRoute MUST NOT be accepted by
                  the implementation. The implementation MUST raise an 'Accepted' Condition
                  with a status of `False` in the corresponding RouteParentStatus.


                  If a Route (A) of type HTTPRoute or GRPCRoute is attached to a
                  Listener and that listener already has another Route (B) of the other
                  type attached and the intersection of the hostnames of A and B is
                  non-empty, then the implementation MUST accept exactly one of these two
                  routes, determined by the following criteria, in order:


                  * The oldest Route based on creation timestamp.
                  * The Route appearing first in alphabetical order by
                    "{namespace}/{name}".


                  The rejected Route MUST raise an 'Accepted' condition with a status of
                  'False' in the corresponding RouteParentStatus.


                  Support: Core
                items:
                  description: |-
                    Hostname is the fully qualified domain name of a network host. This matches
                    the RFC 1123 definition of a hostname with 2 notable exceptions:


                     1. IPs are not allowed.
                     2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                        label must appear by itself as the first label.


                    Hostname can be "precise" which is a domain name without the terminating
                    dot of a network host (e.g. "foo.example.com") or "wildcard", which is a
                    domain name prefixed with a single wildcard label (e.g. `*.example.com`).


                    Note that as per RFC1035 and RFC1123, a *label* must consist of lower case
                    alphanumeric characters or '-', and must start and end with an alphanumeric
                    character. No other punctuation is allowed.
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: |+
                  ParentRefs references the resources (usually Gateways) that a Route wants
                  to be attached to. Note that the referenced parent resource needs to
                  allow this for the attachment to be complete. For Gateways, that means
                  the Gateway needs to allow attachment from Routes of this kind and
                  namespace. For Services, that means the Service must either be in the same
                  namespace for a "producer" route, or the mesh implementation must support
                  and allow "consumer" routes for the referenced Service. ReferenceGrant is
                  not applicable for governing ParentRefs to Services - it is not possible to
                  create a "producer" route for a Service in a different namespace from the
                  Route.


                  There are two kinds of parent resources with "Core" support:


                  * Gateway (Gateway conformance profile)
                  * Service (Mesh conformance profile, ClusterIP Services only)


                  This API may be extended in the future to support additional kinds of parent
                  resources.


                  ParentRefs must be _distinct_. This means either that:


                  * They select different objects.  If this is the case, then parentRef
                    entries are distinct. In terms of fields, this means that the
                    multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                    be unique across all parentRef entries in the Route.
                  * They do not select different objects, but for each optional field used,
                    each ParentRef that selects the same object must set the same set of
                    optional fields to different values. If one ParentRef sets a
                    combination of optional fields, all must set the same combination.


                  Some examples:


                  * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                    same object must also set `sectionName`.
                  * If one ParentRef sets `port`, all ParentRefs referencing the same
                    object must also set `port`.
                  * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                    referencing the same object must also set `sectionName` and `port`.


                  It is possible to separately reference multiple distinct objects that may
                  be collapsed by an implementation. For example, some implementations may
                  choose to merge compatible Gateway Listeners together. If that is the
                  case, the list of routes attached to those resources should also be
                  merged.


                  Note that for ParentRefs that cross namespace boundaries, there are specific
                  rules. Cross-namespace references are only valid if they are explicitly
                  allowed by something in the namespace they are referring to. For example,
                  Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                  generic way to enable other kinds of cross-namespace reference.








                items:
                  description: |-
                    ParentReference identifies an API object (usually a Gateway) that can be considered
                    a parent of this resource (usually a route). There are two kinds of parent resources
                    with "Core" support:


                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)


                    This API may be extended in the future to support additional kinds of parent
                    resources.


                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: |-
                        Group is the group of the referent.
                        When unspecified, "gateway.networking.k8s.io" is inferred.
                        To set the core API group (such as for a "Service" kind referent),
                        Group must be explicitly set to "" (empty string).


                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: |-
                        Kind is kind of the referent.


                        There are two kinds of parent resources with "Core" support:


                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)


                        Support for other resources is Implementation-Specific.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent. When unspecified, this refers
                        to the local namespace of the Route.


                        Note that there are specific rules for ParentRefs which cross namespace
                        boundaries. Cross-namespace references are only valid if they are explicitly
                        allowed by something in the namespace they are referring to. For example:
                        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.





                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: |-
                        Port is the network port this Route targets. It can be interpreted
                        differently based on the type of parent resource.


                        When the parent resource is a Gateway, this targets all listeners
                        listening on the specified port that also support this kind of Route(and
                        select this Route). It's not recommended to set `Port` unless the
                        networking behaviors specified in a Route must apply to a specific port
                        as opposed to a listener(s) whose port(s) may be changed. When both Port
                        and SectionName are specified, the name and port of the selected listener
                        must match both specified values.





                        Implementations MAY choose to support other parent resources.
                        Implementations supporting other types of parent resources MUST clearly
                        document how/if Port is interpreted.


                        For the purpose of status, an attachment is considered successful as
                        long as the parent resource accepts it partially. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway.


                        Support: Extended
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. In the
                        following resources, SectionName is interpreted as the following:


                        * Gateway: Listener name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.
                        * Service: Port name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.


                        Implementations MAY choose to support attaching Routes to other resources.
                        If that is the case, they MUST clearly document how SectionName is
                        interpreted.


                        When unspecified (empty string), this will reference the entire resource.
                        For the purpose of status, an attachment is considered successful if at
                        least one section in the parent resource accepts it. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route, the
                        Route MUST be considered detached from the Gateway.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-validations:
                - message: sectionName must be specified when parentRefs includes
                    2 or more references to the same parent
                  rule: 'self.all(p1, self.all(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '''') && (!has(p2.__namespace__) || p2.__namespace__
                    == '''')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) ? ((!has(p1.sectionName)
                    || p1.sectionName == '''') == (!has(p2.sectionName) || p2.sectionName
                    == '''')) : true))'
                - message: sectionName must be unique when parentRefs includes 2 or
                    more references to the same parent
                  rule: self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__
                    == '')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName)
                    || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName
                    == '')) || (has(p1.sectionName) && has(p2.sectionName) && p1.sectionName
                    == p2.sectionName))))
              rules:
                description: Rules are a list of GRPC matchers, filters and actions.
                items:
                  description: |-
                    GRPCRouteRule defines the semantics for matching a gRPC request based on
                    conditions (matches), processing it (filters), and forwarding the request to
                    an API object (backendRefs).
                  properties:
                    backendRefs:
                      description: |-
                        BackendRefs defines the backend(s) where matching requests should be
                        sent.


                        Failure behavior here depends on how many BackendRefs are specified and
                        how many are invalid.


                        If *all* entries in BackendRefs are invalid, and there are also no filters
                        specified in this route rule, *all* traffic which matches this rule MUST
                        receive an `UNAVAILABLE` status.


                        See the GRPCBackendRef definition for the rules about what makes a single
                        GRPCBackendRef invalid.


                        When a GRPCBackendRef is invalid, `UNAVAILABLE` statuses MUST be returned for
                        requests that would have otherwise been routed to an invalid backend. If
                        multiple backends are specified, and some are invalid, the proportion of
                        requests that would otherwise have been routed to an invalid backend
                        MUST receive an `UNAVAILABLE` status.


                        For example, if two backends are specified with equal weights, and one is
                        invalid, 50 percent of traffic MUST receive an `UNAVAILABLE` status.
                        Implementations may choose how that 50 percent is determined.


                        Support: Core for Kubernetes Service


                        Support: Implementation-specific for any other resource


                        Support for weight: Core
                      items:
                        description: |-
                          GRPCBackendRef defines how a GRPCRoute forwards a gRPC request.


                          Note that when a namespace different than the local namespace is specified, a
                          ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.


                          <gateway:experimental:description>


                          When the BackendRef points to a Kubernetes Service, implementations SHOULD
                          honor the appProtocol field if it is set for the target Service Port.


                          Implementations supporting appProtocol SHOULD recognize the Kubernetes
                          Standard Application Protocols defined in KEP-3726.


                          If a Service appProtocol isn't specified, an implementation MAY infer the
                          backend protocol through its own means. Implementations MAY infer the
                          protocol from the Route type referring to the backend Service.


                          If a Route is not able to send traffic to the backend using the specified
                          protocol then the backend is considered invalid. Implementations MUST set the
                          "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.


                          </gateway:experimental:description>
                        properties:
                          filters:
                            description: |-
                              Filters defined at this level MUST be executed if and only if the
                              request is being forwarded to the backend defined here.


                              Support: Implementation-specific (For broader support of filters, use the
                              Filters field in GRPCRouteRule.)
                            items:
                              description: |-
                                GRPCRouteFilter defines processing steps that must be completed during the
                                request or response lifecycle. GRPCRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway implementations. Some
                                examples include request or response modification, implementing
                                authentication strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type of the filter.
                              properties:
                                extensionRef:
                                  description: |-
                                    ExtensionRef is an optional, implementation-specific extension to the
                                    "filter" behavior.  For example, resource "myroutefilter" in group
                                    "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                    extended filters.


                                    Support: Implementation-specific


                                    This filter can be used multiple times within the same rule.
                                  properties:
                                    group:
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For
                                        example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: |-
                                    RequestHeaderModifier defines a schema for a filter that modifies request
                                    headers.


                                    Support: Core
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: |-
                                    RequestMirror defines a schema for a filter that mirrors requests.
                                    Requests are sent to the specified destination, but responses from
                                    that destination are ignored.


                                    This filter can be used multiple times within the same rule. Note that
                                    not all implementations will be able to support mirroring to multiple
                                    backends.


                                    Support: Extended
                                  properties:
                                    backendRef:
                                      description: |-
                                        BackendRef references a resource where mirrored requests are sent.


                                        Mirrored requests must be sent only to a single destination endpoint
                                        within this BackendRef, irrespective of how many endpoints are present
                                        within this BackendRef.


                                        If the referent cannot be found, this BackendRef is invalid and must be
                                        dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                        condition on the Route status is set to `status: False` and not configure
                                        this backend in the underlying implementation.


                                        If there is a cross-namespace reference to an *existing* object
                                        that is not allowed by a ReferenceGrant, the controller must ensure the
                                        "ResolvedRefs"  condition on the Route is set to `status: False`,
                                        with the "RefNotPermitted" reason and not configure this backend in the
                                        underlying implementation.


                                        In either error case, the Message of the `ResolvedRefs` Condition
                                        should be used to provide more detail about the problem.


                                        Support: Extended for Kubernetes Service


                                        Support: Implementation-specific for any other resource
                                      properties:
                                        group:
                                          default: ""
                                          description: |-
                                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: |-
                                            Kind is the Kubernetes resource kind of the referent. For example
                                            "Service".


                                            Defaults to "Service" when not specified.


                                            ExternalName services can refer to CNAME DNS records that may live
                                            outside of the cluster and as such are difficult to reason about in
                                            terms of conformance. They also may not be safe to forward to (see
                                            CVE-2021-25740 for more information). Implementations SHOULD NOT
                                            support ExternalName Services.


                                            Support: Core (Services with a type other than ExternalName)


                                            Support: Implementation-specific (Services with type ExternalName)
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of the backend. When unspecified, the local
                                            namespace is inferred.


                                            Note that when a namespace different than the local namespace is specified,
                                            a ReferenceGrant object is required in the referent namespace to allow that
                                            namespace's owner to accept the reference. See the ReferenceGrant
                                            documentation for details.


                                            Support: Core
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: |-
                                            Port specifies the destination port number to use for this resource.
                                            Port is required when the referent is a Kubernetes Service. In this
                                            case, the port number is the service port number, not the target port.
                                            For other resources, destination port might be derived from the referent
                                            resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                      x-kubernetes-validations:
                                      - message: Must have port for Service reference
                                        rule: '(size(self.group) == 0 && self.kind
                                          == ''Service'') ? has(self.port) : true'
                                  required:
                                  - backendRef
                                  type: object
                                responseHeaderModifier:
                                  description: |-
                                    ResponseHeaderModifier defines a schema for a filter that modifies response
                                    headers.


                                    Support: Extended
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: |+
                                    Type identifies the type of filter to apply. As with other API fields,
                                    types are classified into three conformance levels:


                                    - Core: Filter types and their corresponding configuration defined by
                                      "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                      implementations supporting GRPCRoute MUST support core filters.


                                    - Extended: Filter types and their corresponding configuration defined by
                                      "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                      are encouraged to support extended filters.


                                    - Implementation-specific: Filters that are defined and supported by specific vendors.
                                      In the future, filters showing convergence in behavior across multiple
                                      implementations will be considered for inclusion in extended or core
                                      conformance levels. Filter-specific configuration for such filters
                                      is specified using the ExtensionRef field. `Type` MUST be set to
                                      "ExtensionRef" for custom filters.


                                    Implementers are encouraged to define custom implementation types to
                                    extend the core API with implementation-specific behavior.


                                    If a reference to a custom filter type cannot be resolved, the filter
                                    MUST NOT be skipped. Instead, requests that would have been processed by
                                    that filter MUST receive a HTTP error response.


                                  enum:
                                  - ResponseHeaderModifier
                                  - RequestHeaderModifier
                                  - RequestMirror
                                  - ExtensionRef
                                  type: string
                              required:
                              - type
                              type: object
                              x-kubernetes-validations:
                              - message: filter.requestHeaderModifier must be nil
                                  if the filter.type is not RequestHeaderModifier
                                rule: '!(has(self.requestHeaderModifier) && self.type
                                  != ''RequestHeaderModifier'')'
                              - message: filter.requestHeaderModifier must be specified
                                  for RequestHeaderModifier filter.type
                                rule: '!(!has(self.requestHeaderModifier) && self.type
                                  == ''RequestHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be nil
                                  if the filter.type is not ResponseHeaderModifier
                                rule: '!(has(self.responseHeaderModifier) && self.type
                                  != ''ResponseHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be specified
                                  for ResponseHeaderModifier filter.type
                                rule: '!(!has(self.responseHeaderModifier) && self.type
                                  == ''ResponseHeaderModifier'')'
                              - message: filter.requestMirror must be nil if the filter.type
                                  is not RequestMirror
                                rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                              - message: filter.requestMirror must be specified for
                                  RequestMirror filter.type
                                rule: '!(!has(self.requestMirror) && self.type ==
                                  ''RequestMirror'')'
                              - message: filter.extensionRef must be nil if the filter.type
                                  is not ExtensionRef
                                rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                              - message: filter.extensionRef must be specified for
                                  ExtensionRef filter.type
                                rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                            maxItems: 16
                            type: array
                            x-kubernetes-validations:
                            - message: RequestHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                                <= 1
                            - message: ResponseHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                                <= 1
                          group:
                            default: ""
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: |-
                              Kind is the Kubernetes resource kind of the referent. For example
                              "Service".


                              Defaults to "Service" when not specified.


                              ExternalName services can refer to CNAME DNS records that may live
                              outside of the cluster and as such are difficult to reason about in
                              terms of conformance. They also may not be safe to forward to (see
                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                              support ExternalName Services.


                              Support: Core (Services with a type other than ExternalName)


                              Support: Implementation-specific (Services with type ExternalName)
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the backend. When unspecified, the local
                              namespace is inferred.


                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.


                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: |-
                              Port specifies the destination port number to use for this resource.
                              Port is required when the referent is a Kubernetes Service. In this
                              case, the port number is the service port number, not the target port.
                              For other resources, destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: |-
                              Weight specifies the proportion of requests forwarded to the referenced
                              backend. This is computed as weight/(sum of all weights in this
                              BackendRefs list). For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision an
                              implementation supports. Weight is not a percentage and the sum of
                              weights does not need to equal 100.


                              If only one backend is specified and it has a weight greater than 0, 100%
                              of the traffic is forwarded to that backend. If weight is set to 0, no
                              traffic should be forwarded for this entry. If unspecified, weight
                              defaults to 1.


                              Support for this field varies based on the context where used.
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: Must have port for Service reference
                          rule: '(size(self.group) == 0 && self.kind == ''Service'')
                            ? has(self.port) : true'
                      maxItems: 16
                      type: array
                    filters:
                      description: |-
                        Filters define the filters that are applied to requests that match
                        this rule.


                        The effects of ordering of multiple behaviors are currently unspecified.
                        This can change in the future based on feedback during the alpha stage.


                        Conformance-levels at this level are defined based on the type of filter:


                        - ALL core filters MUST be supported by all implementations that support
                          GRPCRoute.
                        - Implementers are encouraged to support extended filters.
                        - Implementation-specific custom filters have no API guarantees across
                          implementations.


                        Specifying the same filter multiple times is not supported unless explicitly
                        indicated in the filter.


                        If an implementation can not support a combination of filters, it must clearly
                        document that limitation. In cases where incompatible or unsupported
                        filters are specified and cause the `Accepted` condition to be set to status
                        `False`, implementations may use the `IncompatibleFilters` reason to specify
                        this configuration error.


                        Support: Core
                      items:
                        description: |-
                          GRPCRouteFilter defines processing steps that must be completed during the
                          request or response lifecycle. GRPCRouteFilters are meant as an extension
                          point to express processing that may be done in Gateway implementations. Some
                          examples include request or response modification, implementing
                          authentication strategies, rate-limiting, and traffic shaping. API
                          guarantee/conformance is defined based on the type of the filter.
                        properties:
                          extensionRef:
                            description: |-
                              ExtensionRef is an optional, implementation-specific extension to the
                              "filter" behavior.  For example, resource "myroutefilter" in group
                              "networking.example.net"). ExtensionRef MUST NOT be used for core and
                              extended filters.


                              Support: Implementation-specific


                              This filter can be used multiple times within the same rule.
                            properties:
                              group:
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is kind of the referent. For example
                                  "HTTPRoute" or "Service".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                            required:
                            - group
                            - kind
                            - name
                            type: object
                          requestHeaderModifier:
                            description: |-
                              RequestHeaderModifier defines a schema for a filter that modifies request
                              headers.


                              Support: Core
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz


                                  Config:
                                    remove: ["my-header1", "my-header3"]


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestMirror:
                            description: |-
                              RequestMirror defines a schema for a filter that mirrors requests.
                              Requests are sent to the specified destination, but responses from
                              that destination are ignored.


                              This filter can be used multiple times within the same rule. Note that
                              not all implementations will be able to support mirroring to multiple
                              backends.


                              Support: Extended
                            properties:
                              backendRef:
                                description: |-
                                  BackendRef references a resource where mirrored requests are sent.


                                  Mirrored requests must be sent only to a single destination endpoint
                                  within this BackendRef, irrespective of how many endpoints are present
                                  within this BackendRef.


                                  If the referent cannot be found, this BackendRef is invalid and must be
                                  dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                  condition on the Route status is set to `status: False` and not configure
                                  this backend in the underlying implementation.


                                  If there is a cross-namespace reference to an *existing* object
                                  that is not allowed by a ReferenceGrant, the controller must ensure the
                                  "ResolvedRefs"  condition on the Route is set to `status: False`,
                                  with the "RefNotPermitted" reason and not configure this backend in the
                                  underlying implementation.


                                  In either error case, the Message of the `ResolvedRefs` Condition
                                  should be used to provide more detail about the problem.


                                  Support: Extended for Kubernetes Service


                                  Support: Implementation-specific for any other resource
                                properties:
                                  group:
                                    default: ""
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: |-
                                      Kind is the Kubernetes resource kind of the referent. For example
                                      "Service".


                                      Defaults to "Service" when not specified.


                                      ExternalName services can refer to CNAME DNS records that may live
                                      outside of the cluster and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe to forward to (see
                                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                                      support ExternalName Services.


                                      Support: Core (Services with a type other than ExternalName)


                                      Support: Implementation-specific (Services with type ExternalName)
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the backend. When unspecified, the local
                                      namespace is inferred.


                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.


                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: |-
                                      Port specifies the destination port number to use for this resource.
                                      Port is required when the referent is a Kubernetes Service. In this
                                      case, the port number is the service port number, not the target port.
                                      For other resources, destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                                x-kubernetes-validations:
                                - message: Must have port for Service reference
                                  rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                    ? has(self.port) : true'
                            required:
                            - backendRef
                            type: object
                          responseHeaderModifier:
                            description: |-
                              ResponseHeaderModifier defines a schema for a filter that modifies response
                              headers.


                              Support: Extended
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz


                                  Config:
                                    remove: ["my-header1", "my-header3"]


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          type:
                            description: |+
                              Type identifies the type of filter to apply. As with other API fields,
                              types are classified into three conformance levels:


                              - Core: Filter types and their corresponding configuration defined by
                                "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                implementations supporting GRPCRoute MUST support core filters.


                              - Extended: Filter types and their corresponding configuration defined by
                                "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                are encouraged to support extended filters.


                              - Implementation-specific: Filters that are defined and supported by specific vendors.
                                In the future, filters showing convergence in behavior across multiple
                                implementations will be considered for inclusion in extended or core
                                conformance levels. Filter-specific configuration for such filters
                                is specified using the ExtensionRef field. `Type` MUST be set to
                                "ExtensionRef" for custom filters.


                              Implementers are encouraged to define custom implementation types to
                              extend the core API with implementation-specific behavior.


                              If a reference to a custom filter type cannot be resolved, the filter
                              MUST NOT be skipped. Instead, requests that would have been processed by
                              that filter MUST receive a HTTP error response.


                            enum:
                            - ResponseHeaderModifier
                            - RequestHeaderModifier
                            - RequestMirror
                            - ExtensionRef
                            type: string
                        required:
                        - type
                        type: object
                        x-kubernetes-validations:
                        - message: filter.requestHeaderModifier must be nil if the
                            filter.type is not RequestHeaderModifier
                          rule: '!(has(self.requestHeaderModifier) && self.type !=
                            ''RequestHeaderModifier'')'
                        - message: filter.requestHeaderModifier must be specified
                            for RequestHeaderModifier filter.type
                          rule: '!(!has(self.requestHeaderModifier) && self.type ==
                            ''RequestHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be nil if the
                            filter.type is not ResponseHeaderModifier
                          rule: '!(has(self.responseHeaderModifier) && self.type !=
                            ''ResponseHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be specified
                            for ResponseHeaderModifier filter.type
                          rule: '!(!has(self.responseHeaderModifier) && self.type
                            == ''ResponseHeaderModifier'')'
                        - message: filter.requestMirror must be nil if the filter.type
                            is not RequestMirror
                          rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                        - message: filter.requestMirror must be specified for RequestMirror
                            filter.type
                          rule: '!(!has(self.requestMirror) && self.type == ''RequestMirror'')'
                        - message: filter.extensionRef must be nil if the filter.type
                            is not ExtensionRef
                          rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                        - message: filter.extensionRef must be specified for ExtensionRef
                            filter.type
                          rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                      maxItems: 16
                      type: array
                      x-kubernetes-validations:
                      - message: RequestHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                          <= 1
                      - message: ResponseHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                          <= 1
                    matches:
                      description: |-
                        Matches define conditions used for matching the rule against incoming
                        gRPC requests. Each match is independent, i.e. this rule will be matched
                        if **any** one of the matches is satisfied.


                        For example, take the following matches configuration:


                        ```
                        matches:
                        - method:
                            service: foo.bar
                          headers:
                            values:
                              version: 2
                        - method:
                            service: foo.bar.v2
                        ```


                        For a request to match against this rule, it MUST satisfy
                        EITHER of the two conditions:


                        - service of foo.bar AND contains the header `version: 2`
                        - service of foo.bar.v2


                        See the documentation for GRPCRouteMatch on how to specify multiple
                        match conditions to be ANDed together.


                        If no matches are specified, the implementation MUST match every gRPC request.


                        Proxy or Load Balancer routing configuration generated from GRPCRoutes
                        MUST prioritize rules based on the following criteria, continuing on
                        ties. Merging MUST not be done between GRPCRoutes and HTTPRoutes.
                        Precedence MUST be given to the rule with the largest number of:


                        * Characters in a matching non-wildcard hostname.
                        * Characters in a matching hostname.
                        * Characters in a matching service.
                        * Characters in a matching method.
                        * Header matches.


                        If ties still exist across multiple Routes, matching precedence MUST be
                        determined in order of the following criteria, continuing on ties:


                        * The oldest Route based on creation timestamp.
                        * The Route appearing first in alphabetical order by
                          "{namespace}/{name}".


                        If ties still exist within the Route that has been given precedence,
                        matching precedence MUST be granted to the first matching rule meeting
                        the above criteria.
                      items:
                        description: |-
                          GRPCRouteMatch defines the predicate used to match requests to a given
                          action. Multiple match types are ANDed together, i.e. the match will
                          evaluate to true only if all conditions are satisfied.


                          For example, the match below will match a gRPC request only if its service
                          is `foo` AND it contains the `version: v1` header:


                          ```
                          matches:
                            - method:
                              type: Exact
                              service: "foo"
                              headers:
                            - name: "version"
                              value "v1"


                          ```
                        properties:
                          headers:
                            description: |-
                              Headers specifies gRPC request header matchers. Multiple match values are
                              ANDed together, meaning, a request MUST match all the specified headers
                              to select the route.
                            items:
                              description: |-
                                GRPCHeaderMatch describes how to select a gRPC route by matching gRPC request
                                headers.
                              properties:
                                name:
                                  description: |-
                                    Name is the name of the gRPC Header to be matched.


                                    If multiple entries specify equivalent header names, only the first
                                    entry with an equivalent name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be ignored. Due to the
                                    case-insensitivity of header names, "foo" and "Foo" are considered
                                    equivalent.
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: Type specifies how to match against
                                    the value of the header.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of the gRPC Header
                                    to be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: |-
                              Method specifies a gRPC request service/method matcher. If this field is
                              not specified, all services and methods will match.
                            properties:
                              method:
                                description: |-
                                  Value of the method to match against. If left empty or omitted, will
                                  match all services.


                                  At least one of Service and Method MUST be a non-empty string.
                                maxLength: 1024
                                type: string
                              service:
                                description: |-
                                  Value of the service to match against. If left empty or omitted, will
                                  match any service.


                                  At least one of Service and Method MUST be a non-empty string.
                                maxLength: 1024
                                type: string
                              type:
                                default: Exact
                                description: |-
                                  Type specifies how to match against the service and/or method.
                                  Support: Core (Exact with service and method specified)


                                  Support: Implementation-specific (Exact with method specified but no service specified)


                                  Support: Implementation-specific (RegularExpression)
                                enum:
                                - Exact
                                - RegularExpression
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: One or both of 'service' or 'method' must be
                                specified
                              rule: 'has(self.type) ? has(self.service) || has(self.method)
                                : true'
                            - message: service must only contain valid characters
                                (matching ^(?i)\.?[a-z_][a-z_0-9]*(\.[a-z_][a-z_0-9]*)*$)
                              rule: '(!has(self.type) || self.type == ''Exact'') &&
                                has(self.service) ? self.service.matches(r"""^(?i)\.?[a-z_][a-z_0-9]*(\.[a-z_][a-z_0-9]*)*$"""):
                                true'
                            - message: method must only contain valid characters (matching
                                ^[A-Za-z_][A-Za-z_0-9]*$)
                              rule: '(!has(self.type) || self.type == ''Exact'') &&
                                has(self.method) ? self.method.matches(r"""^[A-Za-z_][A-Za-z_0-9]*$"""):
                                true'
                        type: object
                      maxItems: 8
                      type: array
                  type: object
                maxItems: 16
                type: array
            type: object
          status:
            description: Status defines the current state of GRPCRoute.
            properties:
              parents:
                description: |-
                  Parents is a list of parent resources (usually Gateways) that are
                  associated with the route, and the status of the route with respect to
                  each parent. When this route attaches to a parent, the controller that
                  manages the parent must add an entry to this list when the controller
                  first sees the route and should update the entry as appropriate when the
                  route or gateway is modified.


                  Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this API
                  can only populate Route status for the Gateways/parent resources they are
                  responsible for.


                  A maximum of 32 Gateways will be represented in this list. An empty list
                  means the route has not been attached to any Gateway.
                items:
                  description: |-
                    RouteParentStatus describes the status of a route with respect to an
                    associated Parent.
                  properties:
                    conditions:
                      description: |-
                        Conditions describes the status of the route with respect to the Gateway.
                        Note that the route's availability is also subject to the Gateway's own
                        status conditions and listener status.


                        If the Route's ParentRef specifies an existing Gateway that supports
                        Routes of this kind AND that Gateway's controller has sufficient access,
                        then that Gateway's controller MUST set the "Accepted" condition on the
                        Route, to indicate whether the route has been accepted or rejected by the
                        Gateway, and why.


                        A Route MUST be considered "Accepted" if at least one of the Route's
                        rules is implemented by the Gateway.


                        There are a number of cases where the "Accepted" condition may not be set
                        due to lack of controller visibility, that includes when:


                        * The Route refers to a non-existent parent.
                        * The Route is of a type that the controller does not support.
                        * The Route is in a namespace the controller does not have access to.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource.\n---\nThis struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example,\n\n\n\ttype FooStatus
                          struct{\n\t    // Represents the observations of a foo's
                          current state.\n\t    // Known .status.conditions.type are:
                          \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                          +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    //
                          +listType=map\n\t    // +listMapKey=type\n\t    Conditions
                          []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                          patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                          \   // other fields\n\t}"
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: |-
                              type of condition in CamelCase or in foo.example.com/CamelCase.
                              ---
                              Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                              useful (see .node.status.conditions), the ability to deconflict is important.
                              The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.


                        Example: "example.net/gateway-controller".


                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).


                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: |-
                        ParentRef corresponds with a ParentRef in the spec that this
                        RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).


                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.


                            There are two kinds of parent resources with "Core" support:


                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)


                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.


                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.





                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.


                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.





                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.


                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.


                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:


                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.


                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.


                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        type: object
    served: false
    storage: false
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/2997
    gateway.networking.k8s.io/bundle-version: v1.1.0
    gateway.networking.k8s.io/channel: standard
  creationTimestamp: null
  name: httproutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: HTTPRoute
    listKind: HTTPRouteList
    plural: httproutes
    singular: httproute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          HTTPRoute provides a way to route HTTP requests. This includes the capability
          to match requests by hostname, path, header, or query param. Filters can be
          used to specify additional processing steps. Backends specify where matching
          requests should be routed.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of HTTPRoute.
            properties:
              hostnames:
                description: |-
                  Hostnames defines a set of hostnames that should match against the HTTP Host
                  header to select a HTTPRoute used to process the request. Implementations
                  MUST ignore any port value specified in the HTTP Host header while
                  performing a match and (absent of any applicable header modification
                  configuration) MUST forward this header unmodified to the backend.


                  Valid values for Hostnames are determined by RFC 1123 definition of a
                  hostname with 2 notable exceptions:


                  1. IPs are not allowed.
                  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                     label must appear by itself as the first label.


                  If a hostname is specified by both the Listener and HTTPRoute, there
                  must be at least one intersecting hostname for the HTTPRoute to be
                  attached to the Listener. For example:


                  * A Listener with `test.example.com` as the hostname matches HTTPRoutes
                    that have either not specified any hostnames, or have specified at
                    least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches HTTPRoutes
                    that have either not specified any hostnames or have specified at least
                    one hostname that matches the Listener hostname. For example,
                    `*.example.com`, `test.example.com`, and `foo.test.example.com` would
                    all match. On the other hand, `example.com` and `test.example.net` would
                    not match.


                  Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                  as a suffix match. That means that a match for `*.example.com` would match
                  both `test.example.com`, and `foo.test.example.com`, but not `example.com`.


                  If both the Listener and HTTPRoute have specified hostnames, any
                  HTTPRoute hostnames that do not match the Listener hostname MUST be
                  ignored. For example, if a Listener specified `*.example.com`, and the
                  HTTPRoute specified `test.example.com` and `test.example.net`,
                  `test.example.net` must not be considered for a match.


                  If both the Listener and HTTPRoute have specified hostnames, and none
                  match with the criteria above, then the HTTPRoute is not accepted. The
                  implementation must raise an 'Accepted' Condition with a status of
                  `False` in the corresponding RouteParentStatus.


                  In the event that multiple HTTPRoutes specify intersecting hostnames (e.g.
                  overlapping wildcard matching and exact matching hostnames), precedence must
                  be given to rules from the HTTPRoute with the largest number of:


                  * Characters in a matching non-wildcard hostname.
                  * Characters in a matching hostname.


                  If ties exist across multiple Routes, the matching precedence rules for
                  HTTPRouteMatches takes over.


                  Support: Core
                items:
                  description: |-
                    Hostname is the fully qualified domain name of a network host. This matches
                    the RFC 1123 definition of a hostname with 2 notable exceptions:


                     1. IPs are not allowed.
                     2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                        label must appear by itself as the first label.


                    Hostname can be "precise" which is a domain name without the terminating
                    dot of a network host (e.g. "foo.example.com") or "wildcard", which is a
                    domain name prefixed with a single wildcard label (e.g. `*.example.com`).


                    Note that as per RFC1035 and RFC1123, a *label* must consist of lower case
                    alphanumeric characters or '-', and must start and end with an alphanumeric
                    character. No other punctuation is allowed.
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: |+
                  ParentRefs references the resources (usually Gateways) that a Route wants
                  to be attached to. Note that the referenced parent resource needs to
                  allow this for the attachment to be complete. For Gateways, that means
                  the Gateway needs to allow attachment from Routes of this kind and
                  namespace. For Services, that means the Service must either be in the same
                  namespace for a "producer" route, or the mesh implementation must support
                  and allow "consumer" routes for the referenced Service. ReferenceGrant is
                  not applicable for governing ParentRefs to Services - it is not possible to
                  create a "producer" route for a Service in a different namespace from the
                  Route.


                  There are two kinds of parent resources with "Core" support:


                  * Gateway (Gateway conformance profile)
                  * Service (Mesh conformance profile, ClusterIP Services only)


                  This API may be extended in the future to support additional kinds of parent
                  resources.


                  ParentRefs must be _distinct_. This means either that:


                  * They select different objects.  If this is the case, then parentRef
                    entries are distinct. In terms of fields, this means that the
                    multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                    be unique across all parentRef entries in the Route.
                  * They do not select different objects, but for each optional field used,
                    each ParentRef that selects the same object must set the same set of
                    optional fields to different values. If one ParentRef sets a
                    combination of optional fields, all must set the same combination.


                  Some examples:


                  * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                    same object must also set `sectionName`.
                  * If one ParentRef sets `port`, all ParentRefs referencing the same
                    object must also set `port`.
                  * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                    referencing the same object must also set `sectionName` and `port`.


                  It is possible to separately reference multiple distinct objects that may
                  be collapsed by an implementation. For example, some implementations may
                  choose to merge compatible Gateway Listeners together. If that is the
                  case, the list of routes attached to those resources should also be
                  merged.


                  Note that for ParentRefs that cross namespace boundaries, there are specific
                  rules. Cross-namespace references are only valid if they are explicitly
                  allowed by something in the namespace they are referring to. For example,
                  Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                  generic way to enable other kinds of cross-namespace reference.








                items:
                  description: |-
                    ParentReference identifies an API object (usually a Gateway) that can be considered
                    a parent of this resource (usually a route). There are two kinds of parent resources
                    with "Core" support:


                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)


                    This API may be extended in the future to support additional kinds of parent
                    resources.


                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: |-
                        Group is the group of the referent.
                        When unspecified, "gateway.networking.k8s.io" is inferred.
                        To set the core API group (such as for a "Service" kind referent),
                        Group must be explicitly set to "" (empty string).


                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: |-
                        Kind is kind of the referent.


                        There are two kinds of parent resources with "Core" support:


                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)


                        Support for other resources is Implementation-Specific.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent. When unspecified, this refers
                        to the local namespace of the Route.


                        Note that there are specific rules for ParentRefs which cross namespace
                        boundaries. Cross-namespace references are only valid if they are explicitly
                        allowed by something in the namespace they are referring to. For example:
                        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.





                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: |-
                        Port is the network port this Route targets. It can be interpreted
                        differently based on the type of parent resource.


                        When the parent resource is a Gateway, this targets all listeners
                        listening on the specified port that also support this kind of Route(and
                        select this Route). It's not recommended to set `Port` unless the
                        networking behaviors specified in a Route must apply to a specific port
                        as opposed to a listener(s) whose port(s) may be changed. When both Port
                        and SectionName are specified, the name and port of the selected listener
                        must match both specified values.





                        Implementations MAY choose to support other parent resources.
                        Implementations supporting other types of parent resources MUST clearly
                        document how/if Port is interpreted.


                        For the purpose of status, an attachment is considered successful as
                        long as the parent resource accepts it partially. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway.


                        Support: Extended
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. In the
                        following resources, SectionName is interpreted as the following:


                        * Gateway: Listener name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.
                        * Service: Port name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.


                        Implementations MAY choose to support attaching Routes to other resources.
                        If that is the case, they MUST clearly document how SectionName is
                        interpreted.


                        When unspecified (empty string), this will reference the entire resource.
                        For the purpose of status, an attachment is considered successful if at
                        least one section in the parent resource accepts it. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route, the
                        Route MUST be considered detached from the Gateway.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-validations:
                - message: sectionName must be specified when parentRefs includes
                    2 or more references to the same parent
                  rule: 'self.all(p1, self.all(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '''') && (!has(p2.__namespace__) || p2.__namespace__
                    == '''')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) ? ((!has(p1.sectionName)
                    || p1.sectionName == '''') == (!has(p2.sectionName) || p2.sectionName
                    == '''')) : true))'
                - message: sectionName must be unique when parentRefs includes 2 or
                    more references to the same parent
                  rule: self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__
                    == '')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName)
                    || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName
                    == '')) || (has(p1.sectionName) && has(p2.sectionName) && p1.sectionName
                    == p2.sectionName))))
              rules:
                default:
                - matches:
                  - path:
                      type: PathPrefix
                      value: /
                description: Rules are a list of HTTP matchers, filters and actions.
                items:
                  description: |-
                    HTTPRouteRule defines semantics for matching an HTTP request based on
                    conditions (matches), processing it (filters), and forwarding the request to
                    an API object (backendRefs).
                  properties:
                    backendRefs:
                      description: |-
                        BackendRefs defines the backend(s) where matching requests should be
                        sent.


                        Failure behavior here depends on how many BackendRefs are specified and
                        how many are invalid.


                        If *all* entries in BackendRefs are invalid, and there are also no filters
                        specified in this route rule, *all* traffic which matches this rule MUST
                        receive a 500 status code.


                        See the HTTPBackendRef definition for the rules about what makes a single
                        HTTPBackendRef invalid.


                        When a HTTPBackendRef is invalid, 500 status codes MUST be returned for
                        requests that would have otherwise been routed to an invalid backend. If
                        multiple backends are specified, and some are invalid, the proportion of
                        requests that would otherwise have been routed to an invalid backend
                        MUST receive a 500 status code.


                        For example, if two backends are specified with equal weights, and one is
                        invalid, 50 percent of traffic must receive a 500. Implementations may
                        choose how that 50 percent is determined.


                        Support: Core for Kubernetes Service


                        Support: Extended for Kubernetes ServiceImport


                        Support: Implementation-specific for any other resource


                        Support for weight: Core
                      items:
                        description: |-
                          HTTPBackendRef defines how a HTTPRoute forwards a HTTP request.


                          Note that when a namespace different than the local namespace is specified, a
                          ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.


                          <gateway:experimental:description>


                          When the BackendRef points to a Kubernetes Service, implementations SHOULD
                          honor the appProtocol field if it is set for the target Service Port.


                          Implementations supporting appProtocol SHOULD recognize the Kubernetes
                          Standard Application Protocols defined in KEP-3726.


                          If a Service appProtocol isn't specified, an implementation MAY infer the
                          backend protocol through its own means. Implementations MAY infer the
                          protocol from the Route type referring to the backend Service.


                          If a Route is not able to send traffic to the backend using the specified
                          protocol then the backend is considered invalid. Implementations MUST set the
                          "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.


                          </gateway:experimental:description>
                        properties:
                          filters:
                            description: |-
                              Filters defined at this level should be executed if and only if the
                              request is being forwarded to the backend defined here.


                              Support: Implementation-specific (For broader support of filters, use the
                              Filters field in HTTPRouteRule.)
                            items:
                              description: |-
                                HTTPRouteFilter defines processing steps that must be completed during the
                                request or response lifecycle. HTTPRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway implementations. Some
                                examples include request or response modification, implementing
                                authentication strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type of the filter.
                              properties:
                                extensionRef:
                                  description: |-
                                    ExtensionRef is an optional, implementation-specific extension to the
                                    "filter" behavior.  For example, resource "myroutefilter" in group
                                    "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                    extended filters.


                                    This filter can be used multiple times within the same rule.


                                    Support: Implementation-specific
                                  properties:
                                    group:
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For
                                        example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: |-
                                    RequestHeaderModifier defines a schema for a filter that modifies request
                                    headers.


                                    Support: Core
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: |-
                                    RequestMirror defines a schema for a filter that mirrors requests.
                                    Requests are sent to the specified destination, but responses from
                                    that destination are ignored.


                                    This filter can be used multiple times within the same rule. Note that
                                    not all implementations will be able to support mirroring to multiple
                                    backends.


                                    Support: Extended
                                  properties:
                                    backendRef:
                                      description: |-
                                        BackendRef references a resource where mirrored requests are sent.


                                        Mirrored requests must be sent only to a single destination endpoint
                                        within this BackendRef, irrespective of how many endpoints are present
                                        within this BackendRef.


                                        If the referent cannot be found, this BackendRef is invalid and must be
                                        dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                        condition on the Route status is set to `status: False` and not configure
                                        this backend in the underlying implementation.


                                        If there is a cross-namespace reference to an *existing* object
                                        that is not allowed by a ReferenceGrant, the controller must ensure the
                                        "ResolvedRefs"  condition on the Route is set to `status: False`,
                                        with the "RefNotPermitted" reason and not configure this backend in the
                                        underlying implementation.


                                        In either error case, the Message of the `ResolvedRefs` Condition
                                        should be used to provide more detail about the problem.


                                        Support: Extended for Kubernetes Service


                                        Support: Implementation-specific for any other resource
                                      properties:
                                        group:
                                          default: ""
                                          description: |-
                                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: |-
                                            Kind is the Kubernetes resource kind of the referent. For example
                                            "Service".


                                            Defaults to "Service" when not specified.


                                            ExternalName services can refer to CNAME DNS records that may live
                                            outside of the cluster and as such are difficult to reason about in
                                            terms of conformance. They also may not be safe to forward to (see
                                            CVE-2021-25740 for more information). Implementations SHOULD NOT
                                            support ExternalName Services.


                                            Support: Core (Services with a type other than ExternalName)


                                            Support: Implementation-specific (Services with type ExternalName)
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of the backend. When unspecified, the local
                                            namespace is inferred.


                                            Note that when a namespace different than the local namespace is specified,
                                            a ReferenceGrant object is required in the referent namespace to allow that
                                            namespace's owner to accept the reference. See the ReferenceGrant
                                            documentation for details.


                                            Support: Core
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: |-
                                            Port specifies the destination port number to use for this resource.
                                            Port is required when the referent is a Kubernetes Service. In this
                                            case, the port number is the service port number, not the target port.
                                            For other resources, destination port might be derived from the referent
                                            resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                      x-kubernetes-validations:
                                      - message: Must have port for Service reference
                                        rule: '(size(self.group) == 0 && self.kind
                                          == ''Service'') ? has(self.port) : true'
                                  required:
                                  - backendRef
                                  type: object
                                requestRedirect:
                                  description: |-
                                    RequestRedirect defines a schema for a filter that responds to the
                                    request with an HTTP redirection.


                                    Support: Core
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the hostname to be used in the value of the `Location`
                                        header in the response.
                                        When empty, the hostname in the `Host` header of the request is used.


                                        Support: Core
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines parameters used to modify the path of the incoming request.
                                        The modified path is then used to construct the `Location` header. When
                                        empty, the request path is used as-is.


                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".


                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.


                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.


                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                            -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           | /xyz/bar
                                            /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                            /foo         | /foo         | /xyz           | /xyz
                                            /foo/        | /foo         | /xyz           | /xyz/
                                            /foo/bar     | /foo         | <empty string> | /bar
                                            /foo/        | /foo         | <empty string> | /
                                            /foo         | /foo         | <empty string> | /
                                            /foo/        | /foo         | /              | /
                                            /foo         | /foo         | /              | /
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.


                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.


                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                      x-kubernetes-validations:
                                      - message: replaceFullPath must be specified
                                          when type is set to 'ReplaceFullPath'
                                        rule: 'self.type == ''ReplaceFullPath'' ?
                                          has(self.replaceFullPath) : true'
                                      - message: type must be 'ReplaceFullPath' when
                                          replaceFullPath is set
                                        rule: 'has(self.replaceFullPath) ? self.type
                                          == ''ReplaceFullPath'' : true'
                                      - message: replacePrefixMatch must be specified
                                          when type is set to 'ReplacePrefixMatch'
                                        rule: 'self.type == ''ReplacePrefixMatch''
                                          ? has(self.replacePrefixMatch) : true'
                                      - message: type must be 'ReplacePrefixMatch'
                                          when replacePrefixMatch is set
                                        rule: 'has(self.replacePrefixMatch) ? self.type
                                          == ''ReplacePrefixMatch'' : true'
                                    port:
                                      description: |-
                                        Port is the port to be used in the value of the `Location`
                                        header in the response.


                                        If no port is specified, the redirect port MUST be derived using the
                                        following rules:


                                        * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                          port associated with the redirect scheme. Specifically "http" to port 80
                                          and "https" to port 443. If the redirect scheme does not have a
                                          well-known port, the listener port of the Gateway SHOULD be used.
                                        * If redirect scheme is empty, the redirect port MUST be the Gateway
                                          Listener port.


                                        Implementations SHOULD NOT add the port number in the 'Location'
                                        header in the following cases:


                                        * A Location header that will use HTTP (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 80.
                                        * A Location header that will use HTTPS (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 443.


                                        Support: Extended
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    scheme:
                                      description: |-
                                        Scheme is the scheme to be used in the value of the `Location` header in
                                        the response. When empty, the scheme of the request is used.


                                        Scheme redirects can affect the port of the redirect, for more information,
                                        refer to the documentation for the port field of this filter.


                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.


                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.


                                        Support: Extended
                                      enum:
                                      - http
                                      - https
                                      type: string
                                    statusCode:
                                      default: 302
                                      description: |-
                                        StatusCode is the HTTP status code to be used in response.


                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.


                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.


                                        Support: Core
                                      enum:
                                      - 301
                                      - 302
                                      type: integer
                                  type: object
                                responseHeaderModifier:
                                  description: |-
                                    ResponseHeaderModifier defines a schema for a filter that modifies response
                                    headers.


                                    Support: Extended
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: |-
                                    Type identifies the type of filter to apply. As with other API fields,
                                    types are classified into three conformance levels:


                                    - Core: Filter types and their corresponding configuration defined by
                                      "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                      implementations must support core filters.


                                    - Extended: Filter types and their corresponding configuration defined by
                                      "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                      are encouraged to support extended filters.


                                    - Implementation-specific: Filters that are defined and supported by
                                      specific vendors.
                                      In the future, filters showing convergence in behavior across multiple
                                      implementations will be considered for inclusion in extended or core
                                      conformance levels. Filter-specific configuration for such filters
                                      is specified using the ExtensionRef field. `Type` should be set to
                                      "ExtensionRef" for custom filters.


                                    Implementers are encouraged to define custom implementation types to
                                    extend the core API with implementation-specific behavior.


                                    If a reference to a custom filter type cannot be resolved, the filter
                                    MUST NOT be skipped. Instead, requests that would have been processed by
                                    that filter MUST receive a HTTP error response.


                                    Note that values may be added to this enum, implementations
                                    must ensure that unknown values will not cause a crash.


                                    Unknown values here must result in the implementation setting the
                                    Accepted Condition for the Route to `status: False`, with a
                                    Reason of `UnsupportedValue`.
                                  enum:
                                  - RequestHeaderModifier
                                  - ResponseHeaderModifier
                                  - RequestMirror
                                  - RequestRedirect
                                  - URLRewrite
                                  - ExtensionRef
                                  type: string
                                urlRewrite:
                                  description: |-
                                    URLRewrite defines a schema for a filter that modifies a request during forwarding.


                                    Support: Extended
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the value to be used to replace the Host header value during
                                        forwarding.


                                        Support: Extended
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines a path rewrite.


                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".


                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.


                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.


                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                            -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           | /xyz/bar
                                            /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                            /foo         | /foo         | /xyz           | /xyz
                                            /foo/        | /foo         | /xyz           | /xyz/
                                            /foo/bar     | /foo         | <empty string> | /bar
                                            /foo/        | /foo         | <empty string> | /
                                            /foo         | /foo         | <empty string> | /
                                            /foo/        | /foo         | /              | /
                                            /foo         | /foo         | /              | /
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.


                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.


                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                      x-kubernetes-validations:
                                      - message: replaceFullPath must be specified
                                          when type is set to 'ReplaceFullPath'
                                        rule: 'self.type == ''ReplaceFullPath'' ?
                                          has(self.replaceFullPath) : true'
                                      - message: type must be 'ReplaceFullPath' when
                                          replaceFullPath is set
                                        rule: 'has(self.replaceFullPath) ? self.type
                                          == ''ReplaceFullPath'' : true'
                                      - message: replacePrefixMatch must be specified
                                          when type is set to 'ReplacePrefixMatch'
                                        rule: 'self.type == ''ReplacePrefixMatch''
                                          ? has(self.replacePrefixMatch) : true'
                                      - message: type must be 'ReplacePrefixMatch'
                                          when replacePrefixMatch is set
                                        rule: 'has(self.replacePrefixMatch) ? self.type
                                          == ''ReplacePrefixMatch'' : true'
                                  type: object
                              required:
                              - type
                              type: object
                              x-kubernetes-validations:
                              - message: filter.requestHeaderModifier must be nil
                                  if the filter.type is not RequestHeaderModifier
                                rule: '!(has(self.requestHeaderModifier) && self.type
                                  != ''RequestHeaderModifier'')'
                              - message: filter.requestHeaderModifier must be specified
                                  for RequestHeaderModifier filter.type
                                rule: '!(!has(self.requestHeaderModifier) && self.type
                                  == ''RequestHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be nil
                                  if the filter.type is not ResponseHeaderModifier
                                rule: '!(has(self.responseHeaderModifier) && self.type
                                  != ''ResponseHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be specified
                                  for ResponseHeaderModifier filter.type
                                rule: '!(!has(self.responseHeaderModifier) && self.type
                                  == ''ResponseHeaderModifier'')'
                              - message: filter.requestMirror must be nil if the filter.type
                                  is not RequestMirror
                                rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                              - message: filter.requestMirror must be specified for
                                  RequestMirror filter.type
                                rule: '!(!has(self.requestMirror) && self.type ==
                                  ''RequestMirror'')'
                              - message: filter.requestRedirect must be nil if the
                                  filter.type is not RequestRedirect
                                rule: '!(has(self.requestRedirect) && self.type !=
                                  ''RequestRedirect'')'
                              - message: filter.requestRedirect must be specified
                                  for RequestRedirect filter.type
                                rule: '!(!has(self.requestRedirect) && self.type ==
                                  ''RequestRedirect'')'
                              - message: filter.urlRewrite must be nil if the filter.type
                                  is not URLRewrite
                                rule: '!(has(self.urlRewrite) && self.type != ''URLRewrite'')'
                              - message: filter.urlRewrite must be specified for URLRewrite
                                  filter.type
                                rule: '!(!has(self.urlRewrite) && self.type == ''URLRewrite'')'
                              - message: filter.extensionRef must be nil if the filter.type
                                  is not ExtensionRef
                                rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                              - message: filter.extensionRef must be specified for
                                  ExtensionRef filter.type
                                rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                            maxItems: 16
                            type: array
                            x-kubernetes-validations:
                            - message: May specify either httpRouteFilterRequestRedirect
                                or httpRouteFilterRequestRewrite, but not both
                              rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                                && self.exists(f, f.type == ''URLRewrite''))'
                            - message: May specify either httpRouteFilterRequestRedirect
                                or httpRouteFilterRequestRewrite, but not both
                              rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                                && self.exists(f, f.type == ''URLRewrite''))'
                            - message: RequestHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                                <= 1
                            - message: ResponseHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                                <= 1
                            - message: RequestRedirect filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestRedirect').size()
                                <= 1
                            - message: URLRewrite filter cannot be repeated
                              rule: self.filter(f, f.type == 'URLRewrite').size()
                                <= 1
                          group:
                            default: ""
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: |-
                              Kind is the Kubernetes resource kind of the referent. For example
                              "Service".


                              Defaults to "Service" when not specified.


                              ExternalName services can refer to CNAME DNS records that may live
                              outside of the cluster and as such are difficult to reason about in
                              terms of conformance. They also may not be safe to forward to (see
                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                              support ExternalName Services.


                              Support: Core (Services with a type other than ExternalName)


                              Support: Implementation-specific (Services with type ExternalName)
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the backend. When unspecified, the local
                              namespace is inferred.


                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.


                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: |-
                              Port specifies the destination port number to use for this resource.
                              Port is required when the referent is a Kubernetes Service. In this
                              case, the port number is the service port number, not the target port.
                              For other resources, destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: |-
                              Weight specifies the proportion of requests forwarded to the referenced
                              backend. This is computed as weight/(sum of all weights in this
                              BackendRefs list). For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision an
                              implementation supports. Weight is not a percentage and the sum of
                              weights does not need to equal 100.


                              If only one backend is specified and it has a weight greater than 0, 100%
                              of the traffic is forwarded to that backend. If weight is set to 0, no
                              traffic should be forwarded for this entry. If unspecified, weight
                              defaults to 1.


                              Support for this field varies based on the context where used.
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: Must have port for Service reference
                          rule: '(size(self.group) == 0 && self.kind == ''Service'')
                            ? has(self.port) : true'
                      maxItems: 16
                      type: array
                    filters:
                      description: |-
                        Filters define the filters that are applied to requests that match
                        this rule.


                        Wherever possible, implementations SHOULD implement filters in the order
                        they are specified.


                        Implementations MAY choose to implement this ordering strictly, rejecting
                        any combination or order of filters that can not be supported. If implementations
                        choose a strict interpretation of filter ordering, they MUST clearly document
                        that behavior.


                        To reject an invalid combination or order of filters, implementations SHOULD
                        consider the Route Rules with this configuration invalid. If all Route Rules
                        in a Route are invalid, the entire Route would be considered invalid. If only
                        a portion of Route Rules are invalid, implementations MUST set the
                        "PartiallyInvalid" condition for the Route.


                        Conformance-levels at this level are defined based on the type of filter:


                        - ALL core filters MUST be supported by all implementations.
                        - Implementers are encouraged to support extended filters.
                        - Implementation-specific custom filters have no API guarantees across
                          implementations.


                        Specifying the same filter multiple times is not supported unless explicitly
                        indicated in the filter.


                        All filters are expected to be compatible with each other except for the
                        URLRewrite and RequestRedirect filters, which may not be combined. If an
                        implementation can not support other combinations of filters, they must clearly
                        document that limitation. In cases where incompatible or unsupported
                        filters are specified and cause the `Accepted` condition to be set to status
                        `False`, implementations may use the `IncompatibleFilters` reason to specify
                        this configuration error.


                        Support: Core
                      items:
                        description: |-
                          HTTPRouteFilter defines processing steps that must be completed during the
                          request or response lifecycle. HTTPRouteFilters are meant as an extension
                          point to express processing that may be done in Gateway implementations. Some
                          examples include request or response modification, implementing
                          authentication strategies, rate-limiting, and traffic shaping. API
                          guarantee/conformance is defined based on the type of the filter.
                        properties:
                          extensionRef:
                            description: |-
                              ExtensionRef is an optional, implementation-specific extension to the
                              "filter" behavior.  For example, resource "myroutefilter" in group
                              "networking.example.net"). ExtensionRef MUST NOT be used for core and
                              extended filters.


                              This filter can be used multiple times within the same rule.


                              Support: Implementation-specific
                            properties:
                              group:
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is kind of the referent. For example
                                  "HTTPRoute" or "Service".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                            required:
                            - group
                            - kind
                            - name
                            type: object
                          requestHeaderModifier:
                            description: |-
                              RequestHeaderModifier defines a schema for a filter that modifies request
                              headers.


                              Support: Core
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz


                                  Config:
                                    remove: ["my-header1", "my-header3"]


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestMirror:
                            description: |-
                              RequestMirror defines a schema for a filter that mirrors requests.
                              Requests are sent to the specified destination, but responses from
                              that destination are ignored.


                              This filter can be used multiple times within the same rule. Note that
                              not all implementations will be able to support mirroring to multiple
                              backends.


                              Support: Extended
                            properties:
                              backendRef:
                                description: |-
                                  BackendRef references a resource where mirrored requests are sent.


                                  Mirrored requests must be sent only to a single destination endpoint
                                  within this BackendRef, irrespective of how many endpoints are present
                                  within this BackendRef.


                                  If the referent cannot be found, this BackendRef is invalid and must be
                                  dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                  condition on the Route status is set to `status: False` and not configure
                                  this backend in the underlying implementation.


                                  If there is a cross-namespace reference to an *existing* object
                                  that is not allowed by a ReferenceGrant, the controller must ensure the
                                  "ResolvedRefs"  condition on the Route is set to `status: False`,
                                  with the "RefNotPermitted" reason and not configure this backend in the
                                  underlying implementation.


                                  In either error case, the Message of the `ResolvedRefs` Condition
                                  should be used to provide more detail about the problem.


                                  Support: Extended for Kubernetes Service


                                  Support: Implementation-specific for any other resource
                                properties:
                                  group:
                                    default: ""
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: |-
                                      Kind is the Kubernetes resource kind of the referent. For example
                                      "Service".


                                      Defaults to "Service" when not specified.


                                      ExternalName services can refer to CNAME DNS records that may live
                                      outside of the cluster and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe to forward to (see
                                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                                      support ExternalName Services.


                                      Support: Core (Services with a type other than ExternalName)


                                      Support: Implementation-specific (Services with type ExternalName)
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the backend. When unspecified, the local
                                      namespace is inferred.


                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.


                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: |-
                                      Port specifies the destination port number to use for this resource.
                                      Port is required when the referent is a Kubernetes Service. In this
                                      case, the port number is the service port number, not the target port.
                                      For other resources, destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                                x-kubernetes-validations:
                                - message: Must have port for Service reference
                                  rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                    ? has(self.port) : true'
                            required:
                            - backendRef
                            type: object
                          requestRedirect:
                            description: |-
                              RequestRedirect defines a schema for a filter that responds to the
                              request with an HTTP redirection.


                              Support: Core
                            properties:
                              hostname:
                                description: |-
                                  Hostname is the hostname to be used in the value of the `Location`
                                  header in the response.
                                  When empty, the hostname in the `Host` header of the request is used.


                                  Support: Core
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: |-
                                  Path defines parameters used to modify the path of the incoming request.
                                  The modified path is then used to construct the `Location` header. When
                                  empty, the request path is used as-is.


                                  Support: Extended
                                properties:
                                  replaceFullPath:
                                    description: |-
                                      ReplaceFullPath specifies the value with which to replace the full path
                                      of a request during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: |-
                                      ReplacePrefixMatch specifies the value with which to replace the prefix
                                      match of a request during a rewrite or redirect. For example, a request
                                      to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                      of "/xyz" would be modified to "/xyz/bar".


                                      Note that this matches the behavior of the PathPrefix match type. This
                                      matches full path elements. A path element refers to the list of labels
                                      in the path split by the `/` separator. When specified, a trailing `/` is
                                      ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                      match the prefix `/abc`, but the path `/abcd` would not.


                                      ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                      Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                      the implementation setting the Accepted Condition for the Route to `status: False`.


                                      Request Path | Prefix Match | Replace Prefix | Modified Path
                                      -------------|--------------|----------------|----------
                                      /foo/bar     | /foo         | /xyz           | /xyz/bar
                                      /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                      /foo         | /foo         | /xyz           | /xyz
                                      /foo/        | /foo         | /xyz           | /xyz/
                                      /foo/bar     | /foo         | <empty string> | /bar
                                      /foo/        | /foo         | <empty string> | /
                                      /foo         | /foo         | <empty string> | /
                                      /foo/        | /foo         | /              | /
                                      /foo         | /foo         | /              | /
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: |-
                                      Type defines the type of path modifier. Additional types may be
                                      added in a future release of the API.


                                      Note that values may be added to this enum, implementations
                                      must ensure that unknown values will not cause a crash.


                                      Unknown values here must result in the implementation setting the
                                      Accepted Condition for the Route to `status: False`, with a
                                      Reason of `UnsupportedValue`.
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                                x-kubernetes-validations:
                                - message: replaceFullPath must be specified when
                                    type is set to 'ReplaceFullPath'
                                  rule: 'self.type == ''ReplaceFullPath'' ? has(self.replaceFullPath)
                                    : true'
                                - message: type must be 'ReplaceFullPath' when replaceFullPath
                                    is set
                                  rule: 'has(self.replaceFullPath) ? self.type ==
                                    ''ReplaceFullPath'' : true'
                                - message: replacePrefixMatch must be specified when
                                    type is set to 'ReplacePrefixMatch'
                                  rule: 'self.type == ''ReplacePrefixMatch'' ? has(self.replacePrefixMatch)
                                    : true'
                                - message: type must be 'ReplacePrefixMatch' when
                                    replacePrefixMatch is set
                                  rule: 'has(self.replacePrefixMatch) ? self.type
                                    == ''ReplacePrefixMatch'' : true'
                              port:
                                description: |-
                                  Port is the port to be used in the value of the `Location`
                                  header in the response.


                                  If no port is specified, the redirect port MUST be derived using the
                                  following rules:


                                  * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                    port associated with the redirect scheme. Specifically "http" to port 80
                                    and "https" to port 443. If the redirect scheme does not have a
                                    well-known port, the listener port of the Gateway SHOULD be used.
                                  * If redirect scheme is empty, the redirect port MUST be the Gateway
                                    Listener port.


                                  Implementations SHOULD NOT add the port number in the 'Location'
                                  header in the following cases:


                                  * A Location header that will use HTTP (whether that is determined via
                                    the Listener protocol or the Scheme field) _and_ use port 80.
                                  * A Location header that will use HTTPS (whether that is determined via
                                    the Listener protocol or the Scheme field) _and_ use port 443.


                                  Support: Extended
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              scheme:
                                description: |-
                                  Scheme is the scheme to be used in the value of the `Location` header in
                                  the response. When empty, the scheme of the request is used.


                                  Scheme redirects can affect the port of the redirect, for more information,
                                  refer to the documentation for the port field of this filter.


                                  Note that values may be added to this enum, implementations
                                  must ensure that unknown values will not cause a crash.


                                  Unknown values here must result in the implementation setting the
                                  Accepted Condition for the Route to `status: False`, with a
                                  Reason of `UnsupportedValue`.


                                  Support: Extended
                                enum:
                                - http
                                - https
                                type: string
                              statusCode:
                                default: 302
                                description: |-
                                  StatusCode is the HTTP status code to be used in response.


                                  Note that values may be added to this enum, implementations
                                  must ensure that unknown values will not cause a crash.


                                  Unknown values here must result in the implementation setting the
                                  Accepted Condition for the Route to `status: False`, with a
                                  Reason of `UnsupportedValue`.


                                  Support: Core
                                enum:
                                - 301
                                - 302
                                type: integer
                            type: object
                          responseHeaderModifier:
                            description: |-
                              ResponseHeaderModifier defines a schema for a filter that modifies response
                              headers.


                              Support: Extended
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz


                                  Config:
                                    remove: ["my-header1", "my-header3"]


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          type:
                            description: |-
                              Type identifies the type of filter to apply. As with other API fields,
                              types are classified into three conformance levels:


                              - Core: Filter types and their corresponding configuration defined by
                                "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                implementations must support core filters.


                              - Extended: Filter types and their corresponding configuration defined by
                                "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                are encouraged to support extended filters.


                              - Implementation-specific: Filters that are defined and supported by
                                specific vendors.
                                In the future, filters showing convergence in behavior across multiple
                                implementations will be considered for inclusion in extended or core
                                conformance levels. Filter-specific configuration for such filters
                                is specified using the ExtensionRef field. `Type` should be set to
                                "ExtensionRef" for custom filters.


                              Implementers are encouraged to define custom implementation types to
                              extend the core API with implementation-specific behavior.


                              If a reference to a custom filter type cannot be resolved, the filter
                              MUST NOT be skipped. Instead, requests that would have been processed by
                              that filter MUST receive a HTTP error response.


                              Note that values may be added to this enum, implementations
                              must ensure that unknown values will not cause a crash.


                              Unknown values here must result in the implementation setting the
                              Accepted Condition for the Route to `status: False`, with a
                              Reason of `UnsupportedValue`.
                            enum:
                            - RequestHeaderModifier
                            - ResponseHeaderModifier
                            - RequestMirror
                            - RequestRedirect
                            - URLRewrite
                            - ExtensionRef
                            type: string
                          urlRewrite:
                            description: |-
                              URLRewrite defines a schema for a filter that modifies a request during forwarding.


                              Support: Extended
                            properties:
                              hostname:
                                description: |-
                                  Hostname is the value to be used to replace the Host header value during
                                  forwarding.


                                  Support: Extended
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: |-
                                  Path defines a path rewrite.


                                  Support: Extended
                                properties:
                                  replaceFullPath:
                                    description: |-
                                      ReplaceFullPath specifies the value with which to replace the full path
                                      of a request during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: |-
                                      ReplacePrefixMatch specifies the value with which to replace the prefix
                                      match of a request during a rewrite or redirect. For example, a request
                                      to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                      of "/xyz" would be modified to "/xyz/bar".


                                      Note that this matches the behavior of the PathPrefix match type. This
                                      matches full path elements. A path element refers to the list of labels
                                      in the path split by the `/` separator. When specified, a trailing `/` is
                                      ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                      match the prefix `/abc`, but the path `/abcd` would not.


                                      ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                      Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                      the implementation setting the Accepted Condition for the Route to `status: False`.


                                      Request Path | Prefix Match | Replace Prefix | Modified Path
                                      -------------|--------------|----------------|----------
                                      /foo/bar     | /foo         | /xyz           | /xyz/bar
                                      /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                      /foo         | /foo         | /xyz           | /xyz
                                      /foo/        | /foo         | /xyz           | /xyz/
                                      /foo/bar     | /foo         | <empty string> | /bar
                                      /foo/        | /foo         | <empty string> | /
                                      /foo         | /foo         | <empty string> | /
                                      /foo/        | /foo         | /              | /
                                      /foo         | /foo         | /              | /
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: |-
                                      Type defines the type of path modifier. Additional types may be
                                      added in a future release of the API.


                                      Note that values may be added to this enum, implementations
                                      must ensure that unknown values will not cause a crash.


                                      Unknown values here must result in the implementation setting the
                                      Accepted Condition for the Route to `status: False`, with a
                                      Reason of `UnsupportedValue`.
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                                x-kubernetes-validations:
                                - message: replaceFullPath must be specified when
                                    type is set to 'ReplaceFullPath'
                                  rule: 'self.type == ''ReplaceFullPath'' ? has(self.replaceFullPath)
                                    : true'
                                - message: type must be 'ReplaceFullPath' when replaceFullPath
                                    is set
                                  rule: 'has(self.replaceFullPath) ? self.type ==
                                    ''ReplaceFullPath'' : true'
                                - message: replacePrefixMatch must be specified when
                                    type is set to 'ReplacePrefixMatch'
                                  rule: 'self.type == ''ReplacePrefixMatch'' ? has(self.replacePrefixMatch)
                                    : true'
                                - message: type must be 'ReplacePrefixMatch' when
                                    replacePrefixMatch is set
                                  rule: 'has(self.replacePrefixMatch) ? self.type
                                    == ''ReplacePrefixMatch'' : true'
                            type: object
                        required:
                        - type
                        type: object
                        x-kubernetes-validations:
                        - message: filter.requestHeaderModifier must be nil if the
                            filter.type is not RequestHeaderModifier
                          rule: '!(has(self.requestHeaderModifier) && self.type !=
                            ''RequestHeaderModifier'')'
                        - message: filter.requestHeaderModifier must be specified
                            for RequestHeaderModifier filter.type
                          rule: '!(!has(self.requestHeaderModifier) && self.type ==
                            ''RequestHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be nil if the
                            filter.type is not ResponseHeaderModifier
                          rule: '!(has(self.responseHeaderModifier) && self.type !=
                            ''ResponseHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be specified
                            for ResponseHeaderModifier filter.type
                          rule: '!(!has(self.responseHeaderModifier) && self.type
                            == ''ResponseHeaderModifier'')'
                        - message: filter.requestMirror must be nil if the filter.type
                            is not RequestMirror
                          rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                        - message: filter.requestMirror must be specified for RequestMirror
                            filter.type
                          rule: '!(!has(self.requestMirror) && self.type == ''RequestMirror'')'
                        - message: filter.requestRedirect must be nil if the filter.type
                            is not RequestRedirect
                          rule: '!(has(self.requestRedirect) && self.type != ''RequestRedirect'')'
                        - message: filter.requestRedirect must be specified for RequestRedirect
                            filter.type
                          rule: '!(!has(self.requestRedirect) && self.type == ''RequestRedirect'')'
                        - message: filter.urlRewrite must be nil if the filter.type
                            is not URLRewrite
                          rule: '!(has(self.urlRewrite) && self.type != ''URLRewrite'')'
                        - message: filter.urlRewrite must be specified for URLRewrite
                            filter.type
                          rule: '!(!has(self.urlRewrite) && self.type == ''URLRewrite'')'
                        - message: filter.extensionRef must be nil if the filter.type
                            is not ExtensionRef
                          rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                        - message: filter.extensionRef must be specified for ExtensionRef
                            filter.type
                          rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                      maxItems: 16
                      type: array
                      x-kubernetes-validations:
                      - message: May specify either httpRouteFilterRequestRedirect
                          or httpRouteFilterRequestRewrite, but not both
                        rule: '!(self.exists(f, f.type == ''RequestRedirect'') &&
                          self.exists(f, f.type == ''URLRewrite''))'
                      - message: RequestHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                          <= 1
                      - message: ResponseHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                          <= 1
                      - message: RequestRedirect filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestRedirect').size() <=
                          1
                      - message: URLRewrite filter cannot be repeated
                        rule: self.filter(f, f.type == 'URLRewrite').size() <= 1
                    matches:
                      default:
                      - path:
                          type: PathPrefix
                          value: /
                      description: |-
                        Matches define conditions used for matching the rule against incoming
                        HTTP requests. Each match is independent, i.e. this rule will be matched
                        if **any** one of the matches is satisfied.


                        For example, take the following matches configuration:


                        ```
                        matches:
                        - path:
                            value: "/foo"
                          headers:
                          - name: "version"
                            value: "v2"
                        - path:
                            value: "/v2/foo"
                        ```


                        For a request to match against this rule, a request must satisfy
                        EITHER of the two conditions:


                        - path prefixed with `/foo` AND contains the header `version: v2`
                        - path prefix of `/v2/foo`


                        See the documentation for HTTPRouteMatch on how to specify multiple
                        match conditions that should be ANDed together.


                        If no matches are specified, the default is a prefix
                        path match on "/", which has the effect of matching every
                        HTTP request.


                        Proxy or Load Balancer routing configuration generated from HTTPRoutes
                        MUST prioritize matches based on the following criteria, continuing on
                        ties. Across all rules specified on applicable Routes, precedence must be
                        given to the match having:


                        * "Exact" path match.
                        * "Prefix" path match with largest number of characters.
                        * Method match.
                        * Largest number of header matches.
                        * Largest number of query param matches.


                        Note: The precedence of RegularExpression path matches are implementation-specific.


                        If ties still exist across multiple Routes, matching precedence MUST be
                        determined in order of the following criteria, continuing on ties:


                        * The oldest Route based on creation timestamp.
                        * The Route appearing first in alphabetical order by
                          "{namespace}/{name}".


                        If ties still exist within an HTTPRoute, matching precedence MUST be granted
                        to the FIRST matching rule (in list order) with a match meeting the above
                        criteria.


                        When no rules matching a request have been successfully attached to the
                        parent a request is coming from, a HTTP 404 status code MUST be returned.
                      items:
                        description: "HTTPRouteMatch defines the predicate used to
                          match requests to a given\naction. Multiple match types
                          are ANDed together, i.e. the match will\nevaluate to true
                          only if all conditions are satisfied.\n\n\nFor example,
                          the match below will match a HTTP request only if its path\nstarts
                          with `/foo` AND it contains the `version: v1` header:\n\n\n```\nmatch:\n\n\n\tpath:\n\t
                          \ value: \"/foo\"\n\theaders:\n\t- name: \"version\"\n\t
                          \ value \"v1\"\n\n\n```"
                        properties:
                          headers:
                            description: |-
                              Headers specifies HTTP request header matchers. Multiple match values are
                              ANDed together, meaning, a request must match all the specified headers
                              to select the route.
                            items:
                              description: |-
                                HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request
                                headers.
                              properties:
                                name:
                                  description: |-
                                    Name is the name of the HTTP Header to be matched. Name matching MUST be
                                    case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                    If multiple entries specify equivalent header names, only the first
                                    entry with an equivalent name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be ignored. Due to the
                                    case-insensitivity of header names, "foo" and "Foo" are considered
                                    equivalent.


                                    When a header is repeated in an HTTP request, it is
                                    implementation-specific behavior as to how this is represented.
                                    Generally, proxies should follow the guidance from the RFC:
                                    https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding
                                    processing a repeated header, with special handling for "Set-Cookie".
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: |-
                                    Type specifies how to match against the value of the header.


                                    Support: Core (Exact)


                                    Support: Implementation-specific (RegularExpression)


                                    Since RegularExpression HeaderMatchType has implementation-specific
                                    conformance, implementations can support POSIX, PCRE or any other dialects
                                    of regular expressions. Please read the implementation's documentation to
                                    determine the supported dialect.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP Header to
                                    be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: |-
                              Method specifies HTTP method matcher.
                              When specified, this route will be matched only if the request has the
                              specified method.


                              Support: Extended
                            enum:
                            - GET
                            - HEAD
                            - POST
                            - PUT
                            - DELETE
                            - CONNECT
                            - OPTIONS
                            - TRACE
                            - PATCH
                            type: string
                          path:
                            default:
                              type: PathPrefix
                              value: /
                            description: |-
                              Path specifies a HTTP request path matcher. If this field is not
                              specified, a default prefix match on the "/" path is provided.
                            properties:
                              type:
                                default: PathPrefix
                                description: |-
                                  Type specifies how to match against the path Value.


                                  Support: Core (Exact, PathPrefix)


                                  Support: Implementation-specific (RegularExpression)
                                enum:
                                - Exact
                                - PathPrefix
                                - RegularExpression
                                type: string
                              value:
                                default: /
                                description: Value of the HTTP path to match against.
                                maxLength: 1024
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: value must be an absolute path and start with
                                '/' when type one of ['Exact', 'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? self.value.startsWith(''/'')
                                : true'
                            - message: must not contain '//' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''//'')
                                : true'
                            - message: must not contain '/./' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''/./'')
                                : true'
                            - message: must not contain '/../' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''/../'')
                                : true'
                            - message: must not contain '%2f' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''%2f'')
                                : true'
                            - message: must not contain '%2F' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''%2F'')
                                : true'
                            - message: must not contain '#' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''#'')
                                : true'
                            - message: must not end with '/..' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.endsWith(''/..'')
                                : true'
                            - message: must not end with '/.' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.endsWith(''/.'')
                                : true'
                            - message: type must be one of ['Exact', 'PathPrefix',
                                'RegularExpression']
                              rule: self.type in ['Exact','PathPrefix'] || self.type
                                == 'RegularExpression'
                            - message: must only contain valid characters (matching
                                ^(?:[-A-Za-z0-9/._~!$&'()*+,;=:@]|[%][0-9a-fA-F]{2})+$)
                                for types ['Exact', 'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? self.value.matches(r"""^(?:[-A-Za-z0-9/._~!$&''()*+,;=:@]|[%][0-9a-fA-F]{2})+$""")
                                : true'
                          queryParams:
                            description: |-
                              QueryParams specifies HTTP query parameter matchers. Multiple match
                              values are ANDed together, meaning, a request must match all the
                              specified query parameters to select the route.


                              Support: Extended
                            items:
                              description: |-
                                HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP
                                query parameters.
                              properties:
                                name:
                                  description: |-
                                    Name is the name of the HTTP query param to be matched. This must be an
                                    exact string match. (See
                                    https://tools.ietf.org/html/rfc7230#section-2.7.3).


                                    If multiple entries specify equivalent query param names, only the first
                                    entry with an equivalent name MUST be considered for a match. Subsequent
                                    entries with an equivalent query param name MUST be ignored.


                                    If a query param is repeated in an HTTP request, the behavior is
                                    purposely left undefined, since different data planes have different
                                    capabilities. However, it is *recommended* that implementations should
                                    match against the first value of the param if the data plane supports it,
                                    as this behavior is expected in other load balancing contexts outside of
                                    the Gateway API.


                                    Users SHOULD NOT route traffic based on repeated query params to guard
                                    themselves against potential differences in the implementations.
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: |-
                                    Type specifies how to match against the value of the query parameter.


                                    Support: Extended (Exact)


                                    Support: Implementation-specific (RegularExpression)


                                    Since RegularExpression QueryParamMatchType has Implementation-specific
                                    conformance, implementations can support POSIX, PCRE or any other
                                    dialects of regular expressions. Please read the implementation's
                                    documentation to determine the supported dialect.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP query param
                                    to be matched.
                                  maxLength: 1024
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        type: object
                      maxItems: 8
                      type: array
                  type: object
                  x-kubernetes-validations:
                  - message: RequestRedirect filter must not be used together with
                      backendRefs
                    rule: '(has(self.backendRefs) && size(self.backendRefs) > 0) ?
                      (!has(self.filters) || self.filters.all(f, !has(f.requestRedirect))):
                      true'
                  - message: When using RequestRedirect filter with path.replacePrefixMatch,
                      exactly one PathPrefix match must be specified
                    rule: '(has(self.filters) && self.filters.exists_one(f, has(f.requestRedirect)
                      && has(f.requestRedirect.path) && f.requestRedirect.path.type
                      == ''ReplacePrefixMatch'' && has(f.requestRedirect.path.replacePrefixMatch)))
                      ? ((size(self.matches) != 1 || !has(self.matches[0].path) ||
                      self.matches[0].path.type != ''PathPrefix'') ? false : true)
                      : true'
                  - message: When using URLRewrite filter with path.replacePrefixMatch,
                      exactly one PathPrefix match must be specified
                    rule: '(has(self.filters) && self.filters.exists_one(f, has(f.urlRewrite)
                      && has(f.urlRewrite.path) && f.urlRewrite.path.type == ''ReplacePrefixMatch''
                      && has(f.urlRewrite.path.replacePrefixMatch))) ? ((size(self.matches)
                      != 1 || !has(self.matches[0].path) || self.matches[0].path.type
                      != ''PathPrefix'') ? false : true) : true'
                  - message: Within backendRefs, when using RequestRedirect filter
                      with path.replacePrefixMatch, exactly one PathPrefix match must
                      be specified
                    rule: '(has(self.backendRefs) && self.backendRefs.exists_one(b,
                      (has(b.filters) && b.filters.exists_one(f, has(f.requestRedirect)
                      && has(f.requestRedirect.path) && f.requestRedirect.path.type
                      == ''ReplacePrefixMatch'' && has(f.requestRedirect.path.replacePrefixMatch)))
                      )) ? ((size(self.matches) != 1 || !has(self.matches[0].path)
                      || self.matches[0].path.type != ''PathPrefix'') ? false : true)
                      : true'
                  - message: Within backendRefs, When using URLRewrite filter with
                      path.replacePrefixMatch, exactly one PathPrefix match must be
                      specified
                    rule: '(has(self.backendRefs) && self.backendRefs.exists_one(b,
                      (has(b.filters) && b.filters.exists_one(f, has(f.urlRewrite)
                      && has(f.urlRewrite.path) && f.urlRewrite.path.type == ''ReplacePrefixMatch''
                      && has(f.urlRewrite.path.replacePrefixMatch))) )) ? ((size(self.matches)
                      != 1 || !has(self.matches[0].path) || self.matches[0].path.type
                      != ''PathPrefix'') ? false : true) : true'
                maxItems: 16
                type: array
            type: object
          status:
            description: Status defines the current state of HTTPRoute.
            properties:
              parents:
                description: |-
                  Parents is a list of parent resources (usually Gateways) that are
                  associated with the route, and the status of the route with respect to
                  each parent. When this route attaches to a parent, the controller that
                  manages the parent must add an entry to this list when the controller
                  first sees the route and should update the entry as appropriate when the
                  route or gateway is modified.


                  Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this API
                  can only populate Route status for the Gateways/parent resources they are
                  responsible for.


                  A maximum of 32 Gateways will be represented in this list. An empty list
                  means the route has not been attached to any Gateway.
                items:
                  description: |-
                    RouteParentStatus describes the status of a route with respect to an
                    associated Parent.
                  properties:
                    conditions:
                      description: |-
                        Conditions describes the status of the route with respect to the Gateway.
                        Note that the route's availability is also subject to the Gateway's own
                        status conditions and listener status.


                        If the Route's ParentRef specifies an existing Gateway that supports
                        Routes of this kind AND that Gateway's controller has sufficient access,
                        then that Gateway's controller MUST set the "Accepted" condition on the
                        Route, to indicate whether the route has been accepted or rejected by the
                        Gateway, and why.


                        A Route MUST be considered "Accepted" if at least one of the Route's
                        rules is implemented by the Gateway.


                        There are a number of cases where the "Accepted" condition may not be set
                        due to lack of controller visibility, that includes when:


                        * The Route refers to a non-existent parent.
                        * The Route is of a type that the controller does not support.
                        * The Route is in a namespace the controller does not have access to.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource.\n---\nThis struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example,\n\n\n\ttype FooStatus
                          struct{\n\t    // Represents the observations of a foo's
                          current state.\n\t    // Known .status.conditions.type are:
                          \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                          +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    //
                          +listType=map\n\t    // +listMapKey=type\n\t    Conditions
                          []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                          patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                          \   // other fields\n\t}"
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: |-
                              type of condition in CamelCase or in foo.example.com/CamelCase.
                              ---
                              Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                              useful (see .node.status.conditions), the ability to deconflict is important.
                              The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.


                        Example: "example.net/gateway-controller".


                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).


                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: |-
                        ParentRef corresponds with a ParentRef in the spec that this
                        RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).


                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.


                            There are two kinds of parent resources with "Core" support:


                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)


                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.


                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.





                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.


                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.





                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.


                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.


                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:


                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.


                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.


                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          HTTPRoute provides a way to route HTTP requests. This includes the capability
          to match requests by hostname, path, header, or query param. Filters can be
          used to specify additional processing steps. Backends specify where matching
          requests should be routed.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of HTTPRoute.
            properties:
              hostnames:
                description: |-
                  Hostnames defines a set of hostnames that should match against the HTTP Host
                  header to select a HTTPRoute used to process the request. Implementations
                  MUST ignore any port value specified in the HTTP Host header while
                  performing a match and (absent of any applicable header modification
                  configuration) MUST forward this header unmodified to the backend.


                  Valid values for Hostnames are determined by RFC 1123 definition of a
                  hostname with 2 notable exceptions:


                  1. IPs are not allowed.
                  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                     label must appear by itself as the first label.


                  If a hostname is specified by both the Listener and HTTPRoute, there
                  must be at least one intersecting hostname for the HTTPRoute to be
                  attached to the Listener. For example:


                  * A Listener with `test.example.com` as the hostname matches HTTPRoutes
                    that have either not specified any hostnames, or have specified at
                    least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches HTTPRoutes
                    that have either not specified any hostnames or have specified at least
                    one hostname that matches the Listener hostname. For example,
                    `*.example.com`, `test.example.com`, and `foo.test.example.com` would
                    all match. On the other hand, `example.com` and `test.example.net` would
                    not match.


                  Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                  as a suffix match. That means that a match for `*.example.com` would match
                  both `test.example.com`, and `foo.test.example.com`, but not `example.com`.


                  If both the Listener and HTTPRoute have specified hostnames, any
                  HTTPRoute hostnames that do not match the Listener hostname MUST be
                  ignored. For example, if a Listener specified `*.example.com`, and the
                  HTTPRoute specified `test.example.com` and `test.example.net`,
                  `test.example.net` must not be considered for a match.


                  If both the Listener and HTTPRoute have specified hostnames, and none
                  match with the criteria above, then the HTTPRoute is not accepted. The
                  implementation must raise an 'Accepted' Condition with a status of
                  `False` in the corresponding RouteParentStatus.


                  In the event that multiple HTTPRoutes specify intersecting hostnames (e.g.
                  overlapping wildcard matching and exact matching hostnames), precedence must
                  be given to rules from the HTTPRoute with the largest number of:


                  * Characters in a matching non-wildcard hostname.
                  * Characters in a matching hostname.


                  If ties exist across multiple Routes, the matching precedence rules for
                  HTTPRouteMatches takes over.


                  Support: Core
                items:
                  description: |-
                    Hostname is the fully qualified domain name of a network host. This matches
                    the RFC 1123 definition of a hostname with 2 notable exceptions:


                     1. IPs are not allowed.
                     2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                        label must appear by itself as the first label.


                    Hostname can be "precise" which is a domain name without the terminating
                    dot of a network host (e.g. "foo.example.com") or "wildcard", which is a
                    domain name prefixed with a single wildcard label (e.g. `*.example.com`).


                    Note that as per RFC1035 and RFC1123, a *label* must consist of lower case
                    alphanumeric characters or '-', and must start and end with an alphanumeric
                    character. No other punctuation is allowed.
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: |+
                  ParentRefs references the resources (usually Gateways) that a Route wants
                  to be attached to. Note that the referenced parent resource needs to
                  allow this for the attachment to be complete. For Gateways, that means
                  the Gateway needs to allow attachment from Routes of this kind and
                  namespace. For Services, that means the Service must either be in the same
                  namespace for a "producer" route, or the mesh implementation must support
                  and allow "consumer" routes for the referenced Service. ReferenceGrant is
                  not applicable for governing ParentRefs to Services - it is not possible to
                  create a "producer" route for a Service in a different namespace from the
                  Route.


                  There are two kinds of parent resources with "Core" support:


                  * Gateway (Gateway conformance profile)
                  * Service (Mesh conformance profile, ClusterIP Services only)


                  This API may be extended in the future to support additional kinds of parent
                  resources.


                  ParentRefs must be _distinct_. This means either that:


                  * They select different objects.  If this is the case, then parentRef
                    entries are distinct. In terms of fields, this means that the
                    multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                    be unique across all parentRef entries in the Route.
                  * They do not select different objects, but for each optional field used,
                    each ParentRef that selects the same object must set the same set of
                    optional fields to different values. If one ParentRef sets a
                    combination of optional fields, all must set the same combination.


                  Some examples:


                  * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                    same object must also set `sectionName`.
                  * If one ParentRef sets `port`, all ParentRefs referencing the same
                    object must also set `port`.
                  * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                    referencing the same object must also set `sectionName` and `port`.


                  It is possible to separately reference multiple distinct objects that may
                  be collapsed by an implementation. For example, some implementations may
                  choose to merge compatible Gateway Listeners together. If that is the
                  case, the list of routes attached to those resources should also be
                  merged.


                  Note that for ParentRefs that cross namespace boundaries, there are specific
                  rules. Cross-namespace references are only valid if they are explicitly
                  allowed by something in the namespace they are referring to. For example,
                  Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                  generic way to enable other kinds of cross-namespace reference.








                items:
                  description: |-
                    ParentReference identifies an API object (usually a Gateway) that can be considered
                    a parent of this resource (usually a route). There are two kinds of parent resources
                    with "Core" support:


                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)


                    This API may be extended in the future to support additional kinds of parent
                    resources.


                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: |-
                        Group is the group of the referent.
                        When unspecified, "gateway.networking.k8s.io" is inferred.
                        To set the core API group (such as for a "Service" kind referent),
                        Group must be explicitly set to "" (empty string).


                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: |-
                        Kind is kind of the referent.


                        There are two kinds of parent resources with "Core" support:


                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)


                        Support for other resources is Implementation-Specific.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent. When unspecified, this refers
                        to the local namespace of the Route.


                        Note that there are specific rules for ParentRefs which cross namespace
                        boundaries. Cross-namespace references are only valid if they are explicitly
                        allowed by something in the namespace they are referring to. For example:
                        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.





                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: |-
                        Port is the network port this Route targets. It can be interpreted
                        differently based on the type of parent resource.


                        When the parent resource is a Gateway, this targets all listeners
                        listening on the specified port that also support this kind of Route(and
                        select this Route). It's not recommended to set `Port` unless the
                        networking behaviors specified in a Route must apply to a specific port
                        as opposed to a listener(s) whose port(s) may be changed. When both Port
                        and SectionName are specified, the name and port of the selected listener
                        must match both specified values.





                        Implementations MAY choose to support other parent resources.
                        Implementations supporting other types of parent resources MUST clearly
                        document how/if Port is interpreted.


                        For the purpose of status, an attachment is considered successful as
                        long as the parent resource accepts it partially. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway.


                        Support: Extended
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. In the
                        following resources, SectionName is interpreted as the following:


                        * Gateway: Listener name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.
                        * Service: Port name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.


                        Implementations MAY choose to support attaching Routes to other resources.
                        If that is the case, they MUST clearly document how SectionName is
                        interpreted.


                        When unspecified (empty string), this will reference the entire resource.
                        For the purpose of status, an attachment is considered successful if at
                        least one section in the parent resource accepts it. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route, the
                        Route MUST be considered detached from the Gateway.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-validations:
                - message: sectionName must be specified when parentRefs includes
                    2 or more references to the same parent
                  rule: 'self.all(p1, self.all(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '''') && (!has(p2.__namespace__) || p2.__namespace__
                    == '''')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) ? ((!has(p1.sectionName)
                    || p1.sectionName == '''') == (!has(p2.sectionName) || p2.sectionName
                    == '''')) : true))'
                - message: sectionName must be unique when parentRefs includes 2 or
                    more references to the same parent
                  rule: self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__
                    == '')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName)
                    || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName
                    == '')) || (has(p1.sectionName) && has(p2.sectionName) && p1.sectionName
                    == p2.sectionName))))
              rules:
                default:
                - matches:
                  - path:
                      type: PathPrefix
                      value: /
                description: Rules are a list of HTTP matchers, filters and actions.
                items:
                  description: |-
                    HTTPRouteRule defines semantics for matching an HTTP request based on
                    conditions (matches), processing it (filters), and forwarding the request to
                    an API object (backendRefs).
                  properties:
                    backendRefs:
                      description: |-
                        BackendRefs defines the backend(s) where matching requests should be
                        sent.


                        Failure behavior here depends on how many BackendRefs are specified and
                        how many are invalid.


                        If *all* entries in BackendRefs are invalid, and there are also no filters
                        specified in this route rule, *all* traffic which matches this rule MUST
                        receive a 500 status code.


                        See the HTTPBackendRef definition for the rules about what makes a single
                        HTTPBackendRef invalid.


                        When a HTTPBackendRef is invalid, 500 status codes MUST be returned for
                        requests that would have otherwise been routed to an invalid backend. If
                        multiple backends are specified, and some are invalid, the proportion of
                        requests that would otherwise have been routed to an invalid backend
                        MUST receive a 500 status code.


                        For example, if two backends are specified with equal weights, and one is
                        invalid, 50 percent of traffic must receive a 500. Implementations may
                        choose how that 50 percent is determined.


                        Support: Core for Kubernetes Service


                        Support: Extended for Kubernetes ServiceImport


                        Support: Implementation-specific for any other resource


                        Support for weight: Core
                      items:
                        description: |-
                          HTTPBackendRef defines how a HTTPRoute forwards a HTTP request.


                          Note that when a namespace different than the local namespace is specified, a
                          ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.


                          <gateway:experimental:description>


                          When the BackendRef points to a Kubernetes Service, implementations SHOULD
                          honor the appProtocol field if it is set for the target Service Port.


                          Implementations supporting appProtocol SHOULD recognize the Kubernetes
                          Standard Application Protocols defined in KEP-3726.


                          If a Service appProtocol isn't specified, an implementation MAY infer the
                          backend protocol through its own means. Implementations MAY infer the
                          protocol from the Route type referring to the backend Service.


                          If a Route is not able to send traffic to the backend using the specified
                          protocol then the backend is considered invalid. Implementations MUST set the
                          "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.


                          </gateway:experimental:description>
                        properties:
                          filters:
                            description: |-
                              Filters defined at this level should be executed if and only if the
                              request is being forwarded to the backend defined here.


                              Support: Implementation-specific (For broader support of filters, use the
                              Filters field in HTTPRouteRule.)
                            items:
                              description: |-
                                HTTPRouteFilter defines processing steps that must be completed during the
                                request or response lifecycle. HTTPRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway implementations. Some
                                examples include request or response modification, implementing
                                authentication strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type of the filter.
                              properties:
                                extensionRef:
                                  description: |-
                                    ExtensionRef is an optional, implementation-specific extension to the
                                    "filter" behavior.  For example, resource "myroutefilter" in group
                                    "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                    extended filters.


                                    This filter can be used multiple times within the same rule.


                                    Support: Implementation-specific
                                  properties:
                                    group:
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For
                                        example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: |-
                                    RequestHeaderModifier defines a schema for a filter that modifies request
                                    headers.


                                    Support: Core
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: |-
                                    RequestMirror defines a schema for a filter that mirrors requests.
                                    Requests are sent to the specified destination, but responses from
                                    that destination are ignored.


                                    This filter can be used multiple times within the same rule. Note that
                                    not all implementations will be able to support mirroring to multiple
                                    backends.


                                    Support: Extended
                                  properties:
                                    backendRef:
                                      description: |-
                                        BackendRef references a resource where mirrored requests are sent.


                                        Mirrored requests must be sent only to a single destination endpoint
                                        within this BackendRef, irrespective of how many endpoints are present
                                        within this BackendRef.


                                        If the referent cannot be found, this BackendRef is invalid and must be
                                        dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                        condition on the Route status is set to `status: False` and not configure
                                        this backend in the underlying implementation.


                                        If there is a cross-namespace reference to an *existing* object
                                        that is not allowed by a ReferenceGrant, the controller must ensure the
                                        "ResolvedRefs"  condition on the Route is set to `status: False`,
                                        with the "RefNotPermitted" reason and not configure this backend in the
                                        underlying implementation.


                                        In either error case, the Message of the `ResolvedRefs` Condition
                                        should be used to provide more detail about the problem.


                                        Support: Extended for Kubernetes Service


                                        Support: Implementation-specific for any other resource
                                      properties:
                                        group:
                                          default: ""
                                          description: |-
                                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: |-
                                            Kind is the Kubernetes resource kind of the referent. For example
                                            "Service".


                                            Defaults to "Service" when not specified.


                                            ExternalName services can refer to CNAME DNS records that may live
                                            outside of the cluster and as such are difficult to reason about in
                                            terms of conformance. They also may not be safe to forward to (see
                                            CVE-2021-25740 for more information). Implementations SHOULD NOT
                                            support ExternalName Services.


                                            Support: Core (Services with a type other than ExternalName)


                                            Support: Implementation-specific (Services with type ExternalName)
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of the backend. When unspecified, the local
                                            namespace is inferred.


                                            Note that when a namespace different than the local namespace is specified,
                                            a ReferenceGrant object is required in the referent namespace to allow that
                                            namespace's owner to accept the reference. See the ReferenceGrant
                                            documentation for details.


                                            Support: Core
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: |-
                                            Port specifies the destination port number to use for this resource.
                                            Port is required when the referent is a Kubernetes Service. In this
                                            case, the port number is the service port number, not the target port.
                                            For other resources, destination port might be derived from the referent
                                            resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                      x-kubernetes-validations:
                                      - message: Must have port for Service reference
                                        rule: '(size(self.group) == 0 && self.kind
                                          == ''Service'') ? has(self.port) : true'
                                  required:
                                  - backendRef
                                  type: object
                                requestRedirect:
                                  description: |-
                                    RequestRedirect defines a schema for a filter that responds to the
                                    request with an HTTP redirection.


                                    Support: Core
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the hostname to be used in the value of the `Location`
                                        header in the response.
                                        When empty, the hostname in the `Host` header of the request is used.


                                        Support: Core
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines parameters used to modify the path of the incoming request.
                                        The modified path is then used to construct the `Location` header. When
                                        empty, the request path is used as-is.


                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".


                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.


                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.


                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                            -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           | /xyz/bar
                                            /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                            /foo         | /foo         | /xyz           | /xyz
                                            /foo/        | /foo         | /xyz           | /xyz/
                                            /foo/bar     | /foo         | <empty string> | /bar
                                            /foo/        | /foo         | <empty string> | /
                                            /foo         | /foo         | <empty string> | /
                                            /foo/        | /foo         | /              | /
                                            /foo         | /foo         | /              | /
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.


                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.


                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                      x-kubernetes-validations:
                                      - message: replaceFullPath must be specified
                                          when type is set to 'ReplaceFullPath'
                                        rule: 'self.type == ''ReplaceFullPath'' ?
                                          has(self.replaceFullPath) : true'
                                      - message: type must be 'ReplaceFullPath' when
                                          replaceFullPath is set
                                        rule: 'has(self.replaceFullPath) ? self.type
                                          == ''ReplaceFullPath'' : true'
                                      - message: replacePrefixMatch must be specified
                                          when type is set to 'ReplacePrefixMatch'
                                        rule: 'self.type == ''ReplacePrefixMatch''
                                          ? has(self.replacePrefixMatch) : true'
                                      - message: type must be 'ReplacePrefixMatch'
                                          when replacePrefixMatch is set
                                        rule: 'has(self.replacePrefixMatch) ? self.type
                                          == ''ReplacePrefixMatch'' : true'
                                    port:
                                      description: |-
                                        Port is the port to be used in the value of the `Location`
                                        header in the response.


                                        If no port is specified, the redirect port MUST be derived using the
                                        following rules:


                                        * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                          port associated with the redirect scheme. Specifically "http" to port 80
                                          and "https" to port 443. If the redirect scheme does not have a
                                          well-known port, the listener port of the Gateway SHOULD be used.
                                        * If redirect scheme is empty, the redirect port MUST be the Gateway
                                          Listener port.


                                        Implementations SHOULD NOT add the port number in the 'Location'
                                        header in the following cases:


                                        * A Location header that will use HTTP (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 80.
                                        * A Location header that will use HTTPS (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 443.


                                        Support: Extended
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    scheme:
                                      description: |-
                                        Scheme is the scheme to be used in the value of the `Location` header in
                                        the response. When empty, the scheme of the request is used.


                                        Scheme redirects can affect the port of the redirect, for more information,
                                        refer to the documentation for the port field of this filter.


                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.


                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.


                                        Support: Extended
                                      enum:
                                      - http
                                      - https
                                      type: string
                                    statusCode:
                                      default: 302
                                      description: |-
                                        StatusCode is the HTTP status code to be used in response.


                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.


                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.


                                        Support: Core
                                      enum:
                                      - 301
                                      - 302
                                      type: integer
                                  type: object
                                responseHeaderModifier:
                                  description: |-
                                    ResponseHeaderModifier defines a schema for a filter that modifies response
                                    headers.


                                    Support: Extended
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: |-
                                    Type identifies the type of filter to apply. As with other API fields,
                                    types are classified into three conformance levels:


                                    - Core: Filter types and their corresponding configuration defined by
                                      "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                      implementations must support core filters.


                                    - Extended: Filter types and their corresponding configuration defined by
                                      "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                      are encouraged to support extended filters.


                                    - Implementation-specific: Filters that are defined and supported by
                                      specific vendors.
                                      In the future, filters showing convergence in behavior across multiple
                                      implementations will be considered for inclusion in extended or core
                                      conformance levels. Filter-specific configuration for such filters
                                      is specified using the ExtensionRef field. `Type` should be set to
                                      "ExtensionRef" for custom filters.


                                    Implementers are encouraged to define custom implementation types to
                                    extend the core API with implementation-specific behavior.


                                    If a reference to a custom filter type cannot be resolved, the filter
                                    MUST NOT be skipped. Instead, requests that would have been processed by
                                    that filter MUST receive a HTTP error response.


                                    Note that values may be added to this enum, implementations
                                    must ensure that unknown values will not cause a crash.


                                    Unknown values here must result in the implementation setting the
                                    Accepted Condition for the Route to `status: False`, with a
                                    Reason of `UnsupportedValue`.
                                  enum:
                                  - RequestHeaderModifier
                                  - ResponseHeaderModifier
                                  - RequestMirror
                                  - RequestRedirect
                                  - URLRewrite
                                  - ExtensionRef
                                  type: string
                                urlRewrite:
                                  description: |-
                                    URLRewrite defines a schema for a filter that modifies a request during forwarding.


                                    Support: Extended
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the value to be used to replace the Host header value during
                                        forwarding.


                                        Support: Extended
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines a path rewrite.


                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".


                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.


                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.


                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                            -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           | /xyz/bar
                                            /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                            /foo         | /foo         | /xyz           | /xyz
                                            /foo/        | /foo         | /xyz           | /xyz/
                                            /foo/bar     | /foo         | <empty string> | /bar
                                            /foo/        | /foo         | <empty string> | /
                                            /foo         | /foo         | <empty string> | /
                                            /foo/        | /foo         | /              | /
                                            /foo         | /foo         | /              | /
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.


                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.


                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                      x-kubernetes-validations:
                                      - message: replaceFullPath must be specified
                                          when type is set to 'ReplaceFullPath'
                                        rule: 'self.type == ''ReplaceFullPath'' ?
                                          has(self.replaceFullPath) : true'
                                      - message: type must be 'ReplaceFullPath' when
                                          replaceFullPath is set
                                        rule: 'has(self.replaceFullPath) ? self.type
                                          == ''ReplaceFullPath'' : true'
                                      - message: replacePrefixMatch must be specified
                                          when type is set to 'ReplacePrefixMatch'
                                        rule: 'self.type == ''ReplacePrefixMatch''
                                          ? has(self.replacePrefixMatch) : true'
                                      - message: type must be 'ReplacePrefixMatch'
                                          when replacePrefixMatch is set
                                        rule: 'has(self.replacePrefixMatch) ? self.type
                                          == ''ReplacePrefixMatch'' : true'
                                  type: object
                              required:
                              - type
                              type: object
                              x-kubernetes-validations:
                              - message: filter.requestHeaderModifier must be nil
                                  if the filter.type is not RequestHeaderModifier
                                rule: '!(has(self.requestHeaderModifier) && self.type
                                  != ''RequestHeaderModifier'')'
                              - message: filter.requestHeaderModifier must be specified
                                  for RequestHeaderModifier filter.type
                                rule: '!(!has(self.requestHeaderModifier) && self.type
                                  == ''RequestHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be nil
                                  if the filter.type is not ResponseHeaderModifier
                                rule: '!(has(self.responseHeaderModifier) && self.type
                                  != ''ResponseHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be specified
                                  for ResponseHeaderModifier filter.type
                                rule: '!(!has(self.responseHeaderModifier) && self.type
                                  == ''ResponseHeaderModifier'')'
                              - message: filter.requestMirror must be nil if the filter.type
                                  is not RequestMirror
                                rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                              - message: filter.requestMirror must be specified for
                                  RequestMirror filter.type
                                rule: '!(!has(self.requestMirror) && self.type ==
                                  ''RequestMirror'')'
                              - message: filter.requestRedirect must be nil if the
                                  filter.type is not RequestRedirect
                                rule: '!(has(self.requestRedirect) && self.type !=
                                  ''RequestRedirect'')'
                              - message: filter.requestRedirect must be specified
                                  for RequestRedirect filter.type
                                rule: '!(!has(self.requestRedirect) && self.type ==
                                  ''RequestRedirect'')'
                              - message: filter.urlRewrite must be nil if the filter.type
                                  is not URLRewrite
                                rule: '!(has(self.urlRewrite) && self.type != ''URLRewrite'')'
                              - message: filter.urlRewrite must be specified for URLRewrite
                                  filter.type
                                rule: '!(!has(self.urlRewrite) && self.type == ''URLRewrite'')'
                              - message: filter.extensionRef must be nil if the filter.type
                                  is not ExtensionRef
                                rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                              - message: filter.extensionRef must be specified for
                                  ExtensionRef filter.type
                                rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                            maxItems: 16
                            type: array
                            x-kubernetes-validations:
                            - message: May specify either httpRouteFilterRequestRedirect
                                or httpRouteFilterRequestRewrite, but not both
                              rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                                && self.exists(f, f.type == ''URLRewrite''))'
                            - message: May specify either httpRouteFilterRequestRedirect
                                or httpRouteFilterRequestRewrite, but not both
                              rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                                && self.exists(f, f.type == ''URLRewrite''))'
                            - message: RequestHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                                <= 1
                            - message: ResponseHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                                <= 1
                            - message: RequestRedirect filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestRedirect').size()
                                <= 1
                            - message: URLRewrite filter cannot be repeated
                              rule: self.filter(f, f.type == 'URLRewrite').size()
                                <= 1
                          group:
                            default: ""
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: |-
                              Kind is the Kubernetes resource kind of the referent. For example
                              "Service".


                              Defaults to "Service" when not specified.


                              ExternalName services can refer to CNAME DNS records that may live
                              outside of the cluster and as such are difficult to reason about in
                              terms of conformance. They also may not be safe to forward to (see
                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                              support ExternalName Services.


                              Support: Core (Services with a type other than ExternalName)


                              Support: Implementation-specific (Services with type ExternalName)
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the backend. When unspecified, the local
                              namespace is inferred.


                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.


                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: |-
                              Port specifies the destination port number to use for this resource.
                              Port is required when the referent is a Kubernetes Service. In this
                              case, the port number is the service port number, not the target port.
                              For other resources, destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: |-
                              Weight specifies the proportion of requests forwarded to the referenced
                              backend. This is computed as weight/(sum of all weights in this
                              BackendRefs list). For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision an
                              implementation supports. Weight is not a percentage and the sum of
                              weights does not need to equal 100.


                              If only one backend is specified and it has a weight greater than 0, 100%
                              of the traffic is forwarded to that backend. If weight is set to 0, no
                              traffic should be forwarded for this entry. If unspecified, weight
                              defaults to 1.


                              Support for this field varies based on the context where used.
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: Must have port for Service reference
                          rule: '(size(self.group) == 0 && self.kind == ''Service'')
                            ? has(self.port) : true'
                      maxItems: 16
                      type: array
                    filters:
                      description: |-
                        Filters define the filters that are applied to requests that match
                        this rule.


                        Wherever possible, implementations SHOULD implement filters in the order
                        they are specified.


                        Implementations MAY choose to implement this ordering strictly, rejecting
                        any combination or order of filters that can not be supported. If implementations
                        choose a strict interpretation of filter ordering, they MUST clearly document
                        that behavior.


                        To reject an invalid combination or order of filters, implementations SHOULD
                        consider the Route Rules with this configuration invalid. If all Route Rules
                        in a Route are invalid, the entire Route would be considered invalid. If only
                        a portion of Route Rules are invalid, implementations MUST set the
                        "PartiallyInvalid" condition for the Route.


                        Conformance-levels at this level are defined based on the type of filter:


                        - ALL core filters MUST be supported by all implementations.
                        - Implementers are encouraged to support extended filters.
                        - Implementation-specific custom filters have no API guarantees across
                          implementations.


                        Specifying the same filter multiple times is not supported unless explicitly
                        indicated in the filter.


                        All filters are expected to be compatible with each other except for the
                        URLRewrite and RequestRedirect filters, which may not be combined. If an
                        implementation can not support other combinations of filters, they must clearly
                        document that limitation. In cases where incompatible or unsupported
                        filters are specified and cause the `Accepted` condition to be set to status
                        `False`, implementations may use the `IncompatibleFilters` reason to specify
                        this configuration error.


                        Support: Core
                      items:
                        description: |-
                          HTTPRouteFilter defines processing steps that must be completed during the
                          request or response lifecycle. HTTPRouteFilters are meant as an extension
                          point to express processing that may be done in Gateway implementations. Some
                          examples include request or response modification, implementing
                          authentication strategies, rate-limiting, and traffic shaping. API
                          guarantee/conformance is defined based on the type of the filter.
                        properties:
                          extensionRef:
                            description: |-
                              ExtensionRef is an optional, implementation-specific extension to the
                              "filter" behavior.  For example, resource "myroutefilter" in group
                              "networking.example.net"). ExtensionRef MUST NOT be used for core and
                              extended filters.


                              This filter can be used multiple times within the same rule.


                              Support: Implementation-specific
                            properties:
                              group:
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is kind of the referent. For example
                                  "HTTPRoute" or "Service".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                            required:
                            - group
                            - kind
                            - name
                            type: object
                          requestHeaderModifier:
                            description: |-
                              RequestHeaderModifier defines a schema for a filter that modifies request
                              headers.


                              Support: Core
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz


                                  Config:
                                    remove: ["my-header1", "my-header3"]


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestMirror:
                            description: |-
                              RequestMirror defines a schema for a filter that mirrors requests.
                              Requests are sent to the specified destination, but responses from
                              that destination are ignored.


                              This filter can be used multiple times within the same rule. Note that
                              not all implementations will be able to support mirroring to multiple
                              backends.


                              Support: Extended
                            properties:
                              backendRef:
                                description: |-
                                  BackendRef references a resource where mirrored requests are sent.


                                  Mirrored requests must be sent only to a single destination endpoint
                                  within this BackendRef, irrespective of how many endpoints are present
                                  within this BackendRef.


                                  If the referent cannot be found, this BackendRef is invalid and must be
                                  dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                  condition on the Route status is set to `status: False` and not configure
                                  this backend in the underlying implementation.


                                  If there is a cross-namespace reference to an *existing* object
                                  that is not allowed by a ReferenceGrant, the controller must ensure the
                                  "ResolvedRefs"  condition on the Route is set to `status: False`,
                                  with the "RefNotPermitted" reason and not configure this backend in the
                                  underlying implementation.


                                  In either error case, the Message of the `ResolvedRefs` Condition
                                  should be used to provide more detail about the problem.


                                  Support: Extended for Kubernetes Service


                                  Support: Implementation-specific for any other resource
                                properties:
                                  group:
                                    default: ""
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: |-
                                      Kind is the Kubernetes resource kind of the referent. For example
                                      "Service".


                                      Defaults to "Service" when not specified.


                                      ExternalName services can refer to CNAME DNS records that may live
                                      outside of the cluster and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe to forward to (see
                                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                                      support ExternalName Services.


                                      Support: Core (Services with a type other than ExternalName)


                                      Support: Implementation-specific (Services with type ExternalName)
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the backend. When unspecified, the local
                                      namespace is inferred.


                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.


                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: |-
                                      Port specifies the destination port number to use for this resource.
                                      Port is required when the referent is a Kubernetes Service. In this
                                      case, the port number is the service port number, not the target port.
                                      For other resources, destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                                x-kubernetes-validations:
                                - message: Must have port for Service reference
                                  rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                    ? has(self.port) : true'
                            required:
                            - backendRef
                            type: object
                          requestRedirect:
                            description: |-
                              RequestRedirect defines a schema for a filter that responds to the
                              request with an HTTP redirection.


                              Support: Core
                            properties:
                              hostname:
                                description: |-
                                  Hostname is the hostname to be used in the value of the `Location`
                                  header in the response.
                                  When empty, the hostname in the `Host` header of the request is used.


                                  Support: Core
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: |-
                                  Path defines parameters used to modify the path of the incoming request.
                                  The modified path is then used to construct the `Location` header. When
                                  empty, the request path is used as-is.


                                  Support: Extended
                                properties:
                                  replaceFullPath:
                                    description: |-
                                      ReplaceFullPath specifies the value with which to replace the full path
                                      of a request during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: |-
                                      ReplacePrefixMatch specifies the value with which to replace the prefix
                                      match of a request during a rewrite or redirect. For example, a request
                                      to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                      of "/xyz" would be modified to "/xyz/bar".


                                      Note that this matches the behavior of the PathPrefix match type. This
                                      matches full path elements. A path element refers to the list of labels
                                      in the path split by the `/` separator. When specified, a trailing `/` is
                                      ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                      match the prefix `/abc`, but the path `/abcd` would not.


                                      ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                      Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                      the implementation setting the Accepted Condition for the Route to `status: False`.


                                      Request Path | Prefix Match | Replace Prefix | Modified Path
                                      -------------|--------------|----------------|----------
                                      /foo/bar     | /foo         | /xyz           | /xyz/bar
                                      /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                      /foo         | /foo         | /xyz           | /xyz
                                      /foo/        | /foo         | /xyz           | /xyz/
                                      /foo/bar     | /foo         | <empty string> | /bar
                                      /foo/        | /foo         | <empty string> | /
                                      /foo         | /foo         | <empty string> | /
                                      /foo/        | /foo         | /              | /
                                      /foo         | /foo         | /              | /
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: |-
                                      Type defines the type of path modifier. Additional types may be
                                      added in a future release of the API.


                                      Note that values may be added to this enum, implementations
                                      must ensure that unknown values will not cause a crash.


                                      Unknown values here must result in the implementation setting the
                                      Accepted Condition for the Route to `status: False`, with a
                                      Reason of `UnsupportedValue`.
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                                x-kubernetes-validations:
                                - message: replaceFullPath must be specified when
                                    type is set to 'ReplaceFullPath'
                                  rule: 'self.type == ''ReplaceFullPath'' ? has(self.replaceFullPath)
                                    : true'
                                - message: type must be 'ReplaceFullPath' when replaceFullPath
                                    is set
                                  rule: 'has(self.replaceFullPath) ? self.type ==
                                    ''ReplaceFullPath'' : true'
                                - message: replacePrefixMatch must be specified when
                                    type is set to 'ReplacePrefixMatch'
                                  rule: 'self.type == ''ReplacePrefixMatch'' ? has(self.replacePrefixMatch)
                                    : true'
                                - message: type must be 'ReplacePrefixMatch' when
                                    replacePrefixMatch is set
                                  rule: 'has(self.replacePrefixMatch) ? self.type
                                    == ''ReplacePrefixMatch'' : true'
                              port:
                                description: |-
                                  Port is the port to be used in the value of the `Location`
                                  header in the response.


                                  If no port is specified, the redirect port MUST be derived using the
                                  following rules:


                                  * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                    port associated with the redirect scheme. Specifically "http" to port 80
                                    and "https" to port 443. If the redirect scheme does not have a
                                    well-known port, the listener port of the Gateway SHOULD be used.
                                  * If redirect scheme is empty, the redirect port MUST be the Gateway
                                    Listener port.


                                  Implementations SHOULD NOT add the port number in the 'Location'
                                  header in the following cases:


                                  * A Location header that will use HTTP (whether that is determined via
                                    the Listener protocol or the Scheme field) _and_ use port 80.
                                  * A Location header that will use HTTPS (whether that is determined via
                                    the Listener protocol or the Scheme field) _and_ use port 443.


                                  Support: Extended
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              scheme:
                                description: |-
                                  Scheme is the scheme to be used in the value of the `Location` header in
                                  the response. When empty, the scheme of the request is used.


                                  Scheme redirects can affect the port of the redirect, for more information,
                                  refer to the documentation for the port field of this filter.


                                  Note that values may be added to this enum, implementations
                                  must ensure that unknown values will not cause a crash.


                                  Unknown values here must result in the implementation setting the
                                  Accepted Condition for the Route to `status: False`, with a
                                  Reason of `UnsupportedValue`.


                                  Support: Extended
                                enum:
                                - http
                                - https
                                type: string
                              statusCode:
                                default: 302
                                description: |-
                                  StatusCode is the HTTP status code to be used in response.


                                  Note that values may be added to this enum, implementations
                                  must ensure that unknown values will not cause a crash.


                                  Unknown values here must result in the implementation setting the
                                  Accepted Condition for the Route to `status: False`, with a
                                  Reason of `UnsupportedValue`.


                                  Support: Core
                                enum:
                                - 301
                                - 302
                                type: integer
                            type: object
                          responseHeaderModifier:
                            description: |-
                              ResponseHeaderModifier defines a schema for a filter that modifies response
                              headers.


                              Support: Extended
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz


                                  Config:
                                    remove: ["my-header1", "my-header3"]


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          type:
                            description: |-
                              Type identifies the type of filter to apply. As with other API fields,
                              types are classified into three conformance levels:


                              - Core: Filter types and their corresponding configuration defined by
                                "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                implementations must support core filters.


                              - Extended: Filter types and their corresponding configuration defined by
                                "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                are encouraged to support extended filters.


                              - Implementation-specific: Filters that are defined and supported by
                                specific vendors.
                                In the future, filters showing convergence in behavior across multiple
                                implementations will be considered for inclusion in extended or core
                                conformance levels. Filter-specific configuration for such filters
                                is specified using the ExtensionRef field. `Type` should be set to
                                "ExtensionRef" for custom filters.


                              Implementers are encouraged to define custom implementation types to
                              extend the core API with implementation-specific behavior.


                              If a reference to a custom filter type cannot be resolved, the filter
                              MUST NOT be skipped. Instead, requests that would have been processed by
                              that filter MUST receive a HTTP error response.


                              Note that values may be added to this enum, implementations
                              must ensure that unknown values will not cause a crash.


                              Unknown values here must result in the implementation setting the
                              Accepted Condition for the Route to `status: False`, with a
                              Reason of `UnsupportedValue`.
                            enum:
                            - RequestHeaderModifier
                            - ResponseHeaderModifier
                            - RequestMirror
                            - RequestRedirect
                            - URLRewrite
                            - ExtensionRef
                            type: string
                          urlRewrite:
                            description: |-
                              URLRewrite defines a schema for a filter that modifies a request during forwarding.


                              Support: Extended
                            properties:
                              hostname:
                                description: |-
                                  Hostname is the value to be used to replace the Host header value during
                                  forwarding.


                                  Support: Extended
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: |-
                                  Path defines a path rewrite.


                                  Support: Extended
                                properties:
                                  replaceFullPath:
                                    description: |-
                                      ReplaceFullPath specifies the value with which to replace the full path
                                      of a request during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: |-
                                      ReplacePrefixMatch specifies the value with which to replace the prefix
                                      match of a request during a rewrite or redirect. For example, a request
                                      to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                      of "/xyz" would be modified to "/xyz/bar".


                                      Note that this matches the behavior of the PathPrefix match type. This
                                      matches full path elements. A path element refers to the list of labels
                                      in the path split by the `/` separator. When specified, a trailing `/` is
                                      ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                      match the prefix `/abc`, but the path `/abcd` would not.


                                      ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                      Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                      the implementation setting the Accepted Condition for the Route to `status: False`.


                                      Request Path | Prefix Match | Replace Prefix | Modified Path
                                      -------------|--------------|----------------|----------
                                      /foo/bar     | /foo         | /xyz           | /xyz/bar
                                      /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                      /foo         | /foo         | /xyz           | /xyz
                                      /foo/        | /foo         | /xyz           | /xyz/
                                      /foo/bar     | /foo         | <empty string> | /bar
                                      /foo/        | /foo         | <empty string> | /
                                      /foo         | /foo         | <empty string> | /
                                      /foo/        | /foo         | /              | /
                                      /foo         | /foo         | /              | /
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: |-
                                      Type defines the type of path modifier. Additional types may be
                                      added in a future release of the API.


                                      Note that values may be added to this enum, implementations
                                      must ensure that unknown values will not cause a crash.


                                      Unknown values here must result in the implementation setting the
                                      Accepted Condition for the Route to `status: False`, with a
                                      Reason of `UnsupportedValue`.
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                                x-kubernetes-validations:
                                - message: replaceFullPath must be specified when
                                    type is set to 'ReplaceFullPath'
                                  rule: 'self.type == ''ReplaceFullPath'' ? has(self.replaceFullPath)
                                    : true'
                                - message: type must be 'ReplaceFullPath' when replaceFullPath
                                    is set
                                  rule: 'has(self.replaceFullPath) ? self.type ==
                                    ''ReplaceFullPath'' : true'
                                - message: replacePrefixMatch must be specified when
                                    type is set to 'ReplacePrefixMatch'
                                  rule: 'self.type == ''ReplacePrefixMatch'' ? has(self.replacePrefixMatch)
                                    : true'
                                - message: type must be 'ReplacePrefixMatch' when
                                    replacePrefixMatch is set
                                  rule: 'has(self.replacePrefixMatch) ? self.type
                                    == ''ReplacePrefixMatch'' : true'
                            type: object
                        required:
                        - type
                        type: object
                        x-kubernetes-validations:
                        - message: filter.requestHeaderModifier must be nil if the
                            filter.type is not RequestHeaderModifier
                          rule: '!(has(self.requestHeaderModifier) && self.type !=
                            ''RequestHeaderModifier'')'
                        - message: filter.requestHeaderModifier must be specified
                            for RequestHeaderModifier filter.type
                          rule: '!(!has(self.requestHeaderModifier) && self.type ==
                            ''RequestHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be nil if the
                            filter.type is not ResponseHeaderModifier
                          rule: '!(has(self.responseHeaderModifier) && self.type !=
                            ''ResponseHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be specified
                            for ResponseHeaderModifier filter.type
                          rule: '!(!has(self.responseHeaderModifier) && self.type
                            == ''ResponseHeaderModifier'')'
                        - message: filter.requestMirror must be nil if the filter.type
                            is not RequestMirror
                          rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                        - message: filter.requestMirror must be specified for RequestMirror
                            filter.type
                          rule: '!(!has(self.requestMirror) && self.type == ''RequestMirror'')'
                        - message: filter.requestRedirect must be nil if the filter.type
                            is not RequestRedirect
                          rule: '!(has(self.requestRedirect) && self.type != ''RequestRedirect'')'
                        - message: filter.requestRedirect must be specified for RequestRedirect
                            filter.type
                          rule: '!(!has(self.requestRedirect) && self.type == ''RequestRedirect'')'
                        - message: filter.urlRewrite must be nil if the filter.type
                            is not URLRewrite
                          rule: '!(has(self.urlRewrite) && self.type != ''URLRewrite'')'
                        - message: filter.urlRewrite must be specified for URLRewrite
                            filter.type
                          rule: '!(!has(self.urlRewrite) && self.type == ''URLRewrite'')'
                        - message: filter.extensionRef must be nil if the filter.type
                            is not ExtensionRef
                          rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                        - message: filter.extensionRef must be specified for ExtensionRef
                            filter.type
                          rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                      maxItems: 16
                      type: array
                      x-kubernetes-validations:
                      - message: May specify either httpRouteFilterRequestRedirect
                          or httpRouteFilterRequestRewrite, but not both
                        rule: '!(self.exists(f, f.type == ''RequestRedirect'') &&
                          self.exists(f, f.type == ''URLRewrite''))'
                      - message: RequestHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                          <= 1
                      - message: ResponseHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                          <= 1
                      - message: RequestRedirect filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestRedirect').size() <=
                          1
                      - message: URLRewrite filter cannot be repeated
                        rule: self.filter(f, f.type == 'URLRewrite').size() <= 1
                    matches:
                      default:
                      - path:
                          type: PathPrefix
                          value: /
                      description: |-
                        Matches define conditions used for matching the rule against incoming
                        HTTP requests. Each match is independent, i.e. this rule will be matched
                        if **any** one of the matches is satisfied.


                        For example, take the following matches configuration:


                        ```
                        matches:
                        - path:
                            value: "/foo"
                          headers:
                          - name: "version"
                            value: "v2"
                        - path:
                            value: "/v2/foo"
                        ```


                        For a request to match against this rule, a request must satisfy
                        EITHER of the two conditions:


                        - path prefixed with `/foo` AND contains the header `version: v2`
                        - path prefix of `/v2/foo`


                        See the documentation for HTTPRouteMatch on how to specify multiple
                        match conditions that should be ANDed together.


                        If no matches are specified, the default is a prefix
                        path match on "/", which has the effect of matching every
                        HTTP request.


                        Proxy or Load Balancer routing configuration generated from HTTPRoutes
                        MUST prioritize matches based on the following criteria, continuing on
                        ties. Across all rules specified on applicable Routes, precedence must be
                        given to the match having:


                        * "Exact" path match.
                        * "Prefix" path match with largest number of characters.
                        * Method match.
                        * Largest number of header matches.
                        * Largest number of query param matches.


                        Note: The precedence of RegularExpression path matches are implementation-specific.


                        If ties still exist across multiple Routes, matching precedence MUST be
                        determined in order of the following criteria, continuing on ties:


                        * The oldest Route based on creation timestamp.
                        * The Route appearing first in alphabetical order by
                          "{namespace}/{name}".


                        If ties still exist within an HTTPRoute, matching precedence MUST be granted
                        to the FIRST matching rule (in list order) with a match meeting the above
                        criteria.


                        When no rules matching a request have been successfully attached to the
                        parent a request is coming from, a HTTP 404 status code MUST be returned.
                      items:
                        description: "HTTPRouteMatch defines the predicate used to
                          match requests to a given\naction. Multiple match types
                          are ANDed together, i.e. the match will\nevaluate to true
                          only if all conditions are satisfied.\n\n\nFor example,
                          the match below will match a HTTP request only if its path\nstarts
                          with `/foo` AND it contains the `version: v1` header:\n\n\n```\nmatch:\n\n\n\tpath:\n\t
                          \ value: \"/foo\"\n\theaders:\n\t- name: \"version\"\n\t
                          \ value \"v1\"\n\n\n```"
                        properties:
                          headers:
                            description: |-
                              Headers specifies HTTP request header matchers. Multiple match values are
                              ANDed together, meaning, a request must match all the specified headers
                              to select the route.
                            items:
                              description: |-
                                HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request
                                headers.
                              properties:
                                name:
                                  description: |-
                                    Name is the name of the HTTP Header to be matched. Name matching MUST be
                                    case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                    If multiple entries specify equivalent header names, only the first
                                    entry with an equivalent name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be ignored. Due to the
                                    case-insensitivity of header names, "foo" and "Foo" are considered
                                    equivalent.


                                    When a header is repeated in an HTTP request, it is
                                    implementation-specific behavior as to how this is represented.
                                    Generally, proxies should follow the guidance from the RFC:
                                    https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding
                                    processing a repeated header, with special handling for "Set-Cookie".
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: |-
                                    Type specifies how to match against the value of the header.


                                    Support: Core (Exact)


                                    Support: Implementation-specific (RegularExpression)


                                    Since RegularExpression HeaderMatchType has implementation-specific
                                    conformance, implementations can support POSIX, PCRE or any other dialects
                                    of regular expressions. Please read the implementation's documentation to
                                    determine the supported dialect.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP Header to
                                    be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: |-
                              Method specifies HTTP method matcher.
                              When specified, this route will be matched only if the request has the
                              specified method.


                              Support: Extended
                            enum:
                            - GET
                            - HEAD
                            - POST
                            - PUT
                            - DELETE
                            - CONNECT
                            - OPTIONS
                            - TRACE
                            - PATCH
                            type: string
                          path:
                            default:
                              type: PathPrefix
                              value: /
                            description: |-
                              Path specifies a HTTP request path matcher. If this field is not
                              specified, a default prefix match on the "/" path is provided.
                            properties:
                              type:
                                default: PathPrefix
                                description: |-
                                  Type specifies how to match against the path Value.


                                  Support: Core (Exact, PathPrefix)


                                  Support: Implementation-specific (RegularExpression)
                                enum:
                                - Exact
                                - PathPrefix
                                - RegularExpression
                                type: string
                              value:
                                default: /
                                description: Value of the HTTP path to match against.
                                maxLength: 1024
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: value must be an absolute path and start with
                                '/' when type one of ['Exact', 'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? self.value.startsWith(''/'')
                                : true'
                            - message: must not contain '//' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''//'')
                                : true'
                            - message: must not contain '/./' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''/./'')
                                : true'
                            - message: must not contain '/../' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''/../'')
                                : true'
                            - message: must not contain '%2f' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''%2f'')
                                : true'
                            - message: must not contain '%2F' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''%2F'')
                                : true'
                            - message: must not contain '#' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''#'')
                                : true'
                            - message: must not end with '/..' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.endsWith(''/..'')
                                : true'
                            - message: must not end with '/.' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.endsWith(''/.'')
                                : true'
                            - message: type must be one of ['Exact', 'PathPrefix',
                                'RegularExpression']
                              rule: self.type in ['Exact','PathPrefix'] || self.type
                                == 'RegularExpression'
                            - message: must only contain valid characters (matching
                                ^(?:[-A-Za-z0-9/._~!$&'()*+,;=:@]|[%][0-9a-fA-F]{2})+$)
                                for types ['Exact', 'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? self.value.matches(r"""^(?:[-A-Za-z0-9/._~!$&''()*+,;=:@]|[%][0-9a-fA-F]{2})+$""")
                                : true'
                          queryParams:
                            description: |-
                              QueryParams specifies HTTP query parameter matchers. Multiple match
                              values are ANDed together, meaning, a request must match all the
                              specified query parameters to select the route.


                              Support: Extended
                            items:
                              description: |-
                                HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP
                                query parameters.
                              properties:
                                name:
                                  description: |-
                                    Name is the name of the HTTP query param to be matched. This must be an
                                    exact string match. (See
                                    https://tools.ietf.org/html/rfc7230#section-2.7.3).


                                    If multiple entries specify equivalent query param names, only the first
                                    entry with an equivalent name MUST be considered for a match. Subsequent
                                    entries with an equivalent query param name MUST be ignored.


                                    If a query param is repeated in an HTTP request, the behavior is
                                    purposely left undefined, since different data planes have different
                                    capabilities. However, it is *recommended* that implementations should
                                    match against the first value of the param if the data plane supports it,
                                    as this behavior is expected in other load balancing contexts outside of
                                    the Gateway API.


                                    Users SHOULD NOT route traffic based on repeated query params to guard
                                    themselves against potential differences in the implementations.
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: |-
                                    Type specifies how to match against the value of the query parameter.


                                    Support: Extended (Exact)


                                    Support: Implementation-specific (RegularExpression)


                                    Since RegularExpression QueryParamMatchType has Implementation-specific
                                    conformance, implementations can support POSIX, PCRE or any other
                                    dialects of regular expressions. Please read the implementation's
                                    documentation to determine the supported dialect.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP query param
                                    to be matched.
                                  maxLength: 1024
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        type: object
                      maxItems: 8
                      type: array
                  type: object
                  x-kubernetes-validations:
                  - message: RequestRedirect filter must not be used together with
                      backendRefs
                    rule: '(has(self.backendRefs) && size(self.backendRefs) > 0) ?
                      (!has(self.filters) || self.filters.all(f, !has(f.requestRedirect))):
                      true'
                  - message: When using RequestRedirect filter with path.replacePrefixMatch,
                      exactly one PathPrefix match must be specified
                    rule: '(has(self.filters) && self.filters.exists_one(f, has(f.requestRedirect)
                      && has(f.requestRedirect.path) && f.requestRedirect.path.type
                      == ''ReplacePrefixMatch'' && has(f.requestRedirect.path.replacePrefixMatch)))
                      ? ((size(self.matches) != 1 || !has(self.matches[0].path) ||
                      self.matches[0].path.type != ''PathPrefix'') ? false : true)
                      : true'
                  - message: When using URLRewrite filter with path.replacePrefixMatch,
                      exactly one PathPrefix match must be specified
                    rule: '(has(self.filters) && self.filters.exists_one(f, has(f.urlRewrite)
                      && has(f.urlRewrite.path) && f.urlRewrite.path.type == ''ReplacePrefixMatch''
                      && has(f.urlRewrite.path.replacePrefixMatch))) ? ((size(self.matches)
                      != 1 || !has(self.matches[0].path) || self.matches[0].path.type
                      != ''PathPrefix'') ? false : true) : true'
                  - message: Within backendRefs, when using RequestRedirect filter
                      with path.replacePrefixMatch, exactly one PathPrefix match must
                      be specified
                    rule: '(has(self.backendRefs) && self.backendRefs.exists_one(b,
                      (has(b.filters) && b.filters.exists_one(f, has(f.requestRedirect)
                      && has(f.requestRedirect.path) && f.requestRedirect.path.type
                      == ''ReplacePrefixMatch'' && has(f.requestRedirect.path.replacePrefixMatch)))
                      )) ? ((size(self.matches) != 1 || !has(self.matches[0].path)
                      || self.matches[0].path.type != ''PathPrefix'') ? false : true)
                      : true'
                  - message: Within backendRefs, When using URLRewrite filter with
                      path.replacePrefixMatch, exactly one PathPrefix match must be
                      specified
                    rule: '(has(self.backendRefs) && self.backendRefs.exists_one(b,
                      (has(b.filters) && b.filters.exists_one(f, has(f.urlRewrite)
                      && has(f.urlRewrite.path) && f.urlRewrite.path.type == ''ReplacePrefixMatch''
                      && has(f.urlRewrite.path.replacePrefixMatch))) )) ? ((size(self.matches)
                      != 1 || !has(self.matches[0].path) || self.matches[0].path.type
                      != ''PathPrefix'') ? false : true) : true'
                maxItems: 16
                type: array
            type: object
          status:
            description: Status defines the current state of HTTPRoute.
            properties:
              parents:
                description: |-
                  Parents is a list of parent resources (usually Gateways) that are
                  associated with the route, and the status of the route with respect to
                  each parent. When this route attaches to a parent, the controller that
                  manages the parent must add an entry to this list when the controller
                  first sees the route and should update the entry as appropriate when the
                  route or gateway is modified.


                  Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this API
                  can only populate Route status for the Gateways/parent resources they are
                  responsible for.


                  A maximum of 32 Gateways will be represented in this list. An empty list
                  means the route has not been attached to any Gateway.
                items:
                  description: |-
                    RouteParentStatus describes the status of a route with respect to an
                    associated Parent.
                  properties:
                    conditions:
                      description: |-
                        Conditions describes the status of the route with respect to the Gateway.
                        Note that the route's availability is also subject to the Gateway's own
                        status conditions and listener status.


                        If the Route's ParentRef specifies an existing Gateway that supports
                        Routes of this kind AND that Gateway's controller has sufficient access,
                        then that Gateway's controller MUST set the "Accepted" condition on the
                        Route, to indicate whether the route has been accepted or rejected by the
                        Gateway, and why.


                        A Route MUST be considered "Accepted" if at least one of the Route's
                        rules is implemented by the Gateway.


                        There are a number of cases where the "Accepted" condition may not be set
                        due to lack of controller visibility, that includes when:


                        * The Route refers to a non-existent parent.
                        * The Route is of a type that the controller does not support.
                        * The Route is in a namespace the controller does not have access to.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource.\n---\nThis struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example,\n\n\n\ttype FooStatus
                          struct{\n\t    // Represents the observations of a foo's
                          current state.\n\t    // Known .status.conditions.type are:
                          \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                          +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    //
                          +listType=map\n\t    // +listMapKey=type\n\t    Conditions
                          []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                          patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                          \   // other fields\n\t}"
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: |-
                              type of condition in CamelCase or in foo.example.com/CamelCase.
                              ---
                              Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                              useful (see .node.status.conditions), the ability to deconflict is important.
                              The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.


                        Example: "example.net/gateway-controller".


                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).


                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: |-
                        ParentRef corresponds with a ParentRef in the spec that this
                        RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).


                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.


                            There are two kinds of parent resources with "Core" support:


                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)


                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.


                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.





                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.


                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.





                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.


                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.


                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:


                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.


                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.


                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: ingressclassparameterses.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    kind: IngressClassParameters
    listKind: IngressClassParametersList
    plural: ingressclassparameterses
    singular: ingressclassparameters
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IngressClassParameters is the Schema for the IngressClassParameters
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the IngressClassParameters specification.
            properties:
              enableLegacyRegexDetection:
                default: false
                description: |-
                  EnableLegacyRegexDetection automatically detects if ImplementationSpecific Ingress paths are regular expression
                  paths using the legacy 2.x heuristic. The controller adds the "~" prefix to those paths if the Kong version is
                  3.0 or higher.
                type: boolean
              serviceUpstream:
                default: false
                description: Offload load-balancing to kube-proxy or sidecar.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: kongclusterplugins.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong-ingress-controller
    kind: KongClusterPlugin
    listKind: KongClusterPluginList
    plural: kongclusterplugins
    shortNames:
    - kcp
    singular: kongclusterplugin
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Name of the plugin
      jsonPath: .plugin
      name: Plugin-Type
      type: string
    - description: Age
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Indicates if the plugin is disabled
      jsonPath: .disabled
      name: Disabled
      priority: 1
      type: boolean
    - description: Configuration of the plugin
      jsonPath: .config
      name: Config
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=="Programmed")].status
      name: Programmed
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: KongClusterPlugin is the Schema for the kongclusterplugins API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          config:
            description: |-
              Config contains the plugin configuration. It's a list of keys and values
              required to configure the plugin.
              Please read the documentation of the plugin being configured to set values
              in here. For any plugin in Kong, anything that goes in the `config` JSON
              key in the Admin API request, goes into this property.
              Only one of `config` or `configFrom` may be used in a KongClusterPlugin, not both at once.
            type: object
            x-kubernetes-preserve-unknown-fields: true
          configFrom:
            description: |-
              ConfigFrom references a secret containing the plugin configuration.
              This should be used when the plugin configuration contains sensitive information,
              such as AWS credentials in the Lambda plugin or the client secret in the OIDC plugin.
              Only one of `config` or `configFrom` may be used in a KongClusterPlugin, not both at once.
            properties:
              secretKeyRef:
                description: Specifies a name, a namespace, and a key of a secret
                  to refer to.
                properties:
                  key:
                    description: The key containing the value.
                    type: string
                  name:
                    description: The secret containing the key.
                    type: string
                  namespace:
                    description: The namespace containing the secret.
                    type: string
                required:
                - key
                - name
                - namespace
                type: object
            required:
            - secretKeyRef
            type: object
          configPatches:
            description: |-
              ConfigPatches represents JSON patches to the configuration of the plugin.
              Each item means a JSON patch to add something in the configuration,
              where path is specified in `path` and value is in `valueFrom` referencing
              a key in a secret.
              When Config is specified, patches will be applied to the configuration in Config.
              Otherwise, patches will be applied to an empty object.
            items:
              description: |-
                NamespacedConfigPatch is a JSON patch to add values from secrets to KongClusterPlugin
                to the generated configuration of plugin in Kong.
              properties:
                path:
                  description: Path is the JSON path to add the patch.
                  type: string
                valueFrom:
                  description: ValueFrom is the reference to a key of a secret where
                    the patched value comes from.
                  properties:
                    secretKeyRef:
                      description: Specifies a name, a namespace, and a key of a secret
                        to refer to.
                      properties:
                        key:
                          description: The key containing the value.
                          type: string
                        name:
                          description: The secret containing the key.
                          type: string
                        namespace:
                          description: The namespace containing the secret.
                          type: string
                      required:
                      - key
                      - name
                      - namespace
                      type: object
                  required:
                  - secretKeyRef
                  type: object
              required:
              - path
              - valueFrom
              type: object
            type: array
          consumerRef:
            description: ConsumerRef is a reference to a particular consumer.
            type: string
          disabled:
            description: Disabled set if the plugin is disabled or not.
            type: boolean
          instance_name:
            description: |-
              InstanceName is an optional custom name to identify an instance of the plugin. This is useful when running the
              same plugin in multiple contexts, for example, on multiple services.
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          ordering:
            description: |-
              Ordering overrides the normal plugin execution order. It's only available on Kong Enterprise.
              `<phase>` is a request processing phase (for example, `access` or `body_filter`) and
              `<plugin>` is the name of the plugin that will run before or after the KongPlugin.
              For example, a KongPlugin with `plugin: rate-limiting` and `before.access: ["key-auth"]`
              will create a rate limiting plugin that limits requests _before_ they are authenticated.
            properties:
              after:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: PluginOrderingPhase indicates which plugins in a phase
                  should affect the target plugin's order
                type: object
              before:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: PluginOrderingPhase indicates which plugins in a phase
                  should affect the target plugin's order
                type: object
            type: object
          plugin:
            description: PluginName is the name of the plugin to which to apply the
              config.
            type: string
          protocols:
            description: |-
              Protocols configures plugin to run on requests received on specific
              protocols.
            items:
              description: |-
                KongProtocol is a valid Kong protocol.
                This alias is necessary to deal with https://github.com/kubernetes-sigs/controller-tools/issues/342
              enum:
              - http
              - https
              - grpc
              - grpcs
              - tcp
              - tls
              - udp
              type: string
            type: array
          run_on:
            description: |-
              RunOn configures the plugin to run on the first or the second or both
              nodes in case of a service mesh deployment.
            enum:
            - first
            - second
            - all
            type: string
          status:
            description: Status represents the current status of the KongClusterPlugin
              resource.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: |-
                  Conditions describe the current conditions of the KongClusterPluginStatus.


                  Known condition types are:


                  * "Programmed"
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - plugin
        type: object
        x-kubernetes-validations:
        - message: Using both config and configFrom fields is not allowed.
          rule: '!(has(self.config) && has(self.configFrom))'
        - message: Using both configFrom and configPatches fields is not allowed.
          rule: '!(has(self.configFrom) && has(self.configPatches))'
        - message: The plugin field is immutable
          rule: self.plugin == oldSelf.plugin
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: kongconsumergroups.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong-ingress-controller
    kind: KongConsumerGroup
    listKind: KongConsumerGroupList
    plural: kongconsumergroups
    shortNames:
    - kcg
    singular: kongconsumergroup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Age
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=="Programmed")].status
      name: Programmed
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: KongConsumerGroup is the Schema for the kongconsumergroups API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          status:
            description: Status represents the current status of the KongConsumerGroup
              resource.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: |-
                  Conditions describe the current conditions of the KongConsumerGroup.


                  Known condition types are:


                  * "Programmed"
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: kongconsumers.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong-ingress-controller
    kind: KongConsumer
    listKind: KongConsumerList
    plural: kongconsumers
    shortNames:
    - kc
    singular: kongconsumer
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Username of a Kong Consumer
      jsonPath: .username
      name: Username
      type: string
    - description: Age
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=="Programmed")].status
      name: Programmed
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: KongConsumer is the Schema for the kongconsumers API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          consumerGroups:
            description: |-
              ConsumerGroups are references to consumer groups (that consumer wants to be part of)
              provisioned in Kong.
            items:
              type: string
            type: array
            x-kubernetes-list-type: set
          credentials:
            description: |-
              Credentials are references to secrets containing a credential to be
              provisioned in Kong.
            items:
              type: string
            type: array
            x-kubernetes-list-type: set
          custom_id:
            description: |-
              CustomID is a Kong cluster-unique existing ID for the consumer - useful for mapping
              Kong with users in your existing database.
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          status:
            description: Status represents the current status of the KongConsumer
              resource.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: |-
                  Conditions describe the current conditions of the KongConsumer.


                  Known condition types are:


                  * "Programmed"
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
          username:
            description: Username is a Kong cluster-unique username of the consumer.
            type: string
        type: object
        x-kubernetes-validations:
        - message: Need to provide either username or custom_id
          rule: has(self.username) || has(self.custom_id)
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: kongcustomentities.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong-ingress-controller
    kind: KongCustomEntity
    listKind: KongCustomEntityList
    plural: kongcustomentities
    shortNames:
    - kce
    singular: kongcustomentity
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: type of the Kong entity
      jsonPath: .spec.type
      name: Entity Type
      type: string
    - description: Age
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=="Programmed")].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongCustomEntity defines a "custom" Kong entity that KIC cannot
          support the entity type directly.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              controllerName:
                description: ControllerName specifies the controller that should reconcile
                  it, like ingress class.
                type: string
              fields:
                description: Fields defines the fields of the Kong entity itself.
                x-kubernetes-preserve-unknown-fields: true
              parentRef:
                description: |-
                  ParentRef references the kubernetes resource it attached to when its scope is "attached".
                  Currently only KongPlugin/KongClusterPlugin allowed. This will make the custom entity to be attached
                  to the entity(service/route/consumer) where the plugin is attached.
                properties:
                  group:
                    type: string
                  kind:
                    type: string
                  name:
                    type: string
                  namespace:
                    description: Empty namespace means the same namespace of the owning
                      object.
                    type: string
                required:
                - name
                type: object
              type:
                description: EntityType is the type of the Kong entity. The type is
                  used in generating declarative configuration.
                type: string
            required:
            - controllerName
            - fields
            - type
            type: object
          status:
            description: Status stores the reconciling status of the resource.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: |-
                  Conditions describe the current conditions of the KongCustomEntityStatus.


                  Known condition types are:


                  * "Programmed"
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            required:
            - conditions
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: The spec.type field is immutable
          rule: self.spec.type == oldSelf.spec.type
        - message: The spec.type field cannot be known Kong entity types
          rule: '!(self.spec.type in [''services'',''routes'',''upstreams'',''targets'',''plugins'',''consumers'',''consumer_groups''])'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: kongingresses.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong-ingress-controller
    kind: KongIngress
    listKind: KongIngressList
    plural: kongingresses
    shortNames:
    - ki
    singular: kongingress
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: KongIngress is the Schema for the kongingresses API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          proxy:
            description: |-
              Proxy defines additional connection options for the routes to be configured in the
              Kong Gateway, e.g. `connection_timeout`, `retries`, etc.
            properties:
              connect_timeout:
                description: "The timeout in milliseconds for\testablishing a connection
                  to the upstream server.\nDeprecated: use Service's \"konghq.com/connect-timeout\"
                  annotation instead."
                minimum: 0
                type: integer
              path:
                description: |-
                  (optional) The path to be used in requests to the upstream server.
                  Deprecated: use Service's "konghq.com/path" annotation instead.
                pattern: ^/.*$
                type: string
              protocol:
                description: |-
                  The protocol used to communicate with the upstream.
                  Deprecated: use Service's "konghq.com/protocol" annotation instead.
                enum:
                - http
                - https
                - grpc
                - grpcs
                - tcp
                - tls
                - udp
                type: string
              read_timeout:
                description: |-
                  The timeout in milliseconds between two successive read operations
                  for transmitting a request to the upstream server.
                  Deprecated: use Service's "konghq.com/read-timeout" annotation instead.
                minimum: 0
                type: integer
              retries:
                description: |-
                  The number of retries to execute upon failure to proxy.
                  Deprecated: use Service's "konghq.com/retries" annotation instead.
                minimum: 0
                type: integer
              write_timeout:
                description: |-
                  The timeout in milliseconds between two successive write operations
                  for transmitting a request to the upstream server.
                  Deprecated: use Service's "konghq.com/write-timeout" annotation instead.
                minimum: 0
                type: integer
            type: object
          route:
            description: |-
              Route define rules to match client requests.
              Each Route is associated with a Service,
              and a Service may have multiple Routes associated to it.
            properties:
              headers:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: |-
                  Headers contains one or more lists of values indexed by header name
                  that will cause this Route to match if present in the request.
                  The Host header cannot be used with this attribute.
                  Deprecated: use Ingress' "konghq.com/headers" annotation instead.
                type: object
              https_redirect_status_code:
                description: |-
                  HTTPSRedirectStatusCode is the status code Kong responds with
                  when all properties of a Route match except the protocol.
                  Deprecated: use Ingress' "ingress.kubernetes.io/force-ssl-redirect" or
                  "konghq.com/https-redirect-status-code" annotations instead.
                type: integer
              methods:
                description: |-
                  Methods is a list of HTTP methods that match this Route.
                  Deprecated: use Ingress' "konghq.com/methods" annotation instead.
                items:
                  type: string
                type: array
              path_handling:
                description: |-
                  PathHandling controls how the Service path, Route path and requested path
                  are combined when sending a request to the upstream.
                  Deprecated: use Ingress' "konghq.com/path-handling" annotation instead.
                enum:
                - v0
                - v1
                type: string
              preserve_host:
                description: |-
                  PreserveHost sets When matching a Route via one of the hosts domain names,
                  use the request Host header in the upstream request headers.
                  If set to false, the upstream Host header will be that of the Service’s host.
                  Deprecated: use Ingress' "konghq.com/preserve-host" annotation instead.
                type: boolean
              protocols:
                description: |-
                  Protocols is an array of the protocols this Route should allow.
                  Deprecated: use Ingress' "konghq.com/protocols" annotation instead.
                items:
                  description: |-
                    KongProtocol is a valid Kong protocol.
                    This alias is necessary to deal with https://github.com/kubernetes-sigs/controller-tools/issues/342
                  enum:
                  - http
                  - https
                  - grpc
                  - grpcs
                  - tcp
                  - tls
                  - udp
                  type: string
                type: array
              regex_priority:
                description: |-
                  RegexPriority is a number used to choose which route resolves a given request
                  when several routes match it using regexes simultaneously.
                  Deprecated: use Ingress' "konghq.com/regex-priority" annotation instead.
                type: integer
              request_buffering:
                description: |-
                  RequestBuffering sets whether to enable request body buffering or not.
                  Deprecated: use Ingress' "konghq.com/request-buffering" annotation instead.
                type: boolean
              response_buffering:
                description: |-
                  ResponseBuffering sets whether to enable response body buffering or not.
                  Deprecated: use Ingress' "konghq.com/response-buffering" annotation instead.
                type: boolean
              snis:
                description: |-
                  SNIs is a list of SNIs that match this Route when using stream routing.
                  Deprecated: use Ingress' "konghq.com/snis" annotation instead.
                items:
                  type: string
                type: array
              strip_path:
                description: |-
                  StripPath sets When matching a Route via one of the paths
                  strip the matching prefix from the upstream request URL.
                  Deprecated: use Ingress' "konghq.com/strip-path" annotation instead.
                type: boolean
            type: object
          upstream:
            description: |-
              Upstream represents a virtual hostname and can be used to loadbalance
              incoming requests over multiple targets (e.g. Kubernetes `Services` can
              be a target, OR `Endpoints` can be targets).
            properties:
              algorithm:
                description: |-
                  Algorithm is the load balancing algorithm to use.
                  Accepted values are: "round-robin", "consistent-hashing", "least-connections", "latency".
                enum:
                - round-robin
                - consistent-hashing
                - least-connections
                - latency
                type: string
              hash_fallback:
                description: |-
                  HashFallback defines What to use as hashing input
                  if the primary hash_on does not return a hash.
                  Accepted values are: "none", "consumer", "ip", "header", "cookie".
                type: string
              hash_fallback_header:
                description: |-
                  HashFallbackHeader is the header name to take the value from as hash input.
                  Only required when "hash_fallback" is set to "header".
                type: string
              hash_fallback_query_arg:
                description: HashFallbackQueryArg is the "hash_fallback" version of
                  HashOnQueryArg.
                type: string
              hash_fallback_uri_capture:
                description: HashFallbackURICapture is the "hash_fallback" version
                  of HashOnURICapture.
                type: string
              hash_on:
                description: |-
                  HashOn defines what to use as hashing input.
                  Accepted values are: "none", "consumer", "ip", "header", "cookie", "path", "query_arg", "uri_capture".
                type: string
              hash_on_cookie:
                description: |-
                  The cookie name to take the value from as hash input.
                  Only required when "hash_on" or "hash_fallback" is set to "cookie".
                type: string
              hash_on_cookie_path:
                description: |-
                  The cookie path to set in the response headers.
                  Only required when "hash_on" or "hash_fallback" is set to "cookie".
                type: string
              hash_on_header:
                description: |-
                  HashOnHeader defines the header name to take the value from as hash input.
                  Only required when "hash_on" is set to "header".
                type: string
              hash_on_query_arg:
                description: HashOnQueryArg is the query string parameter whose value
                  is the hash input when "hash_on" is set to "query_arg".
                type: string
              hash_on_uri_capture:
                description: |-
                  HashOnURICapture is the name of the capture group whose value is the hash input when "hash_on" is set to
                  "uri_capture".
                type: string
              healthchecks:
                description: Healthchecks defines the health check configurations
                  in Kong.
                properties:
                  active:
                    description: ActiveHealthcheck configures active health check
                      probing.
                    properties:
                      concurrency:
                        minimum: 1
                        type: integer
                      headers:
                        additionalProperties:
                          items:
                            type: string
                          type: array
                        type: object
                      healthy:
                        description: |-
                          Healthy configures thresholds and HTTP status codes
                          to mark targets healthy for an upstream.
                        properties:
                          http_statuses:
                            items:
                              type: integer
                            type: array
                          interval:
                            minimum: 0
                            type: integer
                          successes:
                            minimum: 0
                            type: integer
                        type: object
                      http_path:
                        pattern: ^/.*$
                        type: string
                      https_sni:
                        type: string
                      https_verify_certificate:
                        type: boolean
                      timeout:
                        minimum: 0
                        type: integer
                      type:
                        type: string
                      unhealthy:
                        description: |-
                          Unhealthy configures thresholds and HTTP status codes
                          to mark targets unhealthy.
                        properties:
                          http_failures:
                            minimum: 0
                            type: integer
                          http_statuses:
                            items:
                              type: integer
                            type: array
                          interval:
                            minimum: 0
                            type: integer
                          tcp_failures:
                            minimum: 0
                            type: integer
                          timeouts:
                            minimum: 0
                            type: integer
                        type: object
                    type: object
                  passive:
                    description: |-
                      PassiveHealthcheck configures passive checks around
                      passive health checks.
                    properties:
                      healthy:
                        description: |-
                          Healthy configures thresholds and HTTP status codes
                          to mark targets healthy for an upstream.
                        properties:
                          http_statuses:
                            items:
                              type: integer
                            type: array
                          interval:
                            minimum: 0
                            type: integer
                          successes:
                            minimum: 0
                            type: integer
                        type: object
                      type:
                        type: string
                      unhealthy:
                        description: |-
                          Unhealthy configures thresholds and HTTP status codes
                          to mark targets unhealthy.
                        properties:
                          http_failures:
                            minimum: 0
                            type: integer
                          http_statuses:
                            items:
                              type: integer
                            type: array
                          interval:
                            minimum: 0
                            type: integer
                          tcp_failures:
                            minimum: 0
                            type: integer
                          timeouts:
                            minimum: 0
                            type: integer
                        type: object
                    type: object
                  threshold:
                    type: number
                type: object
              host_header:
                description: |-
                  HostHeader is The hostname to be used as Host header
                  when proxying requests through Kong.
                type: string
              slots:
                description: Slots is the number of slots in the load balancer algorithm.
                minimum: 10
                type: integer
            type: object
        type: object
        x-kubernetes-validations:
        - message: '''proxy'' field is no longer supported, use Service''s annotations
            instead'
          rule: '!has(self.proxy)'
        - message: '''route'' field is no longer supported, use Ingress'' annotations
            instead'
          rule: '!has(self.route)'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: konglicenses.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong-ingress-controller
    kind: KongLicense
    listKind: KongLicenseList
    plural: konglicenses
    shortNames:
    - kl
    singular: konglicense
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Age
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Enabled to configure on Kong gateway instances
      jsonPath: .enabled
      name: Enabled
      type: boolean
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KongLicense stores a Kong enterprise license to apply to managed
          Kong gateway instances.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          enabled:
            default: true
            description: |-
              Enabled is set to true to let controllers (like KIC or KGO) to reconcile it.
              Default value is true to apply the license by default.
            type: boolean
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          rawLicenseString:
            description: RawLicenseString is a string with the raw content of the
              license.
            type: string
          status:
            description: Status is the status of the KongLicense being processed by
              controllers.
            properties:
              controllers:
                items:
                  description: |-
                    KongLicenseControllerStatus is the status of owning KongLicense being processed
                    identified by the controllerName field.
                  properties:
                    conditions:
                      default:
                      - lastTransitionTime: "1970-01-01T00:00:00Z"
                        message: Waiting for controller
                        reason: Pending
                        status: Unknown
                        type: Programmed
                      description: Conditions describe the current conditions of the
                        KongLicense on the controller.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource.\n---\nThis struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example,\n\n\n\ttype FooStatus
                          struct{\n\t    // Represents the observations of a foo's
                          current state.\n\t    // Known .status.conditions.type are:
                          \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                          +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    //
                          +listType=map\n\t    // +listMapKey=type\n\t    Conditions
                          []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                          patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                          \   // other fields\n\t}"
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: |-
                              type of condition in CamelCase or in foo.example.com/CamelCase.
                              ---
                              Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                              useful (see .node.status.conditions), the ability to deconflict is important.
                              The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is an identifier of the controller to reconcile this KongLicense.
                        Should be unique in the list of controller statuses.
                      type: string
                    controllerRef:
                      description: |-
                        ControllerRef is the reference of the controller to reconcile this KongLicense.
                        It is usually the name of (KIC/KGO) pod that reconciles it.
                      properties:
                        group:
                          description: |-
                            Group is the group of referent.
                            It should be empty if the referent is in "core" group (like pod).
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          description: |-
                            Kind is the kind of the referent.
                            By default the nil kind means kind Pod.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: Name is the name of the referent.
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent.
                            It should be empty if the referent is cluster scoped.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - controllerName
                x-kubernetes-list-type: map
            type: object
        required:
        - enabled
        - rawLicenseString
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: kongplugins.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong-ingress-controller
    kind: KongPlugin
    listKind: KongPluginList
    plural: kongplugins
    shortNames:
    - kp
    singular: kongplugin
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Name of the plugin
      jsonPath: .plugin
      name: Plugin-Type
      type: string
    - description: Age
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Indicates if the plugin is disabled
      jsonPath: .disabled
      name: Disabled
      priority: 1
      type: boolean
    - description: Configuration of the plugin
      jsonPath: .config
      name: Config
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=="Programmed")].status
      name: Programmed
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: KongPlugin is the Schema for the kongplugins API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          config:
            description: |-
              Config contains the plugin configuration. It's a list of keys and values
              required to configure the plugin.
              Please read the documentation of the plugin being configured to set values
              in here. For any plugin in Kong, anything that goes in the `config` JSON
              key in the Admin API request, goes into this property.
              Only one of `config` or `configFrom` may be used in a KongPlugin, not both at once.
            type: object
            x-kubernetes-preserve-unknown-fields: true
          configFrom:
            description: |-
              ConfigFrom references a secret containing the plugin configuration.
              This should be used when the plugin configuration contains sensitive information,
              such as AWS credentials in the Lambda plugin or the client secret in the OIDC plugin.
              Only one of `config` or `configFrom` may be used in a KongPlugin, not both at once.
            properties:
              secretKeyRef:
                description: Specifies a name and a key of a secret to refer to. The
                  namespace is implicitly set to the one of referring object.
                properties:
                  key:
                    description: The key containing the value.
                    type: string
                  name:
                    description: The secret containing the key.
                    type: string
                required:
                - key
                - name
                type: object
            required:
            - secretKeyRef
            type: object
          configPatches:
            description: |-
              ConfigPatches represents JSON patches to the configuration of the plugin.
              Each item means a JSON patch to add something in the configuration,
              where path is specified in `path` and value is in `valueFrom` referencing
              a key in a secret.
              When Config is specified, patches will be applied to the configuration in Config.
              Otherwise, patches will be applied to an empty object.
            items:
              description: |-
                ConfigPatch is a JSON patch (RFC6902) to add values from Secret to the generated configuration.
                It is an equivalent of the following patch:
                `{"op": "add", "path": {.Path}, "value": {.ComputedValueFrom}}`.
              properties:
                path:
                  description: Path is the JSON-Pointer value (RFC6901) that references
                    a location within the target configuration.
                  type: string
                valueFrom:
                  description: ValueFrom is the reference to a key of a secret where
                    the patched value comes from.
                  properties:
                    secretKeyRef:
                      description: Specifies a name and a key of a secret to refer
                        to. The namespace is implicitly set to the one of referring
                        object.
                      properties:
                        key:
                          description: The key containing the value.
                          type: string
                        name:
                          description: The secret containing the key.
                          type: string
                      required:
                      - key
                      - name
                      type: object
                  required:
                  - secretKeyRef
                  type: object
              required:
              - path
              - valueFrom
              type: object
            type: array
          consumerRef:
            description: ConsumerRef is a reference to a particular consumer.
            type: string
          disabled:
            description: Disabled set if the plugin is disabled or not.
            type: boolean
          instance_name:
            description: |-
              InstanceName is an optional custom name to identify an instance of the plugin. This is useful when running the
              same plugin in multiple contexts, for example, on multiple services.
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          ordering:
            description: |-
              Ordering overrides the normal plugin execution order. It's only available on Kong Enterprise.
              `<phase>` is a request processing phase (for example, `access` or `body_filter`) and
              `<plugin>` is the name of the plugin that will run before or after the KongPlugin.
              For example, a KongPlugin with `plugin: rate-limiting` and `before.access: ["key-auth"]`
              will create a rate limiting plugin that limits requests _before_ they are authenticated.
            properties:
              after:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: PluginOrderingPhase indicates which plugins in a phase
                  should affect the target plugin's order
                type: object
              before:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: PluginOrderingPhase indicates which plugins in a phase
                  should affect the target plugin's order
                type: object
            type: object
          plugin:
            description: PluginName is the name of the plugin to which to apply the
              config.
            type: string
          protocols:
            description: |-
              Protocols configures plugin to run on requests received on specific
              protocols.
            items:
              description: |-
                KongProtocol is a valid Kong protocol.
                This alias is necessary to deal with https://github.com/kubernetes-sigs/controller-tools/issues/342
              enum:
              - http
              - https
              - grpc
              - grpcs
              - tcp
              - tls
              - udp
              type: string
            type: array
          run_on:
            description: |-
              RunOn configures the plugin to run on the first or the second or both
              nodes in case of a service mesh deployment.
            enum:
            - first
            - second
            - all
            type: string
          status:
            description: Status represents the current status of the KongPlugin resource.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: |-
                  Conditions describe the current conditions of the KongPluginStatus.


                  Known condition types are:


                  * "Programmed"
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - plugin
        type: object
        x-kubernetes-validations:
        - message: Using both config and configFrom fields is not allowed.
          rule: '!(has(self.config) && has(self.configFrom))'
        - message: Using both configFrom and configPatches fields is not allowed.
          rule: '!(has(self.configFrom) && has(self.configPatches))'
        - message: The plugin field is immutable
          rule: self.plugin == oldSelf.plugin
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  labels:
    gateway.networking.k8s.io/policy: direct
  name: kongupstreampolicies.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong-ingress-controller
    kind: KongUpstreamPolicy
    listKind: KongUpstreamPolicyList
    plural: kongupstreampolicies
    shortNames:
    - kup
    singular: kongupstreampolicy
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          KongUpstreamPolicy allows configuring algorithm that should be used for load balancing traffic between Kong
          Upstream's Targets. It also allows configuring health checks for Kong Upstream's Targets.


          Its configuration is similar to Kong Upstream object (https://docs.konghq.com/gateway/latest/admin-api/#upstream-object),
          and it is applied to Kong Upstream objects created by the controller.


          It can be attached to Services. To attach it to a Service, it has to be annotated with
          `konghq.com/upstream-policy: <name>`, where `<name>` is the name of the KongUpstreamPolicy
          object in the same namespace as the Service.


          When attached to a Service, it will affect all Kong Upstreams created for the Service.


          When attached to a Service used in a Gateway API *Route rule with multiple BackendRefs, all of its Services MUST
          be configured with the same KongUpstreamPolicy. Otherwise, the controller will *ignore* the KongUpstreamPolicy.


          Note: KongUpstreamPolicy doesn't implement Gateway API's GEP-713 strictly.
          In particular, it doesn't use the TargetRef for attaching to Services and Gateway API *Routes - annotations are
          used instead. This is to allow reusing the same KongUpstreamPolicy for multiple Services and Gateway API *Routes.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec contains the configuration of the Kong upstream.
            properties:
              algorithm:
                description: |-
                  Algorithm is the load balancing algorithm to use.
                  Accepted values are: "round-robin", "consistent-hashing", "least-connections", "latency".
                enum:
                - round-robin
                - consistent-hashing
                - least-connections
                - latency
                type: string
              hashOn:
                description: |-
                  HashOn defines how to calculate hash for consistent-hashing load balancing algorithm.
                  Algorithm must be set to "consistent-hashing" for this field to have effect.
                properties:
                  cookie:
                    description: Cookie is the name of the cookie to use as hash input.
                    type: string
                  cookiePath:
                    description: CookiePath is cookie path to set in the response
                      headers.
                    type: string
                  header:
                    description: Header is the name of the header to use as hash input.
                    type: string
                  input:
                    description: |-
                      Input allows using one of the predefined inputs (ip, consumer, path).
                      For other parametrized inputs, use one of the fields below.
                    enum:
                    - ip
                    - consumer
                    - path
                    type: string
                  queryArg:
                    description: QueryArg is the name of the query argument to use
                      as hash input.
                    type: string
                  uriCapture:
                    description: URICapture is the name of the URI capture group to
                      use as hash input.
                    type: string
                type: object
              hashOnFallback:
                description: |-
                  HashOnFallback defines how to calculate hash for consistent-hashing load balancing algorithm if the primary hash
                  function fails.
                  Algorithm must be set to "consistent-hashing" for this field to have effect.
                properties:
                  cookie:
                    description: Cookie is the name of the cookie to use as hash input.
                    type: string
                  cookiePath:
                    description: CookiePath is cookie path to set in the response
                      headers.
                    type: string
                  header:
                    description: Header is the name of the header to use as hash input.
                    type: string
                  input:
                    description: |-
                      Input allows using one of the predefined inputs (ip, consumer, path).
                      For other parametrized inputs, use one of the fields below.
                    enum:
                    - ip
                    - consumer
                    - path
                    type: string
                  queryArg:
                    description: QueryArg is the name of the query argument to use
                      as hash input.
                    type: string
                  uriCapture:
                    description: URICapture is the name of the URI capture group to
                      use as hash input.
                    type: string
                type: object
              healthchecks:
                description: Healthchecks defines the health check configurations
                  in Kong.
                properties:
                  active:
                    description: Active configures active health check probing.
                    properties:
                      concurrency:
                        description: Concurrency is the number of targets to check
                          concurrently.
                        minimum: 1
                        type: integer
                      headers:
                        additionalProperties:
                          items:
                            type: string
                          type: array
                        description: Headers is a list of HTTP headers to add to the
                          probe request.
                        type: object
                      healthy:
                        description: Healthy configures thresholds and HTTP status
                          codes to mark targets healthy for an upstream.
                        properties:
                          httpStatuses:
                            description: HTTPStatuses is a list of HTTP status codes
                              that Kong considers a success.
                            items:
                              description: HTTPStatus is an HTTP status code.
                              maximum: 599
                              minimum: 100
                              type: integer
                            type: array
                          interval:
                            description: Interval is the interval between active health
                              checks for an upstream in seconds when in a healthy
                              state.
                            minimum: 0
                            type: integer
                          successes:
                            description: Successes is the number of successes to consider
                              a target healthy.
                            minimum: 0
                            type: integer
                        type: object
                      httpPath:
                        description: HTTPPath is the path to use in GET HTTP request
                          to run as a probe.
                        pattern: ^/.*$
                        type: string
                      httpsSni:
                        description: HTTPSSNI is the SNI to use in GET HTTPS request
                          to run as a probe.
                        type: string
                      httpsVerifyCertificate:
                        description: HTTPSVerifyCertificate is a boolean value that
                          indicates if the certificate should be verified.
                        type: boolean
                      timeout:
                        description: Timeout is the probe timeout in seconds.
                        minimum: 0
                        type: integer
                      type:
                        description: |-
                          Type determines whether to perform active health checks using HTTP or HTTPS, or just attempt a TCP connection.
                          Accepted values are "http", "https", "tcp", "grpc", "grpcs".
                        enum:
                        - http
                        - https
                        - tcp
                        - grpc
                        - grpcs
                        type: string
                      unhealthy:
                        description: Unhealthy configures thresholds and HTTP status
                          codes to mark targets unhealthy for an upstream.
                        properties:
                          httpFailures:
                            description: HTTPFailures is the number of failures to
                              consider a target unhealthy.
                            minimum: 0
                            type: integer
                          httpStatuses:
                            description: HTTPStatuses is a list of HTTP status codes
                              that Kong considers a failure.
                            items:
                              description: HTTPStatus is an HTTP status code.
                              maximum: 599
                              minimum: 100
                              type: integer
                            type: array
                          interval:
                            description: Interval is the interval between active health
                              checks for an upstream in seconds when in an unhealthy
                              state.
                            minimum: 0
                            type: integer
                          tcpFailures:
                            description: TCPFailures is the number of TCP failures
                              in a row to consider a target unhealthy.
                            minimum: 0
                            type: integer
                          timeouts:
                            description: Timeouts is the number of timeouts in a row
                              to consider a target unhealthy.
                            minimum: 0
                            type: integer
                        type: object
                    type: object
                  passive:
                    description: Passive configures passive health check probing.
                    properties:
                      healthy:
                        description: Healthy configures thresholds and HTTP status
                          codes to mark targets healthy for an upstream.
                        properties:
                          httpStatuses:
                            description: HTTPStatuses is a list of HTTP status codes
                              that Kong considers a success.
                            items:
                              description: HTTPStatus is an HTTP status code.
                              maximum: 599
                              minimum: 100
                              type: integer
                            type: array
                          interval:
                            description: Interval is the interval between active health
                              checks for an upstream in seconds when in a healthy
                              state.
                            minimum: 0
                            type: integer
                          successes:
                            description: Successes is the number of successes to consider
                              a target healthy.
                            minimum: 0
                            type: integer
                        type: object
                      type:
                        description: |-
                          Type determines whether to perform passive health checks interpreting HTTP/HTTPS statuses,
                          or just check for TCP connection success.
                          Accepted values are "http", "https", "tcp", "grpc", "grpcs".
                        enum:
                        - http
                        - https
                        - tcp
                        - grpc
                        - grpcs
                        type: string
                      unhealthy:
                        description: Unhealthy configures thresholds and HTTP status
                          codes to mark targets unhealthy.
                        properties:
                          httpFailures:
                            description: HTTPFailures is the number of failures to
                              consider a target unhealthy.
                            minimum: 0
                            type: integer
                          httpStatuses:
                            description: HTTPStatuses is a list of HTTP status codes
                              that Kong considers a failure.
                            items:
                              description: HTTPStatus is an HTTP status code.
                              maximum: 599
                              minimum: 100
                              type: integer
                            type: array
                          interval:
                            description: Interval is the interval between active health
                              checks for an upstream in seconds when in an unhealthy
                              state.
                            minimum: 0
                            type: integer
                          tcpFailures:
                            description: TCPFailures is the number of TCP failures
                              in a row to consider a target unhealthy.
                            minimum: 0
                            type: integer
                          timeouts:
                            description: Timeouts is the number of timeouts in a row
                              to consider a target unhealthy.
                            minimum: 0
                            type: integer
                        type: object
                    type: object
                  threshold:
                    description: |-
                      Threshold is the minimum percentage of the upstream’s targets’ weight that must be available for the whole
                      upstream to be considered healthy.
                    type: integer
                type: object
              slots:
                description: |-
                  Slots is the number of slots in the load balancer algorithm.
                  If not set, the default value in Kong for the algorithm is used.
                maximum: 65536
                minimum: 10
                type: integer
            type: object
          status:
            description: Status defines the current state of KongUpstreamPolicy
            properties:
              ancestors:
                description: |-
                  Ancestors is a list of ancestor resources (usually Gateways) that are
                  associated with the policy, and the status of the policy with respect to
                  each ancestor. When this policy attaches to a parent, the controller that
                  manages the parent and the ancestors MUST add an entry to this list when
                  the controller first sees the policy and SHOULD update the entry as
                  appropriate when the relevant ancestor is modified.


                  Note that choosing the relevant ancestor is left to the Policy designers;
                  an important part of Policy design is designing the right object level at
                  which to namespace this status.


                  Note also that implementations MUST ONLY populate ancestor status for
                  the Ancestor resources they are responsible for. Implementations MUST
                  use the ControllerName field to uniquely identify the entries in this list
                  that they are responsible for.


                  Note that to achieve this, the list of PolicyAncestorStatus structs
                  MUST be treated as a map with a composite key, made up of the AncestorRef
                  and ControllerName fields combined.


                  A maximum of 16 ancestors will be represented in this list. An empty list
                  means the Policy is not relevant for any ancestors.


                  If this slice is full, implementations MUST NOT add further entries.
                  Instead they MUST consider the policy unimplementable and signal that
                  on any related resources such as the ancestor that would be referenced
                  here. For example, if this list was full on BackendTLSPolicy, no
                  additional Gateways would be able to reference the Service targeted by
                  the BackendTLSPolicy.
                items:
                  description: |-
                    PolicyAncestorStatus describes the status of a route with respect to an
                    associated Ancestor.


                    Ancestors refer to objects that are either the Target of a policy or above it
                    in terms of object hierarchy. For example, if a policy targets a Service, the
                    Policy's Ancestors are, in order, the Service, the HTTPRoute, the Gateway, and
                    the GatewayClass. Almost always, in this hierarchy, the Gateway will be the most
                    useful object to place Policy status on, so we recommend that implementations
                    SHOULD use Gateway as the PolicyAncestorStatus object unless the designers
                    have a _very_ good reason otherwise.


                    In the context of policy attachment, the Ancestor is used to distinguish which
                    resource results in a distinct application of this policy. For example, if a policy
                    targets a Service, it may have a distinct result per attached Gateway.


                    Policies targeting the same resource may have different effects depending on the
                    ancestors of those resources. For example, different Gateways targeting the same
                    Service may have different capabilities, especially if they have different underlying
                    implementations.


                    For example, in BackendTLSPolicy, the Policy attaches to a Service that is
                    used as a backend in a HTTPRoute that is itself attached to a Gateway.
                    In this case, the relevant object for status is the Gateway, and that is the
                    ancestor object referred to in this status.


                    Note that a parent is also an ancestor, so for objects where the parent is the
                    relevant object for status, this struct SHOULD still be used.


                    This struct is intended to be used in a slice that's effectively a map,
                    with a composite key made up of the AncestorRef and the ControllerName.
                  properties:
                    ancestorRef:
                      description: |-
                        AncestorRef corresponds with a ParentRef in the spec that this
                        PolicyAncestorStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).


                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.


                            There are two kinds of parent resources with "Core" support:


                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)


                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.


                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.


                            <gateway:experimental:description>
                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.


                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.
                            </gateway:experimental:description>


                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.


                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.


                            <gateway:experimental:description>
                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.
                            </gateway:experimental:description>


                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.


                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.


                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:


                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.


                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.


                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                    conditions:
                      description: Conditions describes the status of the Policy with
                        respect to the given Ancestor.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource.\n---\nThis struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example,\n\n\n\ttype FooStatus
                          struct{\n\t    // Represents the observations of a foo's
                          current state.\n\t    // Known .status.conditions.type are:
                          \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                          +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    //
                          +listType=map\n\t    // +listMapKey=type\n\t    Conditions
                          []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                          patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                          \   // other fields\n\t}"
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: |-
                              type of condition in CamelCase or in foo.example.com/CamelCase.
                              ---
                              Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                              useful (see .node.status.conditions), the ability to deconflict is important.
                              The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.


                        Example: "example.net/gateway-controller".


                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).


                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                  required:
                  - ancestorRef
                  - controllerName
                  type: object
                maxItems: 16
                type: array
            required:
            - ancestors
            type: object
        type: object
        x-kubernetes-validations:
        - message: Only one of spec.hashOn.(input|cookie|header|uriCapture|queryArg)
            can be set.
          rule: 'has(self.spec.hashOn) ? [has(self.spec.hashOn.input), has(self.spec.hashOn.cookie),
            has(self.spec.hashOn.header), has(self.spec.hashOn.uriCapture), has(self.spec.hashOn.queryArg)].filter(fieldSet,
            fieldSet == true).size() <= 1 : true'
        - message: When spec.hashOn.cookie is set, spec.hashOn.cookiePath is required.
          rule: 'has(self.spec.hashOn) && has(self.spec.hashOn.cookie) ? has(self.spec.hashOn.cookiePath)
            : true'
        - message: When spec.hashOn.cookiePath is set, spec.hashOn.cookie is required.
          rule: 'has(self.spec.hashOn) && has(self.spec.hashOn.cookiePath) ? has(self.spec.hashOn.cookie)
            : true'
        - message: spec.algorithm must be set to "consistent-hashing" when spec.hashOn
            is set.
          rule: 'has(self.spec.hashOn) ? has(self.spec.algorithm) && self.spec.algorithm
            == "consistent-hashing" : true'
        - message: Only one of spec.hashOnFallback.(input|header|uriCapture|queryArg)
            can be set.
          rule: 'has(self.spec.hashOnFallback) ? [has(self.spec.hashOnFallback.input),
            has(self.spec.hashOnFallback.header), has(self.spec.hashOnFallback.uriCapture),
            has(self.spec.hashOnFallback.queryArg)].filter(fieldSet, fieldSet == true).size()
            <= 1 : true'
        - message: spec.algorithm must be set to "consistent-hashing" when spec.hashOnFallback
            is set.
          rule: 'has(self.spec.hashOnFallback) ? has(self.spec.algorithm) && self.spec.algorithm
            == "consistent-hashing" : true'
        - message: spec.hashOnFallback.cookie must not be set.
          rule: 'has(self.spec.hashOnFallback) ? !has(self.spec.hashOnFallback.cookie)
            : true'
        - message: spec.hashOnFallback.cookiePath must not be set.
          rule: 'has(self.spec.hashOnFallback) ? !has(self.spec.hashOnFallback.cookiePath)
            : true'
        - message: spec.healthchecks.passive.healthy.interval must not be set.
          rule: 'has(self.spec.healthchecks) && has(self.spec.healthchecks.passive)
            && has(self.spec.healthchecks.passive.healthy) ? !has(self.spec.healthchecks.passive.healthy.interval)
            : true'
        - message: spec.healthchecks.passive.unhealthy.interval must not be set.
          rule: 'has(self.spec.healthchecks) && has(self.spec.healthchecks.passive)
            && has(self.spec.healthchecks.passive.unhealthy) ? !has(self.spec.healthchecks.passive.unhealthy.interval)
            : true'
        - message: spec.hashOnFallback must not be set when spec.hashOn.cookie is
            set.
          rule: 'has(self.spec.hashOn) && has(self.spec.hashOn.cookie) ? !has(self.spec.hashOnFallback)
            : true'
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: kongvaults.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong-ingress-controller
    kind: KongVault
    listKind: KongVaultList
    plural: kongvaults
    shortNames:
    - kv
    singular: kongvault
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Name of the backend of the vault
      jsonPath: .spec.backend
      name: Backend Type
      type: string
    - description: Prefix of vault URI to reference the values in the vault
      jsonPath: .spec.prefix
      name: Prefix
      type: string
    - description: Age
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Description
      jsonPath: .spec.description
      name: Description
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=="Programmed")].status
      name: Programmed
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          KongVault is the schema for kongvaults API which defines a custom Kong vault.
          A Kong vault is a storage to store sensitive data, where the values can be referenced in configuration of plugins.
          See: https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: KongVaultSpec defines specification of a custom Kong vault.
            properties:
              backend:
                description: |-
                  Backend is the type of the backend storing the secrets in the vault.
                  The supported backends of Kong is listed here:
                  https://docs.konghq.com/gateway/latest/kong-enterprise/secrets-management/backends/
                minLength: 1
                type: string
              config:
                description: Config is the configuration of the vault. Varies for
                  different backends.
                x-kubernetes-preserve-unknown-fields: true
              description:
                description: Description is the additional information about the vault.
                type: string
              prefix:
                description: |-
                  Prefix is the prefix of vault URI for referencing values in the vault.
                  It is immutable after created.
                minLength: 1
                type: string
            required:
            - backend
            - prefix
            type: object
          status:
            description: KongVaultStatus represents the current status of the KongVault
              resource.
            properties:
              conditions:
                default:
                - lastTransitionTime: "1970-01-01T00:00:00Z"
                  message: Waiting for controller
                  reason: Pending
                  status: Unknown
                  type: Programmed
                description: |-
                  Conditions describe the current conditions of the KongVaultStatus.


                  Known condition types are:


                  * "Programmed"
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            required:
            - conditions
            type: object
        required:
        - spec
        type: object
        x-kubernetes-validations:
        - message: The spec.prefix field is immutable
          rule: self.spec.prefix == oldSelf.spec.prefix
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/2997
    gateway.networking.k8s.io/bundle-version: v1.1.0
    gateway.networking.k8s.io/channel: standard
  creationTimestamp: null
  name: referencegrants.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: ReferenceGrant
    listKind: ReferenceGrantList
    plural: referencegrants
    shortNames:
    - refgrant
    singular: referencegrant
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    deprecated: true
    deprecationWarning: The v1alpha2 version of ReferenceGrant has been deprecated
      and will be removed in a future release of the API. Please upgrade to v1beta1.
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: |-
          ReferenceGrant identifies kinds of resources in other namespaces that are
          trusted to reference the specified kinds of resources in the same namespace
          as the policy.


          Each ReferenceGrant can be used to represent a unique trust relationship.
          Additional Reference Grants can be used to add to the set of trusted
          sources of inbound references for the namespace they are defined within.


          A ReferenceGrant is required for all cross-namespace references in Gateway API
          (with the exception of cross-namespace Route-Gateway attachment, which is
          governed by the AllowedRoutes configuration on the Gateway, and cross-namespace
          Service ParentRefs on a "consumer" mesh Route, which defines routing rules
          applicable only to workloads in the Route namespace). ReferenceGrants allowing
          a reference from a Route to a Service are only applicable to BackendRefs.


          ReferenceGrant is a form of runtime verification allowing users to assert
          which cross-namespace object references are permitted. Implementations that
          support ReferenceGrant MUST NOT permit cross-namespace references which have
          no grant, and MUST respond to the removal of a grant by revoking the access
          that the grant allowed.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of ReferenceGrant.
            properties:
              from:
                description: |-
                  From describes the trusted namespaces and kinds that can reference the
                  resources described in "To". Each entry in this list MUST be considered
                  to be an additional place that references can be valid from, or to put
                  this another way, entries MUST be combined using OR.


                  Support: Core
                items:
                  description: ReferenceGrantFrom describes trusted namespaces and
                    kinds.
                  properties:
                    group:
                      description: |-
                        Group is the group of the referent.
                        When empty, the Kubernetes core API group is inferred.


                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: |-
                        Kind is the kind of the referent. Although implementations may support
                        additional resources, the following types are part of the "Core"
                        support level for this field.


                        When used to permit a SecretObjectReference:


                        * Gateway


                        When used to permit a BackendObjectReference:


                        * GRPCRoute
                        * HTTPRoute
                        * TCPRoute
                        * TLSRoute
                        * UDPRoute
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent.


                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                  required:
                  - group
                  - kind
                  - namespace
                  type: object
                maxItems: 16
                minItems: 1
                type: array
              to:
                description: |-
                  To describes the resources that may be referenced by the resources
                  described in "From". Each entry in this list MUST be considered to be an
                  additional place that references can be valid to, or to put this another
                  way, entries MUST be combined using OR.


                  Support: Core
                items:
                  description: |-
                    ReferenceGrantTo describes what Kinds are allowed as targets of the
                    references.
                  properties:
                    group:
                      description: |-
                        Group is the group of the referent.
                        When empty, the Kubernetes core API group is inferred.


                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: |-
                        Kind is the kind of the referent. Although implementations may support
                        additional resources, the following types are part of the "Core"
                        support level for this field:


                        * Secret when used to permit a SecretObjectReference
                        * Service when used to permit a BackendObjectReference
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent. When unspecified, this policy
                        refers to all resources of the specified Group and Kind in the local
                        namespace.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - group
                  - kind
                  type: object
                maxItems: 16
                minItems: 1
                type: array
            required:
            - from
            - to
            type: object
        type: object
    served: false
    storage: false
    subresources: {}
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          ReferenceGrant identifies kinds of resources in other namespaces that are
          trusted to reference the specified kinds of resources in the same namespace
          as the policy.


          Each ReferenceGrant can be used to represent a unique trust relationship.
          Additional Reference Grants can be used to add to the set of trusted
          sources of inbound references for the namespace they are defined within.


          All cross-namespace references in Gateway API (with the exception of cross-namespace
          Gateway-route attachment) require a ReferenceGrant.


          ReferenceGrant is a form of runtime verification allowing users to assert
          which cross-namespace object references are permitted. Implementations that
          support ReferenceGrant MUST NOT permit cross-namespace references which have
          no grant, and MUST respond to the removal of a grant by revoking the access
          that the grant allowed.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of ReferenceGrant.
            properties:
              from:
                description: |-
                  From describes the trusted namespaces and kinds that can reference the
                  resources described in "To". Each entry in this list MUST be considered
                  to be an additional place that references can be valid from, or to put
                  this another way, entries MUST be combined using OR.


                  Support: Core
                items:
                  description: ReferenceGrantFrom describes trusted namespaces and
                    kinds.
                  properties:
                    group:
                      description: |-
                        Group is the group of the referent.
                        When empty, the Kubernetes core API group is inferred.


                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: |-
                        Kind is the kind of the referent. Although implementations may support
                        additional resources, the following types are part of the "Core"
                        support level for this field.


                        When used to permit a SecretObjectReference:


                        * Gateway


                        When used to permit a BackendObjectReference:


                        * GRPCRoute
                        * HTTPRoute
                        * TCPRoute
                        * TLSRoute
                        * UDPRoute
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent.


                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                  required:
                  - group
                  - kind
                  - namespace
                  type: object
                maxItems: 16
                minItems: 1
                type: array
              to:
                description: |-
                  To describes the resources that may be referenced by the resources
                  described in "From". Each entry in this list MUST be considered to be an
                  additional place that references can be valid to, or to put this another
                  way, entries MUST be combined using OR.


                  Support: Core
                items:
                  description: |-
                    ReferenceGrantTo describes what Kinds are allowed as targets of the
                    references.
                  properties:
                    group:
                      description: |-
                        Group is the group of the referent.
                        When empty, the Kubernetes core API group is inferred.


                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: |-
                        Kind is the kind of the referent. Although implementations may support
                        additional resources, the following types are part of the "Core"
                        support level for this field:


                        * Secret when used to permit a SecretObjectReference
                        * Service when used to permit a BackendObjectReference
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent. When unspecified, this policy
                        refers to all resources of the specified Group and Kind in the local
                        namespace.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - group
                  - kind
                  type: object
                maxItems: 16
                minItems: 1
                type: array
            required:
            - from
            - to
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: tcpingresses.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong-ingress-controller
    kind: TCPIngress
    listKind: TCPIngressList
    plural: tcpingresses
    singular: tcpingress
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Address of the load balancer
      jsonPath: .status.loadBalancer.ingress[*].ip
      name: Address
      type: string
    - description: Age
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: TCPIngress is the Schema for the tcpingresses API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the TCPIngress specification.
            properties:
              rules:
                description: A list of rules used to configure the Ingress.
                items:
                  description: |-
                    IngressRule represents a rule to apply against incoming requests.
                    Matching is performed based on an (optional) SNI and port.
                  properties:
                    backend:
                      description: |-
                        Backend defines the referenced service endpoint to which the traffic
                        will be forwarded to.
                      properties:
                        serviceName:
                          description: Specifies the name of the referenced service.
                          minLength: 1
                          type: string
                        servicePort:
                          description: Specifies the port of the referenced service.
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                      required:
                      - serviceName
                      - servicePort
                      type: object
                    host:
                      description: |-
                        Host is the fully qualified domain name of a network host, as defined
                        by RFC 3986.
                        If a Host is not specified, then port-based TCP routing is performed. Kong
                        doesn't care about the content of the TCP stream in this case.
                        If a Host is specified, the protocol must be TLS over TCP.
                        A plain-text TCP request cannot be routed based on Host. It can only
                        be routed based on Port.
                      type: string
                    port:
                      description: |-
                        Port is the port on which to accept TCP or TLS over TCP sessions and
                        route. It is a required field. If a Host is not specified, the requested
                        are routed based only on Port.
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                  required:
                  - backend
                  - port
                  type: object
                type: array
              tls:
                description: |-
                  TLS configuration. This is similar to the `tls` section in the
                  Ingress resource in networking.v1beta1 group.
                  The mapping of SNIs to TLS cert-key pair defined here will be
                  used for HTTP Ingress rules as well. Once can define the mapping in
                  this resource or the original Ingress resource, both have the same
                  effect.
                items:
                  description: IngressTLS describes the transport layer security.
                  properties:
                    hosts:
                      description: |-
                        Hosts are a list of hosts included in the TLS certificate. The values in
                        this list must match the name/s used in the tlsSecret. Defaults to the
                        wildcard host setting for the loadbalancer controller fulfilling this
                        Ingress, if left unspecified.
                      items:
                        type: string
                      type: array
                    secretName:
                      description: SecretName is the name of the secret used to terminate
                        SSL traffic.
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: TCPIngressStatus defines the observed state of TCPIngress.
            properties:
              loadBalancer:
                description: LoadBalancer contains the current status of the load-balancer.
                properties:
                  ingress:
                    description: |-
                      Ingress is a list containing ingress points for the load-balancer.
                      Traffic intended for the service should be sent to these ingress points.
                    items:
                      description: |-
                        LoadBalancerIngress represents the status of a load-balancer ingress point:
                        traffic intended for the service should be sent to an ingress point.
                      properties:
                        hostname:
                          description: |-
                            Hostname is set for load-balancer ingress points that are DNS based
                            (typically AWS load-balancers)
                          type: string
                        ip:
                          description: |-
                            IP is set for load-balancer ingress points that are IP based
                            (typically GCE or OpenStack load-balancers)
                          type: string
                        ipMode:
                          description: |-
                            IPMode specifies how the load-balancer IP behaves, and may only be specified when the ip field is specified.
                            Setting this to "VIP" indicates that traffic is delivered to the node with
                            the destination set to the load-balancer's IP and port.
                            Setting this to "Proxy" indicates that traffic is delivered to the node or pod with
                            the destination set to the node's IP and node port or the pod's IP and port.
                            Service implementations may use this information to adjust traffic routing.
                          type: string
                        ports:
                          description: |-
                            Ports is a list of records of service ports
                            If used, every port defined in the service should have an entry in it
                          items:
                            properties:
                              error:
                                description: |-
                                  Error is to record the problem with the service port
                                  The format of the error shall comply with the following rules:
                                  - built-in error values shall be specified in this file and those shall use
                                    CamelCase names
                                  - cloud provider specific error values must have names that comply with the
                                    format foo.example.com/CamelCase.
                                  ---
                                  The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                              port:
                                description: Port is the port number of the service
                                  port of which status is recorded here
                                format: int32
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the protocol of the service port of which status is recorded here
                                  The supported values are: "TCP", "UDP", "SCTP"
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: udpingresses.configuration.konghq.com
spec:
  group: configuration.konghq.com
  names:
    categories:
    - kong-ingress-controller
    kind: UDPIngress
    listKind: UDPIngressList
    plural: udpingresses
    singular: udpingress
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Address of the load balancer
      jsonPath: .status.loadBalancer.ingress[*].ip
      name: Address
      type: string
    - description: Age
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: UDPIngress is the Schema for the udpingresses API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the UDPIngress specification.
            properties:
              rules:
                description: A list of rules used to configure the Ingress.
                items:
                  description: |-
                    UDPIngressRule represents a rule to apply against incoming requests
                    wherein no Host matching is available for request routing, only the port
                    is used to match requests.
                  properties:
                    backend:
                      description: |-
                        Backend defines the Kubernetes service which accepts traffic from the
                        listening Port defined above.
                      properties:
                        serviceName:
                          description: Specifies the name of the referenced service.
                          minLength: 1
                          type: string
                        servicePort:
                          description: Specifies the port of the referenced service.
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                      required:
                      - serviceName
                      - servicePort
                      type: object
                    port:
                      description: |-
                        Port indicates the port for the Kong proxy to accept incoming traffic
                        on, which will then be routed to the service Backend.
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                  required:
                  - backend
                  - port
                  type: object
                type: array
            type: object
          status:
            description: UDPIngressStatus defines the observed state of UDPIngress.
            properties:
              loadBalancer:
                description: LoadBalancer contains the current status of the load-balancer.
                properties:
                  ingress:
                    description: |-
                      Ingress is a list containing ingress points for the load-balancer.
                      Traffic intended for the service should be sent to these ingress points.
                    items:
                      description: |-
                        LoadBalancerIngress represents the status of a load-balancer ingress point:
                        traffic intended for the service should be sent to an ingress point.
                      properties:
                        hostname:
                          description: |-
                            Hostname is set for load-balancer ingress points that are DNS based
                            (typically AWS load-balancers)
                          type: string
                        ip:
                          description: |-
                            IP is set for load-balancer ingress points that are IP based
                            (typically GCE or OpenStack load-balancers)
                          type: string
                        ipMode:
                          description: |-
                            IPMode specifies how the load-balancer IP behaves, and may only be specified when the ip field is specified.
                            Setting this to "VIP" indicates that traffic is delivered to the node with
                            the destination set to the load-balancer's IP and port.
                            Setting this to "Proxy" indicates that traffic is delivered to the node or pod with
                            the destination set to the node's IP and node port or the pod's IP and port.
                            Service implementations may use this information to adjust traffic routing.
                          type: string
                        ports:
                          description: |-
                            Ports is a list of records of service ports
                            If used, every port defined in the service should have an entry in it
                          items:
                            properties:
                              error:
                                description: |-
                                  Error is to record the problem with the service port
                                  The format of the error shall comply with the following rules:
                                  - built-in error values shall be specified in this file and those shall use
                                    CamelCase names
                                  - cloud provider specific error values must have names that comply with the
                                    format foo.example.com/CamelCase.
                                  ---
                                  The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                              port:
                                description: Port is the port number of the service
                                  port of which status is recorded here
                                format: int32
                                type: integer
                              protocol:
                                default: TCP
                                description: |-
                                  Protocol is the protocol of the service port of which status is recorded here
                                  The supported values are: "TCP", "UDP", "SCTP"
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: controller-2.39.3
  name: gate-controller
  namespace: kong
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: gateway-2.39.3
  name: gate-gateway
  namespace: kong
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: controller-2.39.3
  name: gate-controller
  namespace: kong
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resourceNames:
  - kong-ingress-controller-leader-kong-kong
  resources:
  - configmaps
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: gateway-2.39.3
  name: gate-gateway
  namespace: kong
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - pods
  - secrets
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resourceNames:
  - kong-ingress-controller-leader-kong-kong
  resources:
  - configmaps
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: controller-2.39.3
  name: gate-controller
rules:
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - ingressclassparameterses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: gateway-2.39.3
  name: gate-gateway
rules:
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - ingressclassparameterses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: controller-2.39.3
  name: gate-controller
  namespace: kong
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gate-controller
subjects:
- kind: ServiceAccount
  name: gate-controller
  namespace: kong
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: gateway-2.39.3
  name: gate-gateway
  namespace: kong
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gate-gateway
subjects:
- kind: ServiceAccount
  name: gate-gateway
  namespace: kong
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: controller-2.39.3
  name: gate-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gate-controller
subjects:
- kind: ServiceAccount
  name: gate-controller
  namespace: kong
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: gateway-2.39.3
  name: gate-gateway
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gate-gateway
subjects:
- kind: ServiceAccount
  name: gate-gateway
  namespace: kong
---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUt3c0RXdmRmamZhcWgvYjRCQVJ6aWN3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3T0RJek1Ea3lOekV4V2hjTgpNelF3T0RJeE1Ea3lOekV4V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNU29VWlhOZkZqSGtEb0p2ZEFWc21pWWNtVU8KUzRQZkVqajcxcUwzWHRJRlpGRTkvMjg0WmZOd2NDaXA3ajFzZEtjMG9ldmV6T2RzU1pURHVKbGhQMmZpdWd5ZQpTalc2Q2x5L2hWTUZYeGkwVjlNbzlFek1Xazh4OGJlSmtEbE1LT2h3NXRmUExQeXJscC9EVDdJVkRkaUtKallRClFCTUJjd1hFQlUwM2k4OW16bURIMS9hTTlwdk1lMy9HMzA4Z0JuakhnR2V0enErTkVDd1prM3c5VWNkMTY5L0UKTWUydFZzODVGSnhrR1N4MFl0T0p6YzYzRmFBeTRYcUZiVkZpcytvQVRib3g3NVFIVi93TDUxb0U0NDdSOTUxcApvbFRHWnQ1WWV0TjhoaXpQZW4rYUlOVjZZSE16MWxEVWJSK2VzUHMzWXdRR2xEamRyOXBQMk1aYmJuRUNBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVHpNZ1hQK3NWTjNyMDdsNDJ6MVhqeQp3ZWlrSURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWY5WnVMUnhJcW4ybnpZc3dhN1BjL3pHUHVlWE9MaXVwCmdNaHJPN0V6Y1pJLzF3ZUlZeS9zdGJCUEduckRvcXZhTndmR3J0T25aYXpSZkF4UlpwR1lkck5pNmIyamNSSXgKV1hnc3F6eDAyc1BjUkZGZ2lGdVlrU3ZxdEhTdWtzRFNndVBhZTNvdUV0d1dFalQ5L24vUm83SmEyU1k2RlQxaApLOVBubklsdEJCbGwrRnBvbTFrTTJ3Y08vMGh0NHRXM3NQZGhSM1hFWkt4LzRDS0I4a0l1QlpVNWlEVnBTMThrCk1rdXdOczFMUDRpcDFnUmJ5NUhBRXNya0Z2VW52b0VMN01ucDJJcjU4cERyM1JwUFlvRWlkZE5samw5TDZFb3EKbWpOd09uc0YzYXUwMnFqU2FNVUdtazBvSE5ndG5jTk5Gb012bkl6N0tvS1pORjk0ZFJMcDdRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeEtoUmxjMThXTWVRT2dtOTBCV3lhSmh5WlE1TGc5OFNPUHZXb3ZkZTBnVmtVVDMvCmJ6aGw4M0J3S0tudVBXeDBwelNoNjk3TTUyeEpsTU80bVdFL1orSzZESjVLTmJvS1hMK0ZVd1ZmR0xSWDB5ajAKVE14YVR6SHh0NG1RT1V3bzZIRG0xODhzL0t1V244TlBzaFVOMklvbU5oQkFFd0Z6QmNRRlRUZUx6MmJPWU1mWAo5b3oybTh4N2Y4YmZUeUFHZU1lQVo2M09yNDBRTEJtVGZEMVJ4M1hyMzhReDdhMVd6emtVbkdRWkxIUmkwNG5OCnpyY1ZvRExoZW9WdFVXS3o2Z0JOdWpIdmxBZFgvQXZuV2dUamp0SDNuV21pVk1abTNsaDYwM3lHTE05NmY1b2cKMVhwZ2N6UFdVTlJ0SDU2dyt6ZGpCQWFVT04ydjJrL1l4bHR1Y1FJREFRQUJBb0lCQUhSVTNXNHdVQTUwZnV6VwpObUtSY3loTWhkOGh4YW9NbTByNkxzM1laMDcxd1pJTmlyelFMLzhCMUZjNXJxVEhNM3AxdUJNL2lSYWRDQ25vClhacmQzQlFvR3NhOEhFb0w4M1ZLRmlRMldUclQ4K0FGcWY2RUpDZ1U4MWdQR0RITXk2WTBvMW1tUklaek9uYm4Kb28xRnh4c0JIZmw5UTJuNndYLzNwT3M0b0l2ZXlUSjdMM3ZVcjUwTWVtTzVRdFJKcGtkZ3ZRUlV1L2xYWi9JNgo2VWhiOGZmYjAvWUxUZjY5bmoxdFNXNzhyZW9UdFVOc1N6MWZsWUlyQWJlaUUxWE1zWEJBVlR6a3RoNTYxekUrCnpsV2R0ZHh5dUJaa1hCQUs4c3JqVHJkTXpJaEdBSFBHdWZuL3oyMzZjTVFhT05ESk9OQXB3ZXZmakxsZWtxWkMKdVJDMlA4RUNnWUVBL3dyQm1uYTBSWmZ0dTNhVFp0WVBGTEZyelg3OUw1Yitmd0lmaDdqZ1VqUVYrQ0ZyaXIyaApUcmQ3SnA5MXdCRGx1ZGtJOVcxUzlyY0pFTm9LUm96a2I2QzZUbnowRXdTdjlMM3R0MjRYRGJzK1JpNXBVbm4zCjlNM2FldmRoS09GV2J5N3pXWWRPaFdReWR2UGtOOG9oS3Joem10QzVMN20wMlljZjB5aVo4RjhDZ1lFQXhXVnIKd3NuaDZkaDQyYlZrcVlNN2RBc2tUcHdVUUZZOGtpZ3BhSnlOdmd1RXBFZDlmK3gxRWwrNDBCek1XUkFpeXFLVwp1WGN3cGV6Ym11L29ibGxjRjdobzdxdDZsOElNakEwT0JsN05ITUpNYzhidHptWTVQa0ZlcVpOeVN1Q2p4c2xkCjVGci9HZ3NIN20ycUxoT25ndXh0cVA3SVVUVnhxTUdQaWFsRzB5OENnWUFaNmZyZitmMjVNSVc4VFlFT3F1TmYKWStPalBxcjFJZTk3OGpoSDd4WUQ1RHp6T0ZvWC84cWJGL09RYWhWcHpZMjZBMzV3aVlvcmZVK1RnY1FYaFF0VQorRXpWMnNabUJFem9uai9BS3BSM0ZiWnZKUm9ZZ2tJYWdxd1hZSGxqMFBtYVZIZnZlZHNWbktld0JIb0UzU25mCmtGeFd0NnlKVitJelZCSjh2eHhkR3dLQmdEQ1JkTU0zb3dORGhQQ2tKZ0ZqVGJTT3JUOCtQZWxham9xem9RU2gKU0dyVE1LNnUvRjBHVkFQU1U0bTVIRHBwc3ZYQ3JXMHl1MkNIOTd5V2ZNeng1YXZjYnMwU21oWk80NEZ1RU41VwpZd2RKYzBBbFdRdW9zVHIxSUpKK3VlZGNnRTkvNmo4dWVJZnk0TiswVWVRR1ovZlpybDJmV3JCSWd3K3ZtRjZaCnJOaDNBb0dCQUtLUE1kNllXZ2ZXR2ZKdEZzT2M1eXVSNXE5bTg2ZU03ZGQrQTNXTG56Y2JBb3FPMXdyYVpES1QKc2YybEJ6WjhTb0ROU0tUZFVMWFlOVHI5K1BLYUdoc0dFTkE5N3ZZUkk2WiszUVI4eURNQVgzVjVCQVVacWgyUwpXVG16Z2h1Q3dyUDNIV09qb2pnSno1RHkwQzNEdko4dTdlY010RHYzcXBJUlhxWVJLRDZRCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: controller-2.39.3
  name: gate-controller-validation-webhook-ca-keypair
  namespace: kong
type: kubernetes.io/tls
---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURkakNDQWw2Z0F3SUJBZ0lRVU9BY09SRXJOZFhEL2RzMnB5Tno5ekFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOREE0TWpNd09USTNNVEZhRncwegpOREE0TWpFd09USTNNVEZhTURZeE5EQXlCZ05WQkFNVEsyZGhkR1V0WTI5dWRISnZiR3hsY2kxMllXeHBaR0YwCmFXOXVMWGRsWW1odmIyc3VhMjl1Wnk1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRREcvbTJFZ1dHTTY4bnZjbnI0U1Z4TWpnaUJ6SDdPTDQ1TzN1bG82YXlXZ1NWZklNV1QyZWovdk9xegpuTzFFbjI1M2hmWWN2elF2aEZtR0lkMXJDRlJQQ2lPRkI0UlNvYm5zRXBRcmRsamczKzEwdmlvbG9XTklYQm9VCkRYWXlXRVh3Uzl2bGU3VUhzS3hITTQwK1FaQzJTUkxRckltOGZ4Y3J6SmxocTlheFQxaWNVOHd5bXZwRXlUVXMKcFZLWHZRSCswc21XZkxnV3NHeU5Gck96bXBKT2lNRUpyTWtoK1V3R0V6YVByVXdtMDdNdzVWTTd6NjMyOGp1SQo1RCszczcwQ0dZbXZlMGVpYkhOaTBZMWh1N010MzV0aHNVV3p0eW91eGFzVnNKU1Y5WDg0bVNVdStTVzB3a28zCjFXajd0MCtONDNRcGZVU1l6aElEcnhreC9TeXBBZ01CQUFHamdaa3dnWll3RGdZRFZSMFBBUUgvQkFRREFnV2cKTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4RwpBMVVkSXdRWU1CYUFGUE15QmMvNnhVM2V2VHVYamJQVmVQTEI2S1FnTURZR0ExVWRFUVF2TUMyQ0syZGhkR1V0ClkyOXVkSEp2Ykd4bGNpMTJZV3hwWkdGMGFXOXVMWGRsWW1odmIyc3VhMjl1Wnk1emRtTXdEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQUpJVjZhUWh4THl2VHlqYlRrVjdXbllrSXQ2andxcjV1STU5T2FqWWtLNjVVTHlnNTV6Lwo2VUQwMnEwUkpDVlZqREozVDJVSUlsOXRWeEkvalJUeHNoVjBLRjdWSUQ0MThQMEJmNkZRQng3R3Exa3M2SHRmCkcrdnBBWStnMnl4Q2d5SnAwWHBuQWtUQStYWVI0VnJSTGlmblVzUHRTYW13Zmx4YVVqV3dEL1h6cTY4enFmb1QKVWhUVitYaE1iV0RpV0RUL3lkSVYwZlVzTTRYZjkxVlk1bkRVK05CTVQ2ZjAvcHN0NEVDb1BSQXdhZ2h0QVlxbwo2cEFFRm14TmhObFFFVW45S3JEVWpQSkZDeWJ5UGlWa1FtdjUvK3VLWWFlZnU5MnVkazl5WXlsSTAvaFlvR25HCjZFOEZEejYyV3BNNFF1OWl1dGF6L2VjZ0lQbHdRdWFaTHBrPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeHY1dGhJRmhqT3ZKNzNKNitFbGNUSTRJZ2N4K3ppK09UdDdwYU9tc2xvRWxYeURGCms5bm8vN3pxczV6dFJKOXVkNFgySEw4MEw0UlpoaUhkYXdoVVR3b2poUWVFVXFHNTdCS1VLM1pZNE4vdGRMNHEKSmFGalNGd2FGQTEyTWxoRjhFdmI1WHUxQjdDc1J6T05Qa0dRdGtrUzBLeUp2SDhYSzh5WllhdldzVTlZbkZQTQpNcHI2Uk1rMUxLVlNsNzBCL3RMSmxueTRGckJzalJhenM1cVNUb2pCQ2F6SklmbE1CaE0yajYxTUp0T3pNT1ZUCk84K3Q5dkk3aU9RL3Q3TzlBaG1KcjN0SG9teHpZdEdOWWJ1ekxkK2JZYkZGczdjcUxzV3JGYkNVbGZWL09Ka2wKTHZrbHRNSktOOVZvKzdkUGplTjBLWDFFbU00U0E2OFpNZjBzcVFJREFRQUJBb0lCQUhvTDVCbW56Sy9Fa2RhbApMUnlJeWU0K0VxT2hTNGlrREREOWNNU2l4UEtPQk9EQ1ZjdW5rOHIrRUNqWEw0S3VFZStHbnZya25sb2lYMUh3CkJVQTNISlpaam8xeG5jdWNXMDZaMm55Sm1sdFptK2JGRjA1N0hFeHVDS1NSMlJOcHBvT0owelY5V1B0OWRUdzYKTnYrZThPV01EZGtrYVZuTnpPVlZHQ0dhWmhQYWs5bTIrcnhvZitOd3pCNnFwRllYREdNemdOa3piWFJFajNXYQp3eEZIWXRZRStRR0NIaDFYU2E4eVdEbjZqa2xKVFhMQy9RMFRJMFRUTzVKeCtGcVBHUUtQZElyU3J2b2tTb1RQCmYvdnA3SkY2T2xqUDNTTUVRN3BHbmpJcWlBZFMrVU9JdU9CSUNEMmJ6a3o2eDZ6OG85d0Uwd1NHeS9pVVdGWHYKRDJoSjBiRUNnWUVBOG00UlM2WlZPamJsTklTUFVWbTZ4K0MycmFCWERSMnd2N3lBbElaT2dOVThiNDJWcGM0WApFbEVEdyt0a3BFa0Y0QUYzU3pST2E1aUxDb3VmTzF2aDQ4RUdxTkJMZ2xNeEY1cnNRL3N3ei9VSHhCTkFadzBhCndtQnhiNy9rQUszR2tSazZTamduSzN4b3AwY3JvOG12UHY0UEtPK3JPTmtEc3RrMFYvMmFIczBDZ1lFQTBpSHYKMnhMZzlhekNmNUZXYTUvZ3Y2K0lZeS80Rm1TdzlPRGdkTFl4NG9BT2loQTgzcnpOb01rZzlCQXBtVnBESmlwNgpkVmg0NGNQR1JWcFpMckl5N1V5cGlxcVNQZ3Y4blNBcHJ5ZVhwMzNRVlVwV2crMEdCZ0E3NHZybGxsOW5XVldRClkvS1EvRDNKOTF5bDhkc2pUSitMSWl0Ymw4ek9mOVk5d2RCWGpVMENnWUVBemVIdDdFb1pMVFE3bVV0T2oyN2QKc2l2RDJGWklONHBVZGJEM25hc2w5a0doYnJkV05KWitmMzZ2N08zMjdaSmFXKy9DeU9wbUF2aHNkSXM0c21lSQp3aXhHcEkwbzQwZ1ZkQStNd1BzTmJENlMxdERtcTkyME1RbElyUGZSQVVhVFVOeVU1VDBrL3NoTDlHdjd3c0JnCmhPV3NLRDdLTWFBVGhRcnphaHFramEwQ2dZRUFsQ1hqRWtRc0lHbE5zMXpIWGhlWS8rd0VyMUY1aW1neExtU0IKT3lmYzRjREEvMnZWVG9BMFJVQ29JQXBwR2JvK2oyRHhkMXdKMWJvT1JvVWRUVVBMamV3M3VCRHNEQnl0WENYNQozWWgvYmxIUW1PRlJQNi9UU0ZYUDR3WmE2WHFYeGE4Q25zUzhuV24rdzR3cFh1dk41azZ4YkVTL1RiWFNmT1NTCkk5djhiaDBDZ1lCVzJ3elYzQnFHbGpZM0I1TjJ4YWMzL0pOcDBQenBOYjlMTXBBYTBwMjdsZXJSeGNaeVZkbkUKMjhTcmdSQnpEVlNpMTNoakFRWVpZRzVEcTdTRjN5dUhkL05KREdVa00rd3NVa3RxUWFKQ1FBR0htL0ZDbWFnOApSQngrTklsck03c3BRanhjcStIZ2dIT3dYa09ETU5GWDNYL3hGM1RSekNpM0wxd1FZbzQwQUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: controller-2.39.3
  name: gate-controller-validation-webhook-keypair
  namespace: kong
type: kubernetes.io/tls
---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUx5MEkxRDZXMVQvZzRveW1IMmZSdll3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3T0RJek1Ea3lOekV3V2hjTgpNelF3T0RJeE1Ea3lOekV3V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOeU9aeGhNbHJlMmxKSW43L01YZU5LWENLeFcKZ2toUFgveFBoaFlpeVE3TlRRWnY5Z2VCVkFla2NhVXE1WGQxZGI3T0xtenZheldyU1hsQXh0WlVoaWtJRVk1ZwplMXNvck16NytzanFBcUpLVDQ3c3lTQlJxZE1RZ0M4WjNUb2w4My9nV0puelRuWWdPNEtVVkxBVTE0NUhUWFAwCmg5YmtnMUtQRWJFUndJS1AyZWtyTncwUHJkb2xESkNERk1Gbk9ISjFrUGN4QjUwZUZHQTllcGhBcnFSRk1BSEgKdjlXcXErRnMzbWhwOVljcGxHVHdtOStrWTRRdExRS0grZmxFa1NKZ2g4VU12djRQcTJsNmhZdFU2MmtzTmVWawpoeUZxZE8zTXN0bi9ZVUpEOS9veHlzVWVSRldjbGZBanlTbTJRWkk2dEN4N1ZBeFp2Nk5QVStUWVEwTUNBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCU01EbjZqTWZVUlFOWGU3anBBWDNSNQp6N05zNERBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU9XNUdtZ3JtRUJEUFZCdUVqdndPWXZLejVsMmR2YUc2CjdKSi9SdjNwaXRXRlkySlpUcVlzR2d3RkFIT1RjZjFXS1VYb0IySDFFYUxqb2JUYzFZaTF4SkRkN2wvOUZUaUcKN3htRFc5by9tNHFGdFFLdmdiVXh0aHg5VW8zcGlraDlaeElwekFXOE5jWHl1aXQrTDlURExlMDljRGtiR3JTaApKNExjT0NyQkgyd1BmbGd4YkV4UmQ4SW5xVGFWeGo3elZMaHhJZmJXVnNZU1ZoMjF1NnduL2J2OS9KbkpqUnk0CnY0R0o5V2plMU1KM3lva0NvenRicUprbkpsUUwvZkI0MnU3U1BJeVBZa3l4SnVPaWtJU3FSUWxzWGNyQXowWXQKajZDV0FpN01ZcVdtVUxoZVFUSFZDenViT245bU9oWW12cEJ6WEwyMzZBVmR5aGI1dUhSSkh3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBM0k1bkdFeVd0N2FVa2lmdjh4ZDQwcGNJckZhQ1NFOWYvRStHRmlMSkRzMU5CbS8yCkI0RlVCNlJ4cFNybGQzVjF2czR1Yk85ck5hdEplVURHMWxTR0tRZ1JqbUI3V3lpc3pQdjZ5T29Db2twUGp1ekoKSUZHcDB4Q0FMeG5kT2lYemYrQlltZk5PZGlBN2dwUlVzQlRYamtkTmMvU0gxdVNEVW84UnNSSEFnby9aNlNzMwpEUSt0MmlVTWtJTVV3V2M0Y25XUTl6RUhuUjRVWUQxNm1FQ3VwRVV3QWNlLzFhcXI0V3plYUduMWh5bVVaUENiCjM2UmpoQzB0QW9mNStVU1JJbUNIeFF5Ky9nK3JhWHFGaTFUcmFTdzE1V1NISVdwMDdjeXkyZjloUWtQMytqSEsKeFI1RVZaeVY4Q1BKS2JaQmtqcTBMSHRVREZtL28wOVQ1TmhEUXdJREFRQUJBb0lCQVFDZi9JQVdKVUJTNVJNaQpiZXZsaHdveW9ESS9hTVU2bExGSXdacS9KZDU0YVQzTlJKdlAxK1ZQWWQ2NTg4TGVBNHMwckRVSytpVG5tbWRDCm1GVmpsWTUzNXcxdEhObCtSNlFKVVdNYUtIMWVvYzdTR3pyTndjOFJkbSsxT3VxNXlsdTJUOU9WWU9OeVZuRTAKaUVwaUs4d3N2ZFlXSGJRSGtsMGNId0d6VXZBMUE3Q3BWSVhxTTFJSzE1aWxUYWRiUXR2b25Yb0ljcFJya09UdwphdzZDYzdyYnhLUEFDbVZnbWMwZlk4TVlKbGxFeldZeDA0dHRaTDk5VzRkYm0yRSs0KzBibUQxVmZTd1YyNVNWCnZJZ3VOaThMQmNMMDVJSWhGdmw1Wm9NMG1YT3U5ZVZ0RTQ3M05UOHg0OERyQXZockw2SC9yd3ZqaHlGZnJCRVkKYTg2YmpsckpBb0dCQVB5dlRMcWNPakRLd2JWbWdYL1h4ZHBUdlY4cm1ZSW1IazI1UXYzNlMzNWVDTGIzRFM2UQpxU1Y0ckpiRTFsZFBqQ1h0N1IwbndZK3liYUNiMVZ4QUROcUJHVEhpcytORUYwU01LRm5IbnlqNlByN3BZaXhWCjZYRGdnNy9WNFJGT0FzWTlsK2lyMXl0cndPNXkxWEg0bXZaZUpHdE10ajdoWVRBNFQrLzcwc1RGQW9HQkFOOXoKTVNVMFU0TjZiRno3QVByN09qK1ZqZ1ZMS25WbWc0ZUN4bGY5bEMrYW0wWWNuMTJFNjVEMzNzaVhCQ3lVd0ZEZQpFRHdTdjBFZjRwOXhKV2o1dUFkSGRFQ3B3MzF4M2NQVWt6VG80WXlrRXQvMlpUMkIvMWliSUpjbTRYblNHQnF3CldFV0FyNHlMeHF0MFFuMjh1QjNEUDVoLzhWZk1WT2VEeVJrWUFEaG5Bb0dCQUtiNmdNM2daMlBPMk9zeTdlaTUKZ2ZtZzFNZUxYRW54UHAxR0M4c2lGN2xPRXB3MTdmUVRqSE5DcDJxS2NNb0p1eWRsYndlUk9ndm5jU0p0V0RVNQo3a1NHZzB1LzcvZ0RDdzAxUVlUeXNXNjJ6N2dCS2VyNmF1VTR1RmVRMHNaSXN2U2x4emp1TmFadjhuS2dXQVNVCnNIS1dDNk1NY25KakpZSmo5QTgyYmpXeEFvR0JBSW92UVpoQmVOZ1pVSVJiMGFwa3pRdmZZQm5UOXlqdFFhLysKNXN3cGpJZTM5QWh5MFBkVHFSNVl1NVNQRjh5K0hRU2xuNktXOFdIRDV6RTFGcTZKcUE0UVdVdFg4UVpWOFpBVwptUWFpY2tHNGdkZXhGOERtOE5PSjg2aW1LZEJkWmZ5elM1T0gxb2h6TkdSNW5Ga0g2VkMybTFDaTVzeW1GMmVwCkx5YnVtY3hIQW9HQUhTaUhmalgwTlFUZjIyRnVwRWVheW94Z0hmR2RjTFZtVmdweUZlZWwyOFFNQTBNbldSelEKYzlINGFPWHN4VzlBZ1QrRXZFZjJaNTFyS3dsbUF4b2tvbVVQYXpUb2dzRHIrNHZEWnNkdkZNbzA5aUM0MzNLUwpUWkhZekxPcjQ1ZmdBbzZoa0V1d3lrR0xwZGhoNTdlbjYxYjNaWjNpZGc4b0gxVDZqb0l5aUFnPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: gateway-2.39.3
  name: gate-gateway-validation-webhook-ca-keypair
  namespace: kong
type: kubernetes.io/tls
---
apiVersion: v1
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjVENDQWxtZ0F3SUJBZ0lSQUxFZno5dDBzektJcjhjOWEzRDE1Tkl3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3T0RJek1Ea3lOekV4V2hjTgpNelF3T0RJeE1Ea3lOekV4V2pBek1URXdMd1lEVlFRREV5aG5ZWFJsTFdkaGRHVjNZWGt0ZG1Gc2FXUmhkR2x2CmJpMTNaV0pvYjI5ckxtdHZibWN1YzNaak1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQXYyZWNidzhOV1RPbkJ2bytwaTd6YlI2RFNnWGpjQTI1ZkJSSDFWVkFIQmQyQlhEVy9rRDZSelJyRG5haQppelVKKzNJVW1qaTg3cmxnYzc5eVpMUExad0pPa1dLUUMvSkJrZTdoaWdHcXFFQ2JKQ0RuN3EvMHJJSzhDelo3Ckt5L0x5NCtXcXN6MGxHNFRVZW5ValRBT1l2amxOblV1RHpCMVRQMXRCYmlmSVg2R1RoTFNENE1NVXRmclJ1NmoKd0lpR21mY2lBU0djODE5OHYwRzVPU25JL1lwaHZ2UmROSTdyZ3plMUNrSklOSjNkZ0s5ajErVzJVUlhJbVZsVgpCOXdlQTBoN0hKM0l2RVZ3RnE1dXhoMVdNUE9Zd1hkNjN0V3pkZnBiVDlDbDV4cXNodEJqcmFBUUU5aG5UY1NkCmJKYUR1MUQ2SXdHNHJhNUx4VmE4ZlRCeWpRSURBUUFCbzRHV01JR1RNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVgpIU01FR0RBV2dCU01EbjZqTWZVUlFOWGU3anBBWDNSNXo3TnM0REF6QmdOVkhSRUVMREFxZ2lobllYUmxMV2RoCmRHVjNZWGt0ZG1Gc2FXUmhkR2x2YmkxM1pXSm9iMjlyTG10dmJtY3VjM1pqTUEwR0NTcUdTSWIzRFFFQkN3VUEKQTRJQkFRQnhkazRodlJsblNMRnhhMGdvZy80MVNqcDNYekFweWE5NlAxa2Y0QkhHT3RFOSszOHpXeU5qYnh3LwprRUZUVnFmT21JNGlGY0hnV0NFUm1US0I0eXFVdE9UeGRUTU5RNEk0Uk1tOEVsVDVQNlp1a2VxMno1RnZZM2xmCnhwYVdJQ1ZyaTc3M1RiVktUUWJCckU2MkEwSXdsQ0xsUGNlWVN0RkpDWmRFUko1SlcrOGdLemoyZGczZEhTNlQKNE1LODR6MlZhM0Z0enJiNnJOMGd3ZmY5YW0yTjVBMXQ2engrVkJvNEFnQWo2RmJVdWVKU0pKb1Vta1hyQVBQMQpYSTNvWnNIaDlJcmxyNVZmMTM0RU5YUUU2M2I4MmloT0lkeXFEcjZvSkp1ODVnNFlpekJKNlRIWnc0RjNrYUJBClJ2NVJ1dHVMemFvLzU0RUxVd0N6NW5lWFM3THoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdjJlY2J3OE5XVE9uQnZvK3BpN3piUjZEU2dYamNBMjVmQlJIMVZWQUhCZDJCWERXCi9rRDZSelJyRG5haWl6VUorM0lVbWppODdybGdjNzl5WkxQTFp3Sk9rV0tRQy9KQmtlN2hpZ0dxcUVDYkpDRG4KN3EvMHJJSzhDelo3S3kvTHk0K1dxc3owbEc0VFVlblVqVEFPWXZqbE5uVXVEekIxVFAxdEJiaWZJWDZHVGhMUwpENE1NVXRmclJ1Nmp3SWlHbWZjaUFTR2M4MTk4djBHNU9TbkkvWXBodnZSZE5JN3JnemUxQ2tKSU5KM2RnSzlqCjErVzJVUlhJbVZsVkI5d2VBMGg3SEozSXZFVndGcTV1eGgxV01QT1l3WGQ2M3RXemRmcGJUOUNsNXhxc2h0QmoKcmFBUUU5aG5UY1NkYkphRHUxRDZJd0c0cmE1THhWYThmVEJ5alFJREFRQUJBb0lCQVFDVWUvTnVjSlhoWW1Hcgoxd3dzN1hWb2JHaGJUM0FlS0hlQlcxWlNtQnp3N2Y1ZndDYjQvVDFyYWEyM2ZhOGhJUmRLV2pqRFgwcXFRMk1nCnlCOGRJaUdrR3JVS3NoU2ZQK05BSzdvSnpyc3VaVmcxVWRXN1pBTUNwVFR0MmVqNUdzNFZiNkhwaExBa1NiUngKTWwzeTNabjdpNng5YjdBNGxsWVpVT3gzcUw3Q1FzVTJqclVQVXpyaWhZVXd0NlRDSVRsNnIzVC8vbmFib0p2bQpmdnpmT3pQVkNxbVhpOTVLVnJmRWNjeFF5blZXMHgrN3pPSEFJYWhrK3A5TDZwRm9ObmZVeEhoZHVRNlRkQnlSCjZTTUpSL1hRVlNrL05XVWQ2WEEvMldtWHFYTGFkbWhtUzFUMUlFSUVxb0pGVFNZSVBHWWVHSk9iMVJBSXJjcEIKVytmTjBHNWhBb0dCQU1rcE5mM3RQZ3NkTDdoL0syU1c1blJTeWgvT0dnRVdIZDhBOW5jeXN4YVlYcGtvV1AzQgpSQ2FBYzZwR2JqdzRwTGd4SDR1am50bCtid04ycEI2cldTM1Z1S3lBTWlZcTZsV3pzWjM3Q1V5K0Uzci82UE0xCkVhV3lhcW1GSmUySEwyM3Q0WXhiYXBES0tPREFOYldocGJBemZnVEtIWVEwZHo4dGFKN2Y4TjcxQW9HQkFQT1YKaGVBNU5YMXBaZFdnUHhaeXdzdytEcVJxRzgxcjJ1ZENIbTA5LzJlMGpOWDhlQWFjaFdlNTFPR2VWaWlSZXEwYQpja1pDeFhwTnkzaVV3MlVxWitEVVJPYTBPRi9GbXBGbFlYeWJHMTkwai9uMm1HN0lPMDhrRUkwQTIweGFTdzFPCjY1eTVGRVlHMXR5YUxmdnp3VGMza1Y2MnlBbkQ3TDBNekgwMHR0WTVBb0dBR1M1N2Y4b1BGajBWR0Rkekt5aG8KdU84VU5sOEtpbEJHZFFBZDJsWVNiU1d0MGVabkhYendGeEhGYU85Z0pWSEI3UHpaUWhXOWNPU082UlFVLzNIYgp2QTBoRFJjUE1BLzNQYnM4NU5Ya0dDTkROUWFNRnNYeDY1Z21HZ3A4OFBzWFNOK2FlSU9KRjQ3M0J3dUlyYkFLCm1jQVlhbWtTd05ZQWgzd2J1S2UzODNFQ2dZQkhROG5GVGplT0Y1WUpxRGFNOU1wMVF2cTVzNm1xc2hGN2MyYS8KZzFJRUgxak5DbTU3VUxQZkl3bGJjUjI0Qk1nbGVRVlI5UnNkcTBFS2FFdTZmMnVnNWJtNjNhTllzZEdGRkdvdgpNSm9UbFdEQ094bGg0QWNxSWwwTlErRGxOODJaZVN1SjBNUlRzSkNRUGpPUjhVRG9UTU9sT0VqU1FwWXl3Vm5hCmo5K21VUUtCZ0ZScWpWQnpRU2U0Q2Z4OW9ER002bUVRRGRXQ2tybDd6d1lpNENsSEhuNzVGZmdldG0yblpsMW8KS204YWJja0FzUVR0d2s2b1RqVUh4RzcxTExqb3d1cXg1SklNeXp6aElzOVNCdHVDTWhiaU5ZekZjckUvaWlwNQp0aXRxV3lxeUV0cmY3dTVaVTdmVHk1TXpwQm5DcVJDQy85RnlaeXhvMzEyemJsQVRCZjVyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: gateway-2.39.3
  name: gate-gateway-validation-webhook-keypair
  namespace: kong
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: controller-2.39.3
  name: gate-controller-validation-webhook
  namespace: kong
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: controller-2.39.3
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: gateway-2.39.3
  name: gate-gateway-admin
  namespace: kong
spec:
  clusterIP: None
  ports:
  - name: kong-admin-tls
    port: 8444
    protocol: TCP
    targetPort: 8444
  selector:
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: gate
    app.kubernetes.io/name: gateway
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: gateway-2.39.3
  name: gate-gateway-manager
  namespace: kong
spec:
  ports:
  - name: kong-manager
    port: 8002
    protocol: TCP
    targetPort: 8002
  - name: kong-manager-tls
    port: 8445
    protocol: TCP
    targetPort: 8445
  selector:
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: gate
    app.kubernetes.io/name: gateway
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: "3.6"
    enable-metrics: "true"
    helm.sh/chart: gateway-2.39.3
  name: gate-gateway-proxy
  namespace: kong
spec:
  ports:
  - name: kong-proxy
    port: 80
    protocol: TCP
    targetPort: 8000
  - name: kong-proxy-tls
    port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: gate
    app.kubernetes.io/name: gateway
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: gateway-2.39.3
  name: gate-gateway-validation-webhook
  namespace: kong
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: gateway-2.39.3
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: echo
  name: echo
spec:
  ports:
  - name: tcp
    port: 1025
    protocol: TCP
    targetPort: 1025
  - name: udp
    port: 1026
    protocol: TCP
    targetPort: 1026
  - name: http
    port: 1027
    protocol: TCP
    targetPort: 1027
  selector:
    app: echo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: controller-2.39.3
  name: gate-controller
  namespace: kong
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: gate
      app.kubernetes.io/name: controller
  template:
    metadata:
      annotations:
        kuma.io/gateway: enabled
        kuma.io/service-account-token-volume: gate-controller-token
        traffic.kuma.io/exclude-outbound-ports: "8444"
        traffic.sidecar.istio.io/excludeOutboundPorts: "8444"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app: gate-controller
        app.kubernetes.io/component: app
        app.kubernetes.io/instance: gate
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: controller
        app.kubernetes.io/version: "3.6"
        helm.sh/chart: controller-2.39.3
        version: "3.6"
    spec:
      automountServiceAccountToken: false
      containers:
      - args: null
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CONTROLLER_ADMISSION_WEBHOOK_LISTEN
          value: 0.0.0.0:8080
        - name: CONTROLLER_ELECTION_ID
          value: kong-ingress-controller-leader-kong
        - name: CONTROLLER_INGRESS_CLASS
          value: kong
        - name: CONTROLLER_KONG_ADMIN_SVC
          value: kong/gate-gateway-admin
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: kong/gate-gateway-proxy
        image: kong/kubernetes-ingress-controller:3.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: ingress-controller
        ports:
        - containerPort: 8080
          name: webhook
          protocol: TCP
        - containerPort: 10255
          name: cmetrics
          protocol: TCP
        - containerPort: 10254
          name: cstatus
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /admission-webhook
          name: webhook-cert
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: gate-controller-token
          readOnly: true
      securityContext: {}
      serviceAccountName: gate-controller
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir:
          sizeLimit: 256Mi
        name: gate-controller-prefix-dir
      - emptyDir:
          sizeLimit: 1Gi
        name: gate-controller-tmp
      - name: gate-controller-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: webhook-cert
        secret:
          secretName: gate-controller-validation-webhook-keypair
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: gateway-2.39.3
  name: gate-gateway
  namespace: kong
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: gate
      app.kubernetes.io/name: gateway
  template:
    metadata:
      annotations:
        kuma.io/gateway: enabled
        kuma.io/service-account-token-volume: gate-gateway-token
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app: gate-gateway
        app.kubernetes.io/component: app
        app.kubernetes.io/instance: gate
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: gateway
        app.kubernetes.io/version: "3.6"
        helm.sh/chart: gateway-2.39.3
        version: "3.6"
    spec:
      automountServiceAccountToken: false
      containers:
      - args: null
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CONTROLLER_ADMISSION_WEBHOOK_LISTEN
          value: 0.0.0.0:8080
        - name: CONTROLLER_ELECTION_ID
          value: kong-ingress-controller-leader-kong
        - name: CONTROLLER_INGRESS_CLASS
          value: kong
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_KONG_ADMIN_URL
          value: https://localhost:8444
        - name: CONTROLLER_PUBLISH_SERVICE
          value: kong/gate-gateway-proxy
        image: kong/kubernetes-ingress-controller:3.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: ingress-controller
        ports:
        - containerPort: 8080
          name: webhook
          protocol: TCP
        - containerPort: 10255
          name: cmetrics
          protocol: TCP
        - containerPort: 10254
          name: cstatus
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /admission-webhook
          name: webhook-cert
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: gate-gateway-token
          readOnly: true
      - env:
        - name: KONG_ADMIN_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_ADMIN_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ADMIN_LISTEN
          value: 0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LUA_PACKAGE_PATH
          value: /opt/?.lua;/opt/?/init.lua;;
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_PORTAL_API_ERROR_LOG
          value: /dev/stderr
        - name: KONG_PORT_MAPS
          value: 80:8000, 443:8443
        - name: KONG_PREFIX
          value: /kong_prefix/
        - name: KONG_PROXY_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_PROXY_ERROR_LOG
          value: /dev/stderr
        - name: KONG_PROXY_LISTEN
          value: 0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2
            ssl
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: /dev/stdout basic
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ROLE
          value: traditional
        - name: KONG_ROUTER_FLAVOR
          value: traditional
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: /dev/stderr
        - name: KONG_STATUS_LISTEN
          value: 0.0.0.0:8100, [::]:8100
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        image: kong:3.6
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: proxy
        ports:
        - containerPort: 8444
          name: admin-tls
          protocol: TCP
        - containerPort: 8000
          name: proxy
          protocol: TCP
        - containerPort: 8443
          name: proxy-tls
          protocol: TCP
        - containerPort: 8100
          name: status
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/ready
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /kong_prefix/
          name: gate-gateway-prefix-dir
        - mountPath: /tmp
          name: gate-gateway-tmp
      initContainers:
      - command:
        - rm
        - -vrf
        - $KONG_PREFIX/pids
        env:
        - name: KONG_ADMIN_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_ADMIN_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ADMIN_LISTEN
          value: 0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_KIC
          value: "on"
        - name: KONG_LUA_PACKAGE_PATH
          value: /opt/?.lua;/opt/?/init.lua;;
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_PORTAL_API_ERROR_LOG
          value: /dev/stderr
        - name: KONG_PORT_MAPS
          value: 80:8000, 443:8443
        - name: KONG_PREFIX
          value: /kong_prefix/
        - name: KONG_PROXY_ACCESS_LOG
          value: /dev/stdout
        - name: KONG_PROXY_ERROR_LOG
          value: /dev/stderr
        - name: KONG_PROXY_LISTEN
          value: 0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2
            ssl
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: /dev/stdout basic
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: /dev/stderr
        - name: KONG_ROLE
          value: traditional
        - name: KONG_ROUTER_FLAVOR
          value: traditional
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: /dev/stderr
        - name: KONG_STATUS_LISTEN
          value: 0.0.0.0:8100, [::]:8100
        - name: KONG_STREAM_LISTEN
          value: "off"
        image: kong:3.6
        imagePullPolicy: IfNotPresent
        name: clear-stale-pid
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /kong_prefix/
          name: gate-gateway-prefix-dir
        - mountPath: /tmp
          name: gate-gateway-tmp
      securityContext: {}
      serviceAccountName: gate-gateway
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir:
          sizeLimit: 256Mi
        name: gate-gateway-prefix-dir
      - emptyDir:
          sizeLimit: 1Gi
        name: gate-gateway-tmp
      - name: gate-gateway-token
        projected:
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - name: webhook-cert
        secret:
          secretName: gate-gateway-validation-webhook-keypair
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: echo
  name: echo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo
  strategy: {}
  template:
    metadata:
      labels:
        app: echo
    spec:
      containers:
      - env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: kong/go-echo:latest
        name: echo
        ports:
        - containerPort: 1025
        - containerPort: 1026
        - containerPort: 1027
        resources: {}
---
apiVersion: configuration.konghq.com/v1
config:
  error_message: Cannot process your request due to system overload. Please try again
    later.
  minute: 10
  policy: local
kind: KongPlugin
metadata:
  annotations:
    kubernetes.io/ingress.class: kong
  name: rate-limit-global
  namespace: kong
plugin: rate-limiting
---
apiVersion: configuration.konghq.com/v1
config:
  error_message: Cannot create wallet in less than 1 minute per IP. Please try again
    later.
  minute: 1
  policy: local
kind: KongPlugin
metadata:
  annotations:
    kubernetes.io/ingress.class: kong
  name: rate-limit-wallet-create
  namespace: kong
plugin: rate-limiting
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: kong
  namespace: kong
spec:
  gatewayClassName: kong
  listeners:
  - name: http
    port: 80
    protocol: HTTP
---
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  annotations:
    konghq.com/gatewayclass-unmanaged: "true"
  name: kong
  namespace: kong
spec:
  controllerName: konghq.com/kic-gateway-controller
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  annotations:
    konghq.com/plugins: rate-limit-global
    konghq.com/strip-path: "true"
  name: list-assets
spec:
  parentRefs:
  - name: kong
    namespace: kong
  rules:
  - backendRefs:
    - kind: Service
      name: echo
      port: 1027
    matches:
    - path:
        type: PathPrefix
        value: /assets
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  annotations:
    konghq.com/plugins: rate-limit-global,rate-limit-wallet-create
    konghq.com/strip-path: "true"
  name: wallet-create
spec:
  parentRefs:
  - name: kong
    namespace: kong
  rules:
  - backendRefs:
    - kind: Service
      name: echo
      port: 1027
    matches:
    - path:
        type: PathPrefix
        value: /wallet
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: controller
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: controller-2.39.3
  name: gate-controller-validations
  namespace: kong
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUt3c0RXdmRmamZhcWgvYjRCQVJ6aWN3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3T0RJek1Ea3lOekV4V2hjTgpNelF3T0RJeE1Ea3lOekV4V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNU29VWlhOZkZqSGtEb0p2ZEFWc21pWWNtVU8KUzRQZkVqajcxcUwzWHRJRlpGRTkvMjg0WmZOd2NDaXA3ajFzZEtjMG9ldmV6T2RzU1pURHVKbGhQMmZpdWd5ZQpTalc2Q2x5L2hWTUZYeGkwVjlNbzlFek1Xazh4OGJlSmtEbE1LT2h3NXRmUExQeXJscC9EVDdJVkRkaUtKallRClFCTUJjd1hFQlUwM2k4OW16bURIMS9hTTlwdk1lMy9HMzA4Z0JuakhnR2V0enErTkVDd1prM3c5VWNkMTY5L0UKTWUydFZzODVGSnhrR1N4MFl0T0p6YzYzRmFBeTRYcUZiVkZpcytvQVRib3g3NVFIVi93TDUxb0U0NDdSOTUxcApvbFRHWnQ1WWV0TjhoaXpQZW4rYUlOVjZZSE16MWxEVWJSK2VzUHMzWXdRR2xEamRyOXBQMk1aYmJuRUNBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVHpNZ1hQK3NWTjNyMDdsNDJ6MVhqeQp3ZWlrSURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWY5WnVMUnhJcW4ybnpZc3dhN1BjL3pHUHVlWE9MaXVwCmdNaHJPN0V6Y1pJLzF3ZUlZeS9zdGJCUEduckRvcXZhTndmR3J0T25aYXpSZkF4UlpwR1lkck5pNmIyamNSSXgKV1hnc3F6eDAyc1BjUkZGZ2lGdVlrU3ZxdEhTdWtzRFNndVBhZTNvdUV0d1dFalQ5L24vUm83SmEyU1k2RlQxaApLOVBubklsdEJCbGwrRnBvbTFrTTJ3Y08vMGh0NHRXM3NQZGhSM1hFWkt4LzRDS0I4a0l1QlpVNWlEVnBTMThrCk1rdXdOczFMUDRpcDFnUmJ5NUhBRXNya0Z2VW52b0VMN01ucDJJcjU4cERyM1JwUFlvRWlkZE5samw5TDZFb3EKbWpOd09uc0YzYXUwMnFqU2FNVUdtazBvSE5ndG5jTk5Gb012bkl6N0tvS1pORjk0ZFJMcDdRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: gate-controller-validation-webhook
      namespace: kong
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.credentials.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: konghq.com/credential
      operator: Exists
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUt3c0RXdmRmamZhcWgvYjRCQVJ6aWN3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3T0RJek1Ea3lOekV4V2hjTgpNelF3T0RJeE1Ea3lOekV4V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNU29VWlhOZkZqSGtEb0p2ZEFWc21pWWNtVU8KUzRQZkVqajcxcUwzWHRJRlpGRTkvMjg0WmZOd2NDaXA3ajFzZEtjMG9ldmV6T2RzU1pURHVKbGhQMmZpdWd5ZQpTalc2Q2x5L2hWTUZYeGkwVjlNbzlFek1Xazh4OGJlSmtEbE1LT2h3NXRmUExQeXJscC9EVDdJVkRkaUtKallRClFCTUJjd1hFQlUwM2k4OW16bURIMS9hTTlwdk1lMy9HMzA4Z0JuakhnR2V0enErTkVDd1prM3c5VWNkMTY5L0UKTWUydFZzODVGSnhrR1N4MFl0T0p6YzYzRmFBeTRYcUZiVkZpcytvQVRib3g3NVFIVi93TDUxb0U0NDdSOTUxcApvbFRHWnQ1WWV0TjhoaXpQZW4rYUlOVjZZSE16MWxEVWJSK2VzUHMzWXdRR2xEamRyOXBQMk1aYmJuRUNBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVHpNZ1hQK3NWTjNyMDdsNDJ6MVhqeQp3ZWlrSURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWY5WnVMUnhJcW4ybnpZc3dhN1BjL3pHUHVlWE9MaXVwCmdNaHJPN0V6Y1pJLzF3ZUlZeS9zdGJCUEduckRvcXZhTndmR3J0T25aYXpSZkF4UlpwR1lkck5pNmIyamNSSXgKV1hnc3F6eDAyc1BjUkZGZ2lGdVlrU3ZxdEhTdWtzRFNndVBhZTNvdUV0d1dFalQ5L24vUm83SmEyU1k2RlQxaApLOVBubklsdEJCbGwrRnBvbTFrTTJ3Y08vMGh0NHRXM3NQZGhSM1hFWkt4LzRDS0I4a0l1QlpVNWlEVnBTMThrCk1rdXdOczFMUDRpcDFnUmJ5NUhBRXNya0Z2VW52b0VMN01ucDJJcjU4cERyM1JwUFlvRWlkZE5samw5TDZFb3EKbWpOd09uc0YzYXUwMnFqU2FNVUdtazBvSE5ndG5jTk5Gb012bkl6N0tvS1pORjk0ZFJMcDdRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: gate-controller-validation-webhook
      namespace: kong
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.plugins.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUt3c0RXdmRmamZhcWgvYjRCQVJ6aWN3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3T0RJek1Ea3lOekV4V2hjTgpNelF3T0RJeE1Ea3lOekV4V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNU29VWlhOZkZqSGtEb0p2ZEFWc21pWWNtVU8KUzRQZkVqajcxcUwzWHRJRlpGRTkvMjg0WmZOd2NDaXA3ajFzZEtjMG9ldmV6T2RzU1pURHVKbGhQMmZpdWd5ZQpTalc2Q2x5L2hWTUZYeGkwVjlNbzlFek1Xazh4OGJlSmtEbE1LT2h3NXRmUExQeXJscC9EVDdJVkRkaUtKallRClFCTUJjd1hFQlUwM2k4OW16bURIMS9hTTlwdk1lMy9HMzA4Z0JuakhnR2V0enErTkVDd1prM3c5VWNkMTY5L0UKTWUydFZzODVGSnhrR1N4MFl0T0p6YzYzRmFBeTRYcUZiVkZpcytvQVRib3g3NVFIVi93TDUxb0U0NDdSOTUxcApvbFRHWnQ1WWV0TjhoaXpQZW4rYUlOVjZZSE16MWxEVWJSK2VzUHMzWXdRR2xEamRyOXBQMk1aYmJuRUNBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVHpNZ1hQK3NWTjNyMDdsNDJ6MVhqeQp3ZWlrSURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWY5WnVMUnhJcW4ybnpZc3dhN1BjL3pHUHVlWE9MaXVwCmdNaHJPN0V6Y1pJLzF3ZUlZeS9zdGJCUEduckRvcXZhTndmR3J0T25aYXpSZkF4UlpwR1lkck5pNmIyamNSSXgKV1hnc3F6eDAyc1BjUkZGZ2lGdVlrU3ZxdEhTdWtzRFNndVBhZTNvdUV0d1dFalQ5L24vUm83SmEyU1k2RlQxaApLOVBubklsdEJCbGwrRnBvbTFrTTJ3Y08vMGh0NHRXM3NQZGhSM1hFWkt4LzRDS0I4a0l1QlpVNWlEVnBTMThrCk1rdXdOczFMUDRpcDFnUmJ5NUhBRXNya0Z2VW52b0VMN01ucDJJcjU4cERyM1JwUFlvRWlkZE5samw5TDZFb3EKbWpOd09uc0YzYXUwMnFqU2FNVUdtazBvSE5ndG5jTk5Gb012bkl6N0tvS1pORjk0ZFJMcDdRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: gate-controller-validation-webhook
      namespace: kong
  failurePolicy: Ignore
  name: validations.kong.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongplugins
    - kongclusterplugins
    - kongingresses
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  - apiGroups:
    - gateway.networking.k8s.io
    apiVersions:
    - v1alpha2
    - v1beta1
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
    - httproutes
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: gate
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: gateway
    app.kubernetes.io/version: "3.6"
    helm.sh/chart: gateway-2.39.3
  name: gate-gateway-validations
  namespace: kong
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUx5MEkxRDZXMVQvZzRveW1IMmZSdll3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3T0RJek1Ea3lOekV3V2hjTgpNelF3T0RJeE1Ea3lOekV3V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOeU9aeGhNbHJlMmxKSW43L01YZU5LWENLeFcKZ2toUFgveFBoaFlpeVE3TlRRWnY5Z2VCVkFla2NhVXE1WGQxZGI3T0xtenZheldyU1hsQXh0WlVoaWtJRVk1ZwplMXNvck16NytzanFBcUpLVDQ3c3lTQlJxZE1RZ0M4WjNUb2w4My9nV0puelRuWWdPNEtVVkxBVTE0NUhUWFAwCmg5YmtnMUtQRWJFUndJS1AyZWtyTncwUHJkb2xESkNERk1Gbk9ISjFrUGN4QjUwZUZHQTllcGhBcnFSRk1BSEgKdjlXcXErRnMzbWhwOVljcGxHVHdtOStrWTRRdExRS0grZmxFa1NKZ2g4VU12djRQcTJsNmhZdFU2MmtzTmVWawpoeUZxZE8zTXN0bi9ZVUpEOS9veHlzVWVSRldjbGZBanlTbTJRWkk2dEN4N1ZBeFp2Nk5QVStUWVEwTUNBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCU01EbjZqTWZVUlFOWGU3anBBWDNSNQp6N05zNERBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU9XNUdtZ3JtRUJEUFZCdUVqdndPWXZLejVsMmR2YUc2CjdKSi9SdjNwaXRXRlkySlpUcVlzR2d3RkFIT1RjZjFXS1VYb0IySDFFYUxqb2JUYzFZaTF4SkRkN2wvOUZUaUcKN3htRFc5by9tNHFGdFFLdmdiVXh0aHg5VW8zcGlraDlaeElwekFXOE5jWHl1aXQrTDlURExlMDljRGtiR3JTaApKNExjT0NyQkgyd1BmbGd4YkV4UmQ4SW5xVGFWeGo3elZMaHhJZmJXVnNZU1ZoMjF1NnduL2J2OS9KbkpqUnk0CnY0R0o5V2plMU1KM3lva0NvenRicUprbkpsUUwvZkI0MnU3U1BJeVBZa3l4SnVPaWtJU3FSUWxzWGNyQXowWXQKajZDV0FpN01ZcVdtVUxoZVFUSFZDenViT245bU9oWW12cEJ6WEwyMzZBVmR5aGI1dUhSSkh3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: gate-gateway-validation-webhook
      namespace: kong
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.credentials.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: konghq.com/credential
      operator: Exists
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUx5MEkxRDZXMVQvZzRveW1IMmZSdll3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3T0RJek1Ea3lOekV3V2hjTgpNelF3T0RJeE1Ea3lOekV3V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOeU9aeGhNbHJlMmxKSW43L01YZU5LWENLeFcKZ2toUFgveFBoaFlpeVE3TlRRWnY5Z2VCVkFla2NhVXE1WGQxZGI3T0xtenZheldyU1hsQXh0WlVoaWtJRVk1ZwplMXNvck16NytzanFBcUpLVDQ3c3lTQlJxZE1RZ0M4WjNUb2w4My9nV0puelRuWWdPNEtVVkxBVTE0NUhUWFAwCmg5YmtnMUtQRWJFUndJS1AyZWtyTncwUHJkb2xESkNERk1Gbk9ISjFrUGN4QjUwZUZHQTllcGhBcnFSRk1BSEgKdjlXcXErRnMzbWhwOVljcGxHVHdtOStrWTRRdExRS0grZmxFa1NKZ2g4VU12djRQcTJsNmhZdFU2MmtzTmVWawpoeUZxZE8zTXN0bi9ZVUpEOS9veHlzVWVSRldjbGZBanlTbTJRWkk2dEN4N1ZBeFp2Nk5QVStUWVEwTUNBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCU01EbjZqTWZVUlFOWGU3anBBWDNSNQp6N05zNERBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU9XNUdtZ3JtRUJEUFZCdUVqdndPWXZLejVsMmR2YUc2CjdKSi9SdjNwaXRXRlkySlpUcVlzR2d3RkFIT1RjZjFXS1VYb0IySDFFYUxqb2JUYzFZaTF4SkRkN2wvOUZUaUcKN3htRFc5by9tNHFGdFFLdmdiVXh0aHg5VW8zcGlraDlaeElwekFXOE5jWHl1aXQrTDlURExlMDljRGtiR3JTaApKNExjT0NyQkgyd1BmbGd4YkV4UmQ4SW5xVGFWeGo3elZMaHhJZmJXVnNZU1ZoMjF1NnduL2J2OS9KbkpqUnk0CnY0R0o5V2plMU1KM3lva0NvenRicUprbkpsUUwvZkI0MnU3U1BJeVBZa3l4SnVPaWtJU3FSUWxzWGNyQXowWXQKajZDV0FpN01ZcVdtVUxoZVFUSFZDenViT245bU9oWW12cEJ6WEwyMzZBVmR5aGI1dUhSSkh3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: gate-gateway-validation-webhook
      namespace: kong
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.plugins.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUx5MEkxRDZXMVQvZzRveW1IMmZSdll3RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF3T0RJek1Ea3lOekV3V2hjTgpNelF3T0RJeE1Ea3lOekV3V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOeU9aeGhNbHJlMmxKSW43L01YZU5LWENLeFcKZ2toUFgveFBoaFlpeVE3TlRRWnY5Z2VCVkFla2NhVXE1WGQxZGI3T0xtenZheldyU1hsQXh0WlVoaWtJRVk1ZwplMXNvck16NytzanFBcUpLVDQ3c3lTQlJxZE1RZ0M4WjNUb2w4My9nV0puelRuWWdPNEtVVkxBVTE0NUhUWFAwCmg5YmtnMUtQRWJFUndJS1AyZWtyTncwUHJkb2xESkNERk1Gbk9ISjFrUGN4QjUwZUZHQTllcGhBcnFSRk1BSEgKdjlXcXErRnMzbWhwOVljcGxHVHdtOStrWTRRdExRS0grZmxFa1NKZ2g4VU12djRQcTJsNmhZdFU2MmtzTmVWawpoeUZxZE8zTXN0bi9ZVUpEOS9veHlzVWVSRldjbGZBanlTbTJRWkk2dEN4N1ZBeFp2Nk5QVStUWVEwTUNBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCU01EbjZqTWZVUlFOWGU3anBBWDNSNQp6N05zNERBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU9XNUdtZ3JtRUJEUFZCdUVqdndPWXZLejVsMmR2YUc2CjdKSi9SdjNwaXRXRlkySlpUcVlzR2d3RkFIT1RjZjFXS1VYb0IySDFFYUxqb2JUYzFZaTF4SkRkN2wvOUZUaUcKN3htRFc5by9tNHFGdFFLdmdiVXh0aHg5VW8zcGlraDlaeElwekFXOE5jWHl1aXQrTDlURExlMDljRGtiR3JTaApKNExjT0NyQkgyd1BmbGd4YkV4UmQ4SW5xVGFWeGo3elZMaHhJZmJXVnNZU1ZoMjF1NnduL2J2OS9KbkpqUnk0CnY0R0o5V2plMU1KM3lva0NvenRicUprbkpsUUwvZkI0MnU3U1BJeVBZa3l4SnVPaWtJU3FSUWxzWGNyQXowWXQKajZDV0FpN01ZcVdtVUxoZVFUSFZDenViT245bU9oWW12cEJ6WEwyMzZBVmR5aGI1dUhSSkh3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: gate-gateway-validation-webhook
      namespace: kong
  failurePolicy: Ignore
  name: validations.kong.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongplugins
    - kongclusterplugins
    - kongingresses
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  - apiGroups:
    - networking.k8s.io
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  - apiGroups:
    - gateway.networking.k8s.io
    apiVersions:
    - v1alpha2
    - v1beta1
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
    - httproutes
  sideEffects: None
